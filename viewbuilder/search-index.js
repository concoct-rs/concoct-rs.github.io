var searchIndex = JSON.parse('{\
"accesskit":{"doc":"","t":"NEEIDDNNNENNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNDNNNNNNNNENNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSNNNNNNNNNNNNNNNNNNENNNNNSNNNNNNNNENNNNNNNNNNNNNNNNNNNENENNNNNNNNNNNNNNNNNENDDDDGNNNSNNENNNNNNNNNDNNNNNNNNNDNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNENNNNNNNNNNNNNNNNNNNNNEEENNDDNNNNNNNNNNDNNNNDNNNNNNNNNDNENNNNSSSSLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMM","n":["Abbr","Action","ActionData","ActionHandler","ActionRequest","Affine","Alert","AlertDialog","Application","AriaCurrent","AriaDescription","Article","Ascending","Assertive","Attribute","AttributeExplicitlyEmpty","Audio","Banner","Blockquote","Blur","BottomToTop","Button","ButtonLabel","Canvas","Caption","Caption","Caret","Cell","Center","Check","CheckBox","CheckedState","Circle","Click","ClickAncestor","Client","Code","Collapse","ColorWell","Column","ColumnHeader","ComboBoxGrouping","ComboBoxMenuButton","Comment","Complementary","ContentDeletion","ContentInfo","ContentInsertion","Contents","CustomAction","CustomAction","CustomAction","Dashed","Date","Date","DateTime","Decrement","Default","DefaultActionVerb","Definition","Descending","DescriptionFrom","DescriptionList","DescriptionListDetail","DescriptionListTerm","Details","Dialog","Dialog","Directory","Disc","DisclosureTriangle","DocAbstract","DocAcknowledgements","DocAfterword","DocAppendix","DocBackLink","DocBiblioEntry","DocBiblioRef","DocBibliography","DocChapter","DocColophon","DocConclusion","DocCover","DocCredit","DocCredits","DocDedication","DocEndnote","DocEndnotes","DocEpigraph","DocEpilogue","DocErrata","DocExample","DocFootnote","DocForeword","DocGlossRef","DocGlossary","DocIndex","DocIntroduction","DocNoteRef","DocNotice","DocPageBreak","DocPageFooter","DocPageHeader","DocPageList","DocPart","DocPreface","DocPrologue","DocPullquote","DocQna","DocSubtitle","DocTip","DocToc","Document","Dotted","Double","EmbeddedObject","Emphasis","Expand","FLIP_X","FLIP_Y","False","False","Feed","Figure","FigureCaption","Focus","Focus","Footer","FooterAsNonLandmark","Form","GenericContainer","Grammar","GraphicsDocument","GraphicsObject","GraphicsSymbol","Grid","Grid","Group","HasPopup","Header","HeaderAsNonLandmark","Heading","HideTooltip","Horizontal","IDENTITY","Iframe","IframePresentational","Image","Image","ImeCandidate","Increment","InlineTextBox","InputTime","Invalid","InvalidateTree","Jump","Justify","Keyboard","LabelText","LayoutTable","LayoutTableCell","LayoutTableRow","Left","LeftToRight","Legend","LineBreak","Link","List","ListBox","ListBoxOption","ListGrid","ListItem","ListMarker","ListStyle","Listbox","Live","LoadInlineTextBoxes","Location","Log","Main","Mark","Marquee","Math","Menu","Menu","MenuBar","MenuItem","MenuItemCheckBox","MenuItemRadio","MenuListOption","MenuListPopup","Meter","Mixed","NameFrom","Navigation","Node","NodeBuilder","NodeClassSet","NodeId","NodeIdContent","Note","Numeric","NumericValue","ORIGIN","Off","Open","Orientation","Other","Other","Page","Pane","Paragraph","PdfActionableHighlight","PdfRoot","Placeholder","PluginObject","Point","Polite","PopupButton","Portal","Pre","Presentation","Press","ProgressIndicator","RadioButton","RadioGroup","Rect","Region","RelatedElement","RelatedElement","ReplaceSelectedText","Right","RightToLeft","Role","RootWebArea","Row","RowGroup","RowHeader","Ruby","RubyAnnotation","RubyAnnotation","ScrollBackward","ScrollBar","ScrollDown","ScrollForward","ScrollIntoView","ScrollLeft","ScrollRight","ScrollTargetRect","ScrollToPoint","ScrollToPoint","ScrollUp","ScrollView","Search","SearchBox","Section","Select","SetScrollOffset","SetScrollOffset","SetSequentialFocusNavigationStartingPoint","SetTextSelection","SetTextSelection","SetValue","ShowContextMenu","ShowTooltip","Size","Slider","Solid","SortDirection","Spelling","SpinButton","Splitter","Square","StaticText","Status","Step","Strong","Subscript","Suggestion","Summary","Superscript","SvgRoot","Switch","Tab","TabList","TabPanel","Table","TableCaption","TableHeaderContainer","Term","TextAlign","TextDecoration","TextDirection","TextField","TextFieldWithComboBox","TextPosition","TextSelection","Time","Time","Timer","Title","Title","TitleBar","ToggleButton","Toolbar","Tooltip","TopToBottom","Tree","Tree","Tree","TreeGrid","TreeItem","TreeUpdate","True","True","True","True","Uncheck","Unknown","Unsorted","Value","Value","Vec2","Vertical","VerticalOffset","Video","Wavy","WebView","Window","ZERO","ZERO","ZERO","ZERO","abs","access_key","access_key","action","active_descendant","active_descendant","add","add","add","add","add","add_action","add_assign","add_assign","add_assign","add_assign","anchor","area","aria_current","aria_current","aria_role","aria_role","as_coeffs","auto_complete","auto_complete","background_color","background_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","build","canvas_has_fallback","canvas_has_fallback","character_index","character_lengths","character_lengths","character_positions","character_positions","character_widths","character_widths","checked_state","checked_state","checked_state_description","checked_state_description","children","children","class_name","class_name","clear_access_key","clear_actions","clear_active_descendant","clear_aria_current","clear_aria_role","clear_auto_complete","clear_autofill_available","clear_background_color","clear_bold","clear_bounds","clear_busy","clear_canvas_has_fallback","clear_character_lengths","clear_character_positions","clear_character_widths","clear_checked_state","clear_checked_state_description","clear_children","clear_class_name","clear_clips_children","clear_color_value","clear_controls","clear_css_display","clear_custom_actions","clear_default","clear_default_action_verb","clear_described_by","clear_description","clear_description_from","clear_details","clear_disabled","clear_editable","clear_error_message","clear_expanded","clear_flow_to","clear_font_family","clear_font_size","clear_font_weight","clear_foreground_color","clear_has_popup","clear_hidden","clear_hierarchical_level","clear_hovered","clear_html_tag","clear_in_page_link_target","clear_indirect_children","clear_inner_html","clear_input_type","clear_invalid","clear_is_grammar_error","clear_is_line_breaking_object","clear_is_nonatomic_text_field_root","clear_is_page_breaking_object","clear_is_search_match","clear_is_spelling_error","clear_is_suggestion","clear_italic","clear_key_shortcuts","clear_labelled_by","clear_language","clear_linked","clear_list_style","clear_live","clear_live_atomic","clear_live_relevant","clear_max_numeric_value","clear_member_of","clear_min_numeric_value","clear_modal","clear_multiline","clear_multiselectable","clear_name","clear_name_from","clear_next_focus","clear_next_on_line","clear_numeric_value","clear_numeric_value_jump","clear_numeric_value_step","clear_orientation","clear_overline","clear_placeholder","clear_popup_for","clear_position_in_set","clear_previous_focus","clear_previous_on_line","clear_protected","clear_radio_group","clear_read_only","clear_required","clear_role_description","clear_scroll_x","clear_scroll_x_max","clear_scroll_x_min","clear_scroll_y","clear_scroll_y_max","clear_scroll_y_min","clear_scrollable","clear_selected","clear_selected_from_focus","clear_size_of_set","clear_sort_direction","clear_strikethrough","clear_table_cell_column_index","clear_table_cell_column_span","clear_table_cell_row_index","clear_table_cell_row_span","clear_table_column_count","clear_table_column_header","clear_table_column_index","clear_table_header","clear_table_row_count","clear_table_row_header","clear_table_row_index","clear_text_align","clear_text_direction","clear_text_indent","clear_text_selection","clear_tooltip","clear_touch_pass_through","clear_transform","clear_underline","clear_url","clear_value","clear_vertical_offset","clear_visited","clear_word_lengths","clips_children","clips_children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color_value","color_value","contains","controls","controls","css_display","css_display","custom_actions","custom_actions","data","default","default","default","default","default","default","default","default","default","default_action_verb","default_action_verb","described_by","described_by","description","description","description","description_from","description_from","details","details","determinant","div","div","div_assign","div_assign","do_action","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_message","error_message","flow_to","flow_to","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","font_family","font_family","font_size","font_size","font_weight","font_weight","foreground_color","foreground_color","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_origin_size","from_points","has_popup","has_popup","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","hierarchical_level","hierarchical_level","html_tag","html_tag","id","in_page_link_target","in_page_link_target","indirect_children","indirect_children","inner_html","inner_html","input_type","input_type","intersect","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invalid","invalid","inverse","is_autofill_available","is_autofill_available","is_bold","is_bold","is_busy","is_busy","is_default","is_default","is_disabled","is_disabled","is_editable","is_editable","is_empty","is_expanded","is_expanded","is_finite","is_grammar_error","is_grammar_error","is_hidden","is_hidden","is_hovered","is_hovered","is_italic","is_italic","is_line_breaking_object","is_line_breaking_object","is_linked","is_linked","is_live_atomic","is_live_atomic","is_modal","is_modal","is_multiline","is_multiline","is_multiselectable","is_multiselectable","is_nan","is_nonatomic_text_field_root","is_nonatomic_text_field_root","is_page_breaking_object","is_page_breaking_object","is_protected","is_protected","is_read_only","is_read_only","is_required","is_required","is_scrollable","is_scrollable","is_search_match","is_search_match","is_selected","is_selected","is_selected_from_focus","is_selected_from_focus","is_spelling_error","is_spelling_error","is_suggestion","is_suggestion","is_touch_pass_through","is_touch_pass_through","is_visited","is_visited","key_shortcuts","key_shortcuts","labelled_by","labelled_by","language","language","list_style","list_style","live","live","live_relevant","live_relevant","lock_global","map_unit_square","max_numeric_value","max_numeric_value","max_x","max_y","member_of","member_of","min_numeric_value","min_numeric_value","min_x","min_y","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","name","name","name_from","name_from","neg","new","new","new","new","new","new","new","new","next_focus","next_focus","next_on_line","next_on_line","node","nodes","numeric_value","numeric_value","numeric_value_jump","numeric_value_jump","numeric_value_step","numeric_value_step","orientation","orientation","origin","overline","overline","partial_cmp","partial_cmp","placeholder","placeholder","popup_for","popup_for","position_in_set","position_in_set","previous_focus","previous_focus","previous_on_line","previous_on_line","push_child","push_controlled","push_custom_action","push_described_by","push_detail","push_flow_to","push_indirect_child","push_labelled_by","push_to_radio_group","radio_group","radio_group","remove_action","role","role","role_description","role_description","root","root_scroller","rotate","scale","scale_non_uniform","scroll_x","scroll_x","scroll_x_max","scroll_x_max","scroll_x_min","scroll_x_min","scroll_y","scroll_y","scroll_y_max","scroll_y_max","scroll_y_min","scroll_y_min","set_access_key","set_active_descendant","set_aria_current","set_aria_role","set_auto_complete","set_autofill_available","set_background_color","set_bold","set_bounds","set_busy","set_canvas_has_fallback","set_character_lengths","set_character_positions","set_character_widths","set_checked_state","set_checked_state_description","set_children","set_class_name","set_clips_children","set_color_value","set_controls","set_css_display","set_custom_actions","set_default","set_default_action_verb","set_described_by","set_description","set_description_from","set_details","set_disabled","set_editable","set_error_message","set_expanded","set_flow_to","set_font_family","set_font_size","set_font_weight","set_foreground_color","set_has_popup","set_hidden","set_hierarchical_level","set_hovered","set_html_tag","set_in_page_link_target","set_indirect_children","set_inner_html","set_input_type","set_invalid","set_is_grammar_error","set_is_line_breaking_object","set_is_nonatomic_text_field_root","set_is_page_breaking_object","set_is_search_match","set_is_spelling_error","set_is_suggestion","set_italic","set_key_shortcuts","set_labelled_by","set_language","set_linked","set_list_style","set_live","set_live_atomic","set_live_relevant","set_max_numeric_value","set_member_of","set_min_numeric_value","set_modal","set_multiline","set_multiselectable","set_name","set_name_from","set_next_focus","set_next_on_line","set_numeric_value","set_numeric_value_jump","set_numeric_value_step","set_orientation","set_overline","set_placeholder","set_popup_for","set_position_in_set","set_previous_focus","set_previous_on_line","set_protected","set_radio_group","set_read_only","set_required","set_role","set_role_description","set_scroll_x","set_scroll_x_max","set_scroll_x_min","set_scroll_y","set_scroll_y_max","set_scroll_y_min","set_scrollable","set_selected","set_selected_from_focus","set_size_of_set","set_sort_direction","set_strikethrough","set_table_cell_column_index","set_table_cell_column_span","set_table_cell_row_index","set_table_cell_row_span","set_table_column_count","set_table_column_header","set_table_column_index","set_table_header","set_table_row_count","set_table_row_header","set_table_row_index","set_text_align","set_text_direction","set_text_indent","set_text_selection","set_tooltip","set_touch_pass_through","set_transform","set_underline","set_url","set_value","set_vertical_offset","set_visited","set_word_lengths","size","size_of_set","size_of_set","sort_direction","sort_direction","strikethrough","strikethrough","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","supports_action","supports_action","table_cell_column_index","table_cell_column_index","table_cell_column_span","table_cell_column_span","table_cell_row_index","table_cell_row_index","table_cell_row_span","table_cell_row_span","table_column_count","table_column_count","table_column_header","table_column_header","table_column_index","table_column_index","table_header","table_header","table_row_count","table_row_count","table_row_header","table_row_header","table_row_index","table_row_index","target","text_align","text_align","text_direction","text_direction","text_indent","text_indent","text_selection","text_selection","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_point","to_size","to_vec2","to_vec2","tooltip","tooltip","transform","transform","transform_rect_bbox","translate","tree","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline","union","union_pt","url","url","value","value","vertical_offset","vertical_offset","width","width","with_origin","with_size","word_lengths","word_lengths","x","x","x0","x1","y","y","y0","y1"],"q":[[0,"accesskit"],[1403,"core::option"],[1404,"core::cmp"],[1405,"core::fmt"],[1406,"core::fmt"],[1407,"core::ops::function"],[1408,"core::convert"],[1409,"core::hash"],[1410,"core::ops::deref"],[1411,"alloc::boxed"],[1412,"alloc::vec"],[1413,"core::result"],[1414,"core::any"]],"d":["","An action to be taken on an accessibility node.","","Handles requests from assistive technologies or other …","","A 2D affine transform. Derived from kurbo.","","","","","","","","","E.g. <code>aria-label</code>.","","","","","","","","HTML-AAM 5.2.2","","","E.g. in the case of a table, from a <code>caption</code> element.","","","","","","","","","A click will be performed on one of the node’s ancestors.","","","","","","","","","","","","","","","Defines a custom action for a UI element.","Requires <code>ActionRequest::data</code> to be set to …","","","","","","Decrement a numeric value by one step.","Do the default action for an object, typically this means …","Describes the action that will be performed on a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A transform that is flipped on the x-axis.","A transform that is flipped on the y-axis. Useful for …","","","","","","","","","","","","","","","","","","","","","","","","E.g. most toolbars and separators.","The identity transform.","","","","","","Increment a numeric value by one step.","","","Indicates if a form control has invalid input or if a web …","Request that the tree source invalidate its entire tree.","","","","","","","","","","","","","","","","Behaves similar to an ARIA grid but is primarily used by …","","Contains the bullet, number, or other marker for a list …","","","","Load inline text boxes for this subtree, providing …","","","","","","","","","","","","","","","","","","","A single accessible object. A complete UI is represented …","Builds a <code>Node</code>.","Allows nodes that have the same role, actions, and set of …","The stable identity of a <code>Node</code>, unique within the node’s …","","","","","The point at the origin; (0, 0).","","","","","Language specific ordering (alpha, roman, cjk-ideographic, …","","","","","","E.g. from an HTML placeholder attribute on a text field.","","A 2D point. Derived from kurbo.","","","","","Used for ARIA role=“none”/“presentation” – …","","","","","A rectangle. Derived from kurbo.","","E.g. from a <code>figcaption</code> element in a figure.","","Delete any selected text in the control’s text value and …","","","The type of an accessibility node.","","","","","","","","","","","","Scroll any scrollable containers to make the target object …","","","Optional target rectangle for <code>Action::ScrollIntoView</code>, in …","Scroll the given object to a specified point in the tree’…","Target for <code>Action::ScrollToPoint</code>, in platform-native …","","","","","","","Requires <code>ActionRequest::data</code> to be set to …","Target for <code>Action::SetScrollOffset</code>, in the coordinate space","Don’t focus this node, but set it as the sequential …","Requires <code>ActionRequest::data</code> to be set to …","","Replace the value of the control with the specified value …","","","A 2D size. Derived from kurbo.","","","","","","","","","","","","","","HTML-AAM 5.8.2","","","","","","","","HTML-AAM 5.9.2","","","","","","","","","","","","","E.g. <code>&lt;input type=&quot;text&quot; title=&quot;title&quot;&gt;</code>.","","","","","","","The data associated with an accessibility tree that’s …","","","","","A serializable representation of an atomic change to a <code>Tree</code>…","","","","","","","","E.g. <code>&lt;input type=&quot;button&quot; value=&quot;Button&#39;s name&quot;&gt;</code>.","","A 2D vector. Derived from kurbo.","E.g. menu or combo box.","","","","","","The point (0, 0).","The empty rectangle at the origin.","A size with zero width or height.","The vector (0, 0).","Take absolute value of width and height.","","","","","","","","","","","","","","","","The position where the selection started, and which does …","The area of the rectangle.","","","","","Get the coefficients of the transform.","","","Background color in RGBA.","Background color in RGBA.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding box of this node, in the node’s coordinate …","The bounding box of this node, in the node’s coordinate …","","Set on a canvas element if it has fallback content.","Set on a canvas element if it has fallback content.","The index of an item in <code>Node::character_lengths</code>, or the …","For inline text. The length (non-inclusive) of each …","For inline text. The length (non-inclusive) of each …","For inline text. This is the position of each character …","For inline text. This is the position of each character …","For inline text. This is the advance width of each …","For inline text. This is the advance width of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that this node clips its children, i.e. may have …","Indicates that this node clips its children, i.e. may have …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For <code>Role::ColorWell</code>, specifies the selected color in RGBA.","For <code>Role::ColorWell</code>, specifies the selected color in RGBA.","Returns <code>true</code> if <code>point</code> lies within <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","What information was used to compute the object’s …","What information was used to compute the object’s …","","","Compute the determinant of this transform.","","Note: division by a scalar is implemented by multiplying …","","","Perform the requested action. If the requested action is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The active end of the selection, which changes as the …","The node with keyboard focus within this tree, if any. The …","Only present when different from parent.","Only present when different from parent.","Font size is in pixels.","Font size is in pixels.","Font weight can take on any arbitrary numeric value. …","Font weight can take on any arbitrary numeric value. …","Foreground color in RGBA.","Foreground color in RGBA.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A new rectangle from origin and size.","A new rectangle from two points.","","","","","","","","","","","","","","","","","","","","The height of the rectangle.","The height.","","","","","","","","Ids of nodes that are children of this node logically, but …","Ids of nodes that are children of this node logically, but …","Inner HTML of an element. Only used for a top-level math …","Inner HTML of an element. Only used for a top-level math …","","","The intersection of two rectangles.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Compute the inverse transform.","","","","","","","","","Use for a control or group of controls that disallows …","Use for a control or group of controls that disallows …","","","Whether this rectangle has zero area.","Whether this node is expanded, collapsed, or neither.","Whether this node is expanded, collapsed, or neither.","Is this map finite?","","","Exclude this node and its descendants from the tree …","Exclude this node and its descendants from the tree …","","","","","Indicates whether this node causes a hard line-break (e.g. …","Indicates whether this node causes a hard line-break (e.g. …","","","","","If a dialog box is marked as explicitly modal.","If a dialog box is marked as explicitly modal.","","","","","Is this map NaN?","The object functions as a text field which exposes its …","The object functions as a text field which exposes its …","Indicates whether this node causes a page break.","Indicates whether this node causes a page break.","","","Use for a textbox that allows focus/selection but not …","Use for a textbox that allows focus/selection but not …","","","Indicates this node is user-scrollable, e.g. …","Indicates this node is user-scrollable, e.g. …","","","Indicates whether this node is selected or unselected.","Indicates whether this node is selected or unselected.","Indicates whether this node is selected due to selection …","Indicates whether this node is selected due to selection …","","","","","This element allows touches to be passed through when a …","This element allows touches to be passed through when a …","","","","","","","Only present when different from parent.","Only present when different from parent.","The list style type. Only available on list items.","The list style type. Only available on list items.","","","","","Accesses a shared class set guarded by a mutex.","Creates an affine transformation that takes the unit …","","","Returns the maximum value for the x-coordinate of the …","Returns the maximum value for the y-coordinate of the …","","","","","Returns the minimum value for the x-coordinate of the …","Returns the minimum value for the y-coordinate of the …","","","","","","","","","","What information was used to compute the object’s name.","What information was used to compute the object’s name.","","Construct an affine transform from coefficients.","Create a new <code>Point</code> with the provided <code>x</code> and <code>y</code> coordinates.","A new rectangle from minimum and maximum coordinates.","Create a new <code>Size</code> with the provided <code>width</code> and <code>height</code>.","Create a new vector.","","","","","","","","The node’s role must be <code>Role::InlineTextBox</code>.","Zero or more new or updated nodes. Order doesn’t matter.","","","","","","","","","The origin of the rectangle.","","","","","Only if not already exposed in <code>name</code> (<code>NameFrom::Placeholder</code>…","Only if not already exposed in <code>name</code> (<code>NameFrom::Placeholder</code>…","","","","","","","","","","","","","","","","","","On radio buttons this should be set to a list of all of …","On radio buttons this should be set to a list of all of …","","","","","","","The node that’s used as the root scroller, if any. On …","An affine transform representing rotation.","An affine transform representing uniform scaling.","An affine transform representing non-uniform scaling with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The size of the rectangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The indentation of the text, in mm.","The indentation of the text, in mm.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert this vector into a <code>Point</code>.","Convert this vector into a <code>Size</code>.","Convert this point into a <code>Vec2</code>.","Convert this size into a <code>Vec2</code>, with <code>width</code> mapped to <code>x</code> and …","Only if not already exposed in <code>name</code> (<code>NameFrom::Title</code>).","Only if not already exposed in <code>name</code> (<code>NameFrom::Title</code>).","An affine transform to apply to any coordinates within …","An affine transform to apply to any coordinates within …","Compute the bounding box of a transformed rectangle.","An affine transform representing translation.","Rarely updated information about the tree as a whole. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The smallest rectangle enclosing two rectangles.","Compute the union with one point.","","","","","","","The width of the rectangle.","The width.","Create a new <code>Rect</code> with the same size as <code>self</code> and a new …","Create a new <code>Rect</code> with the same origin as <code>self</code> and a new …","For inline text. The length of each word in characters, as …","For inline text. The length of each word in characters, as …","The x coordinate.","The x-coordinate.","The minimum x coordinate (left edge).","The maximum x coordinate (right edge).","The y coordinate.","The y-coordinate.","The minimum y coordinate (top edge in y-down spaces).","The maximum y coordinate (bottom edge in y-down spaces)."],"i":[22,0,0,0,0,0,22,22,22,0,25,22,29,30,24,24,22,22,22,10,26,22,25,22,22,24,22,22,33,28,22,0,32,28,28,22,22,10,22,22,22,22,22,22,22,22,22,22,24,0,10,41,35,22,12,22,10,10,0,22,29,0,22,22,22,22,22,31,22,32,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,35,35,22,22,10,13,13,21,12,22,22,22,10,28,22,22,22,22,27,22,22,22,22,31,22,0,22,22,22,10,23,13,22,22,22,32,22,10,22,22,0,10,28,33,22,22,22,22,22,33,26,22,22,22,22,22,22,22,22,22,0,31,0,10,12,22,22,22,22,22,22,31,22,22,22,22,22,22,22,21,0,22,0,0,0,0,0,22,32,41,7,30,28,0,29,32,12,22,22,22,22,24,22,0,30,22,22,22,22,28,22,22,22,0,22,24,25,10,33,26,0,22,22,22,22,22,22,25,10,22,10,10,10,10,10,41,10,41,10,22,22,22,22,28,10,41,10,10,41,10,10,10,0,22,35,0,27,22,22,32,22,22,12,22,34,22,25,34,22,22,22,22,22,22,25,22,22,0,0,0,22,22,0,0,22,12,22,24,25,22,22,22,22,26,0,22,31,22,22,0,27,21,12,31,28,22,29,24,41,0,23,0,22,35,22,22,7,1,9,8,1,2,5,42,2,5,7,7,1,9,8,5,7,7,9,8,38,1,2,5,2,5,13,2,5,2,5,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,2,5,5,2,5,37,2,5,2,5,2,5,2,5,2,5,2,5,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,22,10,2,5,1,2,5,2,5,2,5,42,13,7,1,9,8,22,16,5,40,2,5,2,5,2,5,36,2,5,2,5,13,9,8,9,8,56,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,2,5,39,40,41,42,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,39,2,5,2,5,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,2,5,39,40,41,42,38,40,2,5,2,5,2,5,2,5,13,7,7,1,1,1,9,9,8,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,6,36,37,38,16,2,5,39,40,40,41,42,1,1,2,5,22,10,23,24,25,26,21,28,29,12,30,31,32,33,34,35,6,1,9,2,5,2,5,36,2,5,2,5,2,5,2,5,1,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,2,5,13,2,5,2,5,2,5,2,5,2,5,2,5,1,2,5,13,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,13,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,16,13,2,5,1,1,2,5,2,5,1,1,13,13,9,8,13,9,8,2,5,2,5,8,13,7,1,9,8,16,5,39,2,5,2,5,37,40,2,5,2,5,2,5,2,5,1,2,5,22,10,2,5,2,5,2,5,2,5,2,5,5,5,5,5,5,5,5,5,5,2,5,5,2,5,2,5,39,39,13,13,13,2,5,2,5,2,5,2,5,2,5,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,2,5,2,5,2,5,7,7,7,1,9,8,7,7,9,8,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,2,5,42,2,5,2,5,2,5,2,5,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,8,8,7,9,2,5,2,5,13,13,40,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,13,7,1,9,8,22,10,23,24,25,26,27,21,28,29,12,30,31,32,33,34,35,6,36,37,38,16,2,5,39,40,41,42,2,5,1,1,2,5,2,5,2,5,1,9,1,1,2,5,7,8,1,1,7,8,1,1],"fc":[],"p":[[3,"Rect",0],[3,"Node",0],[15,"str"],[4,"Option",1403],[3,"NodeBuilder",0],[3,"NodeId",0],[3,"Point",0],[3,"Vec2",0],[3,"Size",0],[4,"Action",0],[15,"f64"],[4,"AriaCurrent",0],[3,"Affine",0],[15,"array"],[15,"u32"],[3,"NodeClassSet",0],[15,"bool"],[15,"u8"],[15,"slice"],[15,"f32"],[4,"CheckedState",0],[4,"Role",0],[4,"Orientation",0],[4,"NameFrom",0],[4,"DescriptionFrom",0],[4,"TextDirection",0],[4,"Invalid",0],[4,"DefaultActionVerb",0],[4,"SortDirection",0],[4,"Live",0],[4,"HasPopup",0],[4,"ListStyle",0],[4,"TextAlign",0],[4,"VerticalOffset",0],[4,"TextDecoration",0],[3,"CustomAction",0],[3,"TextPosition",0],[3,"TextSelection",0],[3,"Tree",0],[3,"TreeUpdate",0],[4,"ActionData",0],[3,"ActionRequest",0],[4,"Ordering",1404],[3,"Formatter",1405],[6,"Result",1405],[3,"NonZeroU64",1406],[8,"FnOnce",1407],[8,"Into",1408],[8,"Hasher",1409],[15,"usize"],[8,"DerefMut",1410],[3,"Box",1411],[3,"Vec",1412],[4,"Result",1413],[3,"TypeId",1414],[8,"ActionHandler",0]]},\
"arrayvec":{"doc":"<strong>arrayvec</strong> provides the types <code>ArrayVec</code> and <code>ArrayString</code>:  …","t":"DDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ArrayString","ArrayVec","CapacityError","Drain","IntoIter","as_mut","as_mut_ptr","as_mut_slice","as_mut_str","as_ptr","as_ref","as_ref","as_slice","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","clear","clear","clone","clone","clone","clone","clone_from","clone_from","cmp","cmp","cmp","default","default","deref","deref","deref_mut","deref_mut","drain","drop","drop","drop","element","eq","eq","eq","eq","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_string","from_iter","from_str","ge","ge","ge","gt","gt","gt","hash","hash","insert","into","into","into","into","into","into_inner","into_inner_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","is_full","is_full","le","le","le","len","len","lt","lt","lt","new","new","new","new_const","new_const","next","next","next_back","next_back","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","pop","pop_at","push","push","push_str","push_unchecked","remaining_capacity","remaining_capacity","remove","remove","retain","set_len","set_len","simplify","size_hint","size_hint","swap_pop","swap_remove","take","truncate","truncate","try_extend_from_slice","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_push","try_push","try_push_str","type_id","type_id","type_id","type_id","type_id","write_char","write_str","zero_filled"],"q":[[0,"arrayvec"],[168,"core::clone"],[169,"core::cmp"],[170,"core::cmp"],[171,"core::cmp"],[172,"core::fmt"],[173,"core::fmt"],[174,"core::str::error"],[175,"core::cmp"],[176,"core::hash"],[177,"core::ops::function"],[178,"core::marker"],[179,"core::fmt"]],"d":["A string with a fixed capacity.","A vector with a fixed capacity.","Error value indicating insufficient capacity","A draining iterator for <code>ArrayVec</code>.","By-value iterator for <code>ArrayVec</code>.","","Return a raw mutable pointer to the vector’s buffer.","Return a mutable slice containing all elements of the …","Return a mutable string slice of the whole <code>ArrayString</code>.","Return a raw pointer to the vector’s buffer.","","","Return a slice containing all elements of the vector.","Return a string slice of the whole <code>ArrayString</code>.","","","","","","","","","","","","","","","Return the capacity of the <code>ArrayVec</code>.","Return the capacity of the <code>ArrayString</code>.","Remove all elements in the vector.","Make the string empty.","","","","","","","","","","Return an empty array","Return an empty <code>ArrayString</code>","","","","","Create a draining iterator that removes the specified …","","","","Extract the overflowing element","","","","","","Extend the <code>ArrayVec</code> with an iterator.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a <code>str</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ArrayString</code> from a byte string literal.","Create an <code>ArrayVec</code> from an iterator.","","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the inner fixed size array, if it is full to its …","Return the inner fixed size array.","","","","","","Returns whether the <code>ArrayVec</code> is empty.","Returns whether the string is empty.","Return true if the <code>ArrayVec</code> is completely filled to its …","Return if the <code>ArrayString</code> is completely filled.","","","","Return the number of elements in the <code>ArrayVec</code>.","Return the length of the string.","","","","Create a new empty <code>ArrayVec</code>.","Create a new empty <code>ArrayString</code>.","Create a new <code>CapacityError</code> from <code>element</code>.","Create a new empty <code>ArrayVec</code> (const fn).","Create a new empty <code>ArrayString</code> (const fn).","","","","","","","","","Remove the last element in the vector and return it.","Removes the last character from the string and returns it.","Remove the element at <code>index</code> and shift down the following …","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","Push <code>element</code> to the end of the vector without checking the …","Returns the capacity left in the <code>ArrayVec</code>.","Returns the capacity left in the <code>ArrayString</code>.","Remove the element at <code>index</code> and shift down the following …","Removes a <code>char</code> from this <code>ArrayString</code> at a byte position …","Retains only the elements specified by the predicate.","Set the vector’s length without dropping or moving out …","Set the strings’s length.","Convert into a <code>CapacityError</code> that does not carry an …","","","Remove the element at <code>index</code> and swap the last element into …","Remove the element at <code>index</code> and swap the last element into …","Returns the ArrayVec, replacing the original with a new …","Shortens the vector, keeping the first <code>len</code> elements and …","Shortens this <code>ArrayString</code> to the specified length.","Copy all elements from the slice and append to the <code>ArrayVec</code>…","","","","","","","","","Insert <code>element</code> at position <code>index</code>.","","","","","","Push <code>element</code> to the end of the vector.","Adds the given char to the end of the string.","Adds the given string slice to the end of the string.","","","","","","","","Create a new <code>ArrayString</code> value fully filled with ASCII …"],"i":[0,0,0,0,0,1,1,1,3,1,1,3,1,3,1,1,7,12,3,3,8,1,1,7,12,3,3,8,1,3,1,3,1,7,3,8,1,3,1,3,8,1,3,1,3,1,3,1,1,7,12,8,1,1,3,3,8,1,1,7,3,3,8,8,1,1,7,12,3,3,8,3,1,3,1,3,3,1,3,3,1,3,1,1,7,12,3,8,1,1,1,1,1,7,12,1,3,1,3,1,3,3,1,3,1,3,3,1,3,8,1,3,7,12,7,12,1,3,3,8,1,3,1,1,3,3,1,1,3,1,3,1,1,3,8,7,12,1,1,1,1,3,1,1,1,7,12,3,3,3,8,1,1,7,12,3,8,1,3,3,1,7,12,3,8,3,3,3],"f":[0,0,0,0,0,[1,2],[1],[1,2],[3,4],[1],[1,2],[3,4],[1,2],[3,4],[[]],[1,2],[[]],[[]],[[]],[3,4],[[]],[[]],[1,2],[[]],[[]],[[]],[3,4],[[]],[1,5],[3,5],[1],[3],[[[1,[6]]],[[1,[6]]]],[[[7,[6]]],[[7,[6]]]],[3,3],[[[8,[6]]],[[8,[6]]]],[[[1,[6]],[1,[6]]]],[[3,3]],[[[1,[9]],[1,[9]]],10],[[3,3],10],[[[8,[9]],[8,[9]]],10],[[],1],[[],3],[1],[3,4],[1],[3,4],[[1,[11,[5]]],12],[1],[7],[12],[8],[[[1,[13]],[2,[13]]],14],[[[1,[13]],[1,[13]]],14],[[3,4],14],[[3,3],14],[[[8,[13]],[8,[13]]],14],[[1,15]],[[[1,[16]],17],18],[[[7,[16]],17],18],[[3,17],18],[[3,17],18],[[8,17],18],[[8,17],18],[19,1],[[]],[[]],[[]],[4,[[20,[3,[8,[4]]]]]],[[]],[[]],[[[19,[21]]],[[20,[3,22]]]],[15,1],[4,[[20,[3]]]],[[[1,[23]],[1,[23]]],14],[[3,4],14],[[3,3],14],[[[1,[23]],[1,[23]]],14],[[3,3],14],[[3,4],14],[[[1,[24]],25]],[[3,25]],[[1,5]],[[]],[[]],[[]],[[]],[[]],[1,[[20,[19,1]]]],[1,19],[1],[1,7],[1],[[]],[[]],[1,14],[3,14],[1,14],[3,14],[[[1,[23]],[1,[23]]],14],[[3,4],14],[[3,3],14],[1,5],[3,5],[[[1,[23]],[1,[23]]],14],[[3,4],14],[[3,3],14],[[],1],[[],3],[[],8],[[],1],[[],3],[7,26],[12,26],[7,26],[12,26],[[[1,[23]],[1,[23]]],[[26,[10]]]],[[3,3],[[26,[10]]]],[[3,4],[[26,[10]]]],[[[8,[23]],[8,[23]]],[[26,[10]]]],[1,26],[3,[[26,[27]]]],[[1,5],26],[1],[[3,27]],[[3,4]],[1],[1,5],[3,5],[[1,5]],[[3,5],27],[[1,28]],[[1,5]],[[3,5]],[8,8],[7],[12],[[1,5],26],[[1,5]],[1,1],[[1,5]],[[3,5]],[[[1,[29]],[2,[29]]],[[20,[8]]]],[[],20],[[[2,[6]]],[[20,[[1,[6]]]]]],[[],20],[[],20],[[],20],[4,[[20,[3]]]],[30,[[20,[3]]]],[[],20],[[1,5],[[20,[8]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[1,[[20,[8]]]],[[3,27],[[20,[[8,[27]]]]]],[[3,4],[[20,[[8,[4]]]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[3,27],18],[[3,4],18],[[],3]],"c":[],"p":[[3,"ArrayVec",0],[15,"slice"],[3,"ArrayString",0],[15,"str"],[15,"usize"],[8,"Clone",168],[3,"IntoIter",0],[3,"CapacityError",0],[8,"Ord",169],[4,"Ordering",169],[8,"RangeBounds",170],[3,"Drain",0],[8,"PartialEq",169],[15,"bool"],[8,"IntoIterator",171],[8,"Debug",172],[3,"Formatter",172],[6,"Result",172],[15,"array"],[4,"Result",173],[15,"u8"],[3,"Utf8Error",174],[8,"PartialOrd",169],[8,"Hash",175],[8,"Hasher",175],[4,"Option",176],[15,"char"],[8,"FnMut",177],[8,"Copy",178],[3,"Arguments",172],[3,"TypeId",179]]},\
"bitflags":{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"SCIQSSDILLOKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDIILLLLLLFLLLKFLLLK","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"],[105,"core::marker"],[106,"core::option"],[107,"core::result"],[108,"core::any"],[109,"core::fmt"],[110,"core::fmt"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","Write a flags value as text.","","","","Write the value as hex."],"i":[17,0,0,10,17,10,0,0,10,10,0,10,5,5,10,10,10,10,10,10,10,10,5,10,10,10,10,10,10,10,10,10,10,10,10,10,5,10,10,10,10,5,5,0,10,10,10,10,5,5,0,10,10,10,10,10,10,10,10,5,5,5,10,10,5,0,0,6,7,6,7,6,7,6,7,6,7,6,7,7,6,7,6,7,6,7,0,0,0,11,11,11,11,11,11,0,11,11,11,18,0,11,11,11,19],"f":[0,0,0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[4,3],[4,3],[[1,1]],[[1,1]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[],2],[[],2],[[],2],[[],2],[5,2],[5,2],0,[[],6],[[],6],[[],7],[[],7],[5,4],[4,5],0,[[1,1]],[[1,1]],[[1,1,2]],[[1,1,2]],[[]],[[]],[[1,1]],[[1,1]],[[],8],[[],8],[[],9],[[]],[[]],[5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[10]]],3],[[[7,[10]]],3],[7],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,[[]],[[]],[[],11],[[11,12],13],[[11,12],13],[[]],[4,[[8,[10,11]]]],[[]],[14,11],[14,11],[4,[[8,[1,11]]]],[[10,15],[[8,[16]]]],[[],8],[[],8],[[],9],[15,13]],"c":[],"p":[[8,"Sized",105],[15,"bool"],[4,"Option",106],[15,"str"],[3,"Flag",0],[3,"Iter",65],[3,"IterNames",65],[4,"Result",107],[3,"TypeId",108],[8,"Flags",0],[3,"ParseError",86],[3,"Formatter",109],[6,"Result",109],[8,"Display",109],[8,"Write",109],[3,"Error",109],[8,"Bits",0],[8,"ParseHex",86],[8,"WriteHex",86]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"O","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[]},\
"cgl":{"doc":"","t":"FGGGFFFFFFGFFFFFFFFFGFFGGFFFFFFGFFRRGGGGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR","n":["CGLChoosePixelFormat","CGLContextEnable","CGLContextObj","CGLContextParameter","CGLCreateContext","CGLDescribePixelFormat","CGLDestroyContext","CGLDestroyPixelFormat","CGLDisable","CGLEnable","CGLError","CGLErrorString","CGLGetCurrentContext","CGLGetGlobalOption","CGLGetOption","CGLGetParameter","CGLGetPixelFormat","CGLGetPixelFormatRetainCount","CGLGetShareGroup","CGLGetVersion","CGLGlobalOption","CGLIsEnabled","CGLLockContext","CGLPixelFormatAttribute","CGLPixelFormatObj","CGLReleasePixelFormat","CGLRetainPixelFormat","CGLSetCurrentContext","CGLSetGlobalOption","CGLSetOption","CGLSetParameter","CGLShareGroupObj","CGLTexImageIOSurface2D","CGLUnlockContext","CORE_BOOLEAN_ATTRIBUTES","CORE_INTEGER_ATTRIBUTES","GLenum","GLint","GLsizei","GLuint","IOSurfaceRef","kCGLCECrashOnRemovedFunctions","kCGLCEDisplayListOptimization","kCGLCEMPEngine","kCGLCERasterization","kCGLCEStateValidation","kCGLCESurfaceBackingSize","kCGLCESwapLimit","kCGLCESwapRectangle","kCGLCPClientStorage","kCGLCPCurrentRendererID","kCGLCPDispatchTableSize","kCGLCPGPUFragmentProcessing","kCGLCPGPUVertexProcessing","kCGLCPHasDrawable","kCGLCPMPSwapsInFlight","kCGLCPReclaimResources","kCGLCPSurfaceBackingSize","kCGLCPSurfaceOpacity","kCGLCPSurfaceOrder","kCGLCPSurfaceSurfaceVolatile","kCGLCPSurfaceTexture","kCGLCPSwapInterval","kCGLCPSwapRectangle","kCGLGOClearFormatCache","kCGLGOFormatCacheSize","kCGLGOResetLibrary","kCGLGORetainRenderers","kCGLGOUseBuildCache","kCGLGOUseErrorHandler","kCGLNoError","kCGLPFAAccelerated","kCGLPFAAcceleratedCompute","kCGLPFAAccumSize","kCGLPFAAllRenderers","kCGLPFAAllowOfflineRenderers","kCGLPFAAlphaSize","kCGLPFAAuxBuffers","kCGLPFAAuxDepthStencil","kCGLPFABackingStore","kCGLPFAClosestPolicy","kCGLPFAColorFloat","kCGLPFAColorSize","kCGLPFACompliant","kCGLPFADepthSize","kCGLPFADisplayMask","kCGLPFADoubleBuffer","kCGLPFAFullScreen","kCGLPFAMPSafe","kCGLPFAMaximumPolicy","kCGLPFAMinimumPolicy","kCGLPFAMultiScreen","kCGLPFAMultisample","kCGLPFANoRecovery","kCGLPFAOffScreen","kCGLPFAOpenGLProfile","kCGLPFAPBuffer","kCGLPFARemotePBuffer","kCGLPFARendererID","kCGLPFARobust","kCGLPFASampleAlpha","kCGLPFASampleBuffers","kCGLPFASamples","kCGLPFASingleRenderer","kCGLPFAStencilSize","kCGLPFAStereo","kCGLPFASupersample","kCGLPFAVirtualScreenCount","kCGLPFAWindow"],"q":[[0,"cgl"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[]},\
"core_foundation":{"doc":"This crate provides wrappers around the underlying …","t":"IAAAAAAAAOAAAOOOAAAAAAAAADFFGFFDFGFFFFGFFFFFFFFFDGGFFFGFFGGGDLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLHLLLMMLLLLLLLLLLLLLLLLLLLMLLDFFFFFGFFDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDFGDGFFGFFFFGFGGGGFEFFFFFGGIGGDFFFDGGNIINDDNGQGIIIMLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKMLLLLLLLLLLLHHHHHHHHMMGLMMMMLLKLLLLLKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLMKLLKLLDFGLLLLLLLLLLLLLLLLHHLLLLLLLLLLDFFFFFFFFFFFGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFFFFFFFFFFFFFFGGFFFGDLLLLLLLLLLLLLLLLLLHHHHHHHHHHHHHHHLLLLLLLLLLLLLDFFFFFFGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFDFFFFFGGDLLLLLLLLLLLLLLLLLLLLHHLLLLLLLLLLLLLLLLDFGFFGFFFGFFFFGDGGFFFGFDDGDLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLHHLLLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLDFFFFGDLLLLLLLLLLLLLLLLLLLLLLLHHHHLLLLLLLLLLLLLLDGDFFFFFFFFFGGDLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLRRLMMLLLLLLLLLLLLLLLLLMLLGGDFFGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFGDFFFFFGGDELLLLLLLLLLLLLLLLLLLLLLLLLLLHHRRRRRRRRRRRRRRRRRLLLLLLLLLLLLLLLLLLLLLLDFFGGGILLLLLLLFFLLLLLLLLLLLRRRRRRLLLLLLLLLLDGFFFFFFFFFFFFFFGDGDFFFFFFFFGGFFFFFEDDDFFFFFFGFFDGDFFFFFFFFFFGFFFNNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMMMMLLLLLLLLLLLLLRRRRRHHRRRRRRLMMMMMMLLLMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLDGFDFGFFGFFFFFFGGGGDLLLLLLLLLLLLMLLMLLLLLLLLMLLLHLMMLLLLLLLLLLLLLLLMLLDGFFFFGGFFFFFGGDLLLLLLLLLLLLLLLLLLLLLLLLLHLLLLLLLLLLLLLLLDFFFFFFGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGFFFFDLLLLLLLLLLLLLLLLLLLLLLLHHHHHHHHHHHHRHHHHHHHHHHHHHHHHHHRHHHHHRLLLLLLLLLLLLLLDDFFFFGDLLLLLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ConcreteCFType","array","attributed_string","base","boolean","bundle","characterset","data","date","declare_TCFType","dictionary","error","filedescriptor","impl_CFComparison","impl_CFTypeDescription","impl_TCFType","mach_port","number","propertylist","runloop","set","string","timezone","url","uuid","CFArray","CFArrayAppendArray","CFArrayAppendValue","CFArrayApplierFunction","CFArrayApplyFunction","CFArrayBSearchValues","CFArrayCallBacks","CFArrayContainsValue","CFArrayCopyDescriptionCallBack","CFArrayCreate","CFArrayCreateCopy","CFArrayCreateMutable","CFArrayCreateMutableCopy","CFArrayEqualCallBack","CFArrayExchangeValuesAtIndices","CFArrayGetCount","CFArrayGetCountOfValue","CFArrayGetFirstIndexOfValue","CFArrayGetLastIndexOfValue","CFArrayGetTypeID","CFArrayGetValueAtIndex","CFArrayGetValues","CFArrayInsertValueAtIndex","CFArrayIterator","CFArrayRef","CFArrayReleaseCallBack","CFArrayRemoveAllValues","CFArrayRemoveValueAtIndex","CFArrayReplaceValues","CFArrayRetainCallBack","CFArraySetValueAtIndex","CFArraySortValues","CFComparatorFunction","CFIndex","CFMutableArrayRef","__CFArray","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","drop","eq","equal","equivalent","fmt","from","from","from","from","from_CFTypes","from_copyable","from_mut_void","from_void","get","get_all_values","get_unchecked","get_values","into","into","into","into","into_iter","into_iter","into_untyped","iter","kCFTypeArrayCallBacks","len","len","next","release","retain","to_owned","to_owned","to_untyped","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","wrap_under_create_rule","wrap_under_get_rule","CFAttributedString","CFAttributedStringCreate","CFAttributedStringCreateMutable","CFAttributedStringCreateMutableCopy","CFAttributedStringGetLength","CFAttributedStringGetTypeID","CFAttributedStringRef","CFAttributedStringReplaceString","CFAttributedStringSetAttribute","CFMutableAttributedString","CFMutableAttributedStringRef","__CFAttributedString","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","char_len","char_len","clone","clone","clone_into","clone_into","default","drop","drop","eq","eq","equivalent","equivalent","from","from","from","from_mut_void","from_mut_void","from_void","from_void","into","into","into","new","new","replace_str","set_attribute","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","Boolean","CFAllocator","CFAllocatorAllocate","CFAllocatorAllocateCallBack","CFAllocatorContext","CFAllocatorCopyDescriptionCallBack","CFAllocatorCreate","CFAllocatorDeallocate","CFAllocatorDeallocateCallBack","CFAllocatorGetContext","CFAllocatorGetDefault","CFAllocatorGetPreferredSizeForSize","CFAllocatorGetTypeID","CFAllocatorPreferredSizeCallBack","CFAllocatorReallocate","CFAllocatorReallocateCallBack","CFAllocatorRef","CFAllocatorReleaseCallBack","CFAllocatorRetainCallBack","CFAllocatorSetDefault","CFComparisonResult","CFCopyDescription","CFEqual","CFGetRetainCount","CFGetTypeID","CFHash","CFHashCode","CFIndex","CFIndexConvertible","CFNullRef","CFOptionFlags","CFRange","CFRelease","CFRetain","CFShow","CFType","CFTypeID","CFTypeRef","EqualTo","FromMutVoid","FromVoid","GreaterThan","ItemMutRef","ItemRef","LessThan","OSStatus","Ref","SInt32","TCFType","TCFTypeRef","ToVoid","allocate","as_CFType","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_void_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","copyDescription","deallocate","deref","deref","deref_mut","downcast","downcast_into","drop","drop","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_mut_void","from_mut_void","from_mut_void","from_void","from_void","from_void","from_void_ptr","info","init","instance_of","into","into","into","into","into","into","into","into","into_CFType","kCFAllocatorDefault","kCFAllocatorMalloc","kCFAllocatorMallocZone","kCFAllocatorNull","kCFAllocatorSystemDefault","kCFAllocatorUseContext","kCFNotFound","kCFNull","length","location","mach_port_t","new","preferredSize","reallocate","release","retain","retain_count","show","to_CFIndex","to_owned","to_owned","to_owned","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of","version","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","CFBoolean","CFBooleanGetTypeID","CFBooleanRef","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","drop","eq","equivalent","false_value","fmt","from","from","from_mut_void","from_void","into","kCFBooleanFalse","kCFBooleanTrue","to_owned","to_void","to_void","true_value","try_from","try_into","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFBundle","CFBundleCopyBundleURL","CFBundleCopyExecutableURL","CFBundleCopyPrivateFrameworksURL","CFBundleCopyResourcesDirectoryURL","CFBundleCopySharedSupportURL","CFBundleCreate","CFBundleGetBundleWithIdentifier","CFBundleGetFunctionPointerForName","CFBundleGetInfoDictionary","CFBundleGetMainBundle","CFBundleGetTypeID","CFBundleRef","__CFBundle","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","bundle_resources_url","bundle_url","bundle_with_identifier","clone","clone_into","drop","eq","equivalent","executable_url","from","from","from_mut_void","from_void","function_pointer_for_name","info_dictionary","into","into","main_bundle","new","path","private_frameworks_url","resources_path","shared_support_url","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFCharacterSet","CFCharacterSetAddCharactersInRange","CFCharacterSetAddCharactersInString","CFCharacterSetCreateBitmapRepresentation","CFCharacterSetCreateCopy","CFCharacterSetCreateMutable","CFCharacterSetCreateMutableCopy","CFCharacterSetCreateWithBitmapRepresentation","CFCharacterSetCreateWithCharactersInRange","CFCharacterSetCreateWithCharactersInString","CFCharacterSetGetPredefined","CFCharacterSetGetTypeID","CFCharacterSetIntersect","CFCharacterSetInvert","CFCharacterSetIsCharacterMember","CFCharacterSetPredefinedSet","CFCharacterSetRef","CFCharacterSetRemoveCharactersInRange","CFCharacterSetRemoveCharactersInString","CFCharacterSetUnion","CFMutableCharacterSetRef","__CFCharacterSet","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","eq","equivalent","fmt","from","from","from_mut_void","from_void","into","into","kCFCharacterSetAlphaNumeric","kCFCharacterSetCapitalizedLetter","kCFCharacterSetControl","kCFCharacterSetDecimalDigit","kCFCharacterSetDecomposable","kCFCharacterSetIllegal","kCFCharacterSetLetter","kCFCharacterSetLowercaseLetter","kCFCharacterSetNewline","kCFCharacterSetNonBase","kCFCharacterSetPunctuation","kCFCharacterSetSymbol","kCFCharacterSetUppercaseLetter","kCFCharacterSetWhitespace","kCFCharacterSetWhitespaceAndNewline","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFData","CFDataCreate","CFDataCreateWithBytesNoCopy","CFDataGetBytePtr","CFDataGetBytes","CFDataGetLength","CFDataGetTypeID","CFDataRef","__CFData","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone_into","deref","drop","eq","equivalent","fmt","from","from","from_arc","from_buffer","from_mut_void","from_void","into","into","len","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFAbsoluteTime","CFAbsoluteTimeGetCurrent","CFDate","CFDateCompare","CFDateCreate","CFDateGetAbsoluteTime","CFDateGetTimeIntervalSinceDate","CFDateGetTypeID","CFDateRef","CFTimeInterval","__CFDate","abs_time","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","drop","eq","equivalent","fmt","from","from","from_mut_void","from_void","into","into","kCFAbsoluteTimeIntervalSince1904","kCFAbsoluteTimeIntervalSince1970","new","now","partial_cmp","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFDictionary","CFDictionaryAddValue","CFDictionaryApplierFunction","CFDictionaryApplyFunction","CFDictionaryContainsKey","CFDictionaryCopyDescriptionCallBack","CFDictionaryCreate","CFDictionaryCreateMutable","CFDictionaryCreateMutableCopy","CFDictionaryEqualCallBack","CFDictionaryGetCount","CFDictionaryGetKeysAndValues","CFDictionaryGetTypeID","CFDictionaryGetValueIfPresent","CFDictionaryHashCallBack","CFDictionaryKeyCallBacks","CFDictionaryRef","CFDictionaryReleaseCallBack","CFDictionaryRemoveAllValues","CFDictionaryRemoveValue","CFDictionaryReplaceValue","CFDictionaryRetainCallBack","CFDictionarySetValue","CFDictionaryValueCallBacks","CFMutableDictionary","CFMutableDictionaryRef","__CFDictionary","add","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","contains_key","copyDescription","copyDescription","copy_with_capacity","default","drop","drop","eq","eq","equal","equal","equivalent","equivalent","find","find","fmt","fmt","from","from","from","from","from","from","from_CFType_pairs","from_CFType_pairs","from_mut_void","from_mut_void","from_void","from_void","get","get","get_keys_and_values","get_keys_and_values","hash","into","into","into","into","into","into_untyped","into_untyped","is_empty","is_empty","kCFTypeDictionaryKeyCallBacks","kCFTypeDictionaryValueCallBacks","len","len","new","release","release","remove","remove_all","replace","retain","retain","set","to_immutable","to_mutable","to_owned","to_owned","to_owned","to_owned","to_untyped","to_untyped","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","with_capacity","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","CFError","CFErrorCopyDescription","CFErrorGetCode","CFErrorGetDomain","CFErrorGetTypeID","CFErrorRef","__CFError","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","code","description","description","domain","drop","eq","equivalent","fmt","fmt","from","from","from_mut_void","from_void","into","into","kCFErrorDomainCocoa","kCFErrorDomainMach","kCFErrorDomainOSStatus","kCFErrorDomainPOSIX","to_owned","to_string","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFFileDescriptor","CFFileDescriptorCallBack","CFFileDescriptorContext","CFFileDescriptorCreate","CFFileDescriptorCreateRunLoopSource","CFFileDescriptorDisableCallBacks","CFFileDescriptorEnableCallBacks","CFFileDescriptorGetContext","CFFileDescriptorGetNativeDescriptor","CFFileDescriptorGetTypeID","CFFileDescriptorInvalidate","CFFileDescriptorIsValid","CFFileDescriptorNativeDescriptor","CFFileDescriptorRef","__CFFileDescriptor","as_CFTypeRef","as_concrete_TypeRef","as_raw_fd","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","context","copyDescription","disable_callbacks","drop","enable_callbacks","eq","equivalent","from","from","from","from_mut_void","from_void","info","into","into","into","invalidate","kCFFileDescriptorReadCallBack","kCFFileDescriptorWriteCallBack","new","release","retain","to_owned","to_owned","to_run_loop_source","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","valid","version","wrap_under_create_rule","wrap_under_get_rule","CFAllocatorRef","CFIndex","CFMachPort","CFMachPortCreateRunLoopSource","CFMachPortGetTypeID","CFMachPortRef","CFTypeID","__CFMachPort","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_runloop_source","drop","eq","equivalent","fmt","from","from","from_mut_void","from_void","into","into","to_owned","to_void","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFBooleanGetTypeID","CFBooleanGetValue","CFBooleanRef","CFNumber","CFNumberCompare","CFNumberCreate","CFNumberGetType","CFNumberGetTypeID","CFNumberGetValue","CFNumberRef","CFNumberType","__CFBoolean","__CFNumber","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","drop","eq","equivalent","fmt","from","from","from","from","from","from","from","from_mut_void","from_void","into","into","into","kCFBooleanFalse","kCFBooleanTrue","kCFNumberCFIndexType","kCFNumberCGFloatType","kCFNumberCharType","kCFNumberDoubleType","kCFNumberFloat32Type","kCFNumberFloat64Type","kCFNumberFloatType","kCFNumberIntType","kCFNumberLongLongType","kCFNumberLongType","kCFNumberMaxType","kCFNumberNSIntegerType","kCFNumberSInt16Type","kCFNumberSInt32Type","kCFNumberSInt64Type","kCFNumberSInt8Type","kCFNumberShortType","partial_cmp","to_f32","to_f64","to_i32","to_i64","to_owned","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFPropertyList","CFPropertyListCreateData","CFPropertyListCreateWithData","CFPropertyListFormat","CFPropertyListMutabilityOptions","CFPropertyListRef","CFPropertyListSubClass","as_CFType","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","create_data","create_with_data","downcast","downcast_into","drop","eq","equivalent","fmt","from","instance_of","into","into_CFPropertyList","into_CFType","kCFPropertyListBinaryFormat_v1_0","kCFPropertyListImmutable","kCFPropertyListMutableContainers","kCFPropertyListMutableContainersAndLeaves","kCFPropertyListOpenStepFormat","kCFPropertyListXMLFormat_v1_0","retain_count","show","to_CFPropertyList","to_owned","try_from","try_into","type_id","type_of","wrap_under_create_rule","wrap_under_get_rule","CFRunLoop","CFRunLoopActivity","CFRunLoopAddCommonMode","CFRunLoopAddObserver","CFRunLoopAddSource","CFRunLoopAddTimer","CFRunLoopContainsObserver","CFRunLoopContainsSource","CFRunLoopContainsTimer","CFRunLoopCopyAllModes","CFRunLoopCopyCurrentMode","CFRunLoopGetCurrent","CFRunLoopGetMain","CFRunLoopGetNextTimerFireDate","CFRunLoopGetTypeID","CFRunLoopIsWaiting","CFRunLoopMode","CFRunLoopObserver","CFRunLoopObserverCallBack","CFRunLoopObserverContext","CFRunLoopObserverCreate","CFRunLoopObserverDoesRepeat","CFRunLoopObserverGetActivities","CFRunLoopObserverGetContext","CFRunLoopObserverGetOrder","CFRunLoopObserverGetTypeID","CFRunLoopObserverInvalidate","CFRunLoopObserverIsValid","CFRunLoopObserverRef","CFRunLoopRef","CFRunLoopRemoveObserver","CFRunLoopRemoveSource","CFRunLoopRemoveTimer","CFRunLoopRun","CFRunLoopRunInMode","CFRunLoopRunResult","CFRunLoopSource","CFRunLoopSourceContext","CFRunLoopSourceContext1","CFRunLoopSourceCreate","CFRunLoopSourceGetContext","CFRunLoopSourceGetOrder","CFRunLoopSourceGetTypeID","CFRunLoopSourceInvalidate","CFRunLoopSourceIsValid","CFRunLoopSourceRef","CFRunLoopSourceSignal","CFRunLoopStop","CFRunLoopTimer","CFRunLoopTimerCallBack","CFRunLoopTimerContext","CFRunLoopTimerCreate","CFRunLoopTimerDoesRepeat","CFRunLoopTimerGetContext","CFRunLoopTimerGetInterval","CFRunLoopTimerGetNextFireDate","CFRunLoopTimerGetOrder","CFRunLoopTimerGetTolerance","CFRunLoopTimerGetTypeID","CFRunLoopTimerInvalidate","CFRunLoopTimerIsValid","CFRunLoopTimerRef","CFRunLoopTimerSetNextFireDate","CFRunLoopTimerSetTolerance","CFRunLoopWakeUp","Finished","HandledSource","Stopped","TimedOut","__CFRunLoop","__CFRunLoopObserver","__CFRunLoopSource","__CFRunLoopTimer","add_observer","add_source","add_timer","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contains_observer","contains_source","contains_timer","copyDescription","copyDescription","copyDescription","copyDescription","current_mode","drop","drop","drop","drop","eq","eq","eq","eq","eq","equal","equal","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_file_descriptor","from_mut_void","from_mut_void","from_mut_void","from_mut_void","from_void","from_void","from_void","from_void","getPort","get_current","get_main","hash","hash","info","info","info","info","into","into","into","into","into","into","into","into","into","into","into","into","into","kCFRunLoopAfterWaiting","kCFRunLoopAllActivities","kCFRunLoopBeforeSources","kCFRunLoopBeforeTimers","kCFRunLoopBeforeWaiting","kCFRunLoopCommonModes","kCFRunLoopDefaultMode","kCFRunLoopEntry","kCFRunLoopExit","kCFRunLoopRunFinished","kCFRunLoopRunHandledSource","kCFRunLoopRunStopped","kCFRunLoopRunTimedOut","new","perform","perform","release","release","release","release","remove_observer","remove_source","remove_timer","retain","retain","retain","retain","run_current","run_in_mode","schedule","stop","to_owned","to_owned","to_owned","to_owned","to_owned","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","wrap_under_get_rule","CFSet","CFSetApplierFunction","CFSetApplyFunction","CFSetCallBacks","CFSetContainsValue","CFSetCopyDescriptionCallBack","CFSetCreate","CFSetCreateCopy","CFSetEqualCallBack","CFSetGetCount","CFSetGetCountOfValue","CFSetGetTypeID","CFSetGetValue","CFSetGetValueIfPresent","CFSetGetValues","CFSetHashCallBack","CFSetRef","CFSetReleaseCallBack","CFSetRetainCallBack","__CFSet","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","drop","eq","equal","equivalent","fmt","from","from","from","from_mut_void","from_slice","from_void","hash","into","into","into","kCFTypeSetCallBacks","len","release","retain","to_owned","to_owned","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","wrap_under_create_rule","wrap_under_get_rule","CFString","CFStringCompareFlags","CFStringCreateWithBytes","CFStringCreateWithBytesNoCopy","CFStringCreateWithCString","CFStringCreateWithCharactersNoCopy","CFStringEncoding","CFStringEncodings","CFStringGetBytes","CFStringGetCString","CFStringGetCStringPtr","CFStringGetLength","CFStringGetTypeID","CFStringRef","UniChar","__CFString","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","char_len","clone","clone_into","drop","eq","eq","eq","equivalent","fmt","fmt","from","from","from","from_mut_void","from_static_string","from_str","from_void","into","into","kCFStringEncodingUTF8","new","to_owned","to_string","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFTimeZone","CFTimeZoneCopyDefault","CFTimeZoneCopySystem","CFTimeZoneCreateWithTimeIntervalFromGMT","CFTimeZoneGetName","CFTimeZoneGetSecondsFromGMT","CFTimeZoneGetTypeID","CFTimeZoneRef","__CFTimeZone","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","drop","eq","equivalent","fmt","from","from","from_mut_void","from_void","into","into","name","new","seconds_from_gmt","system","to_owned","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFURL","CFURLBookmarkCreationOptions","CFURLBookmarkFileCreationOptions","CFURLBookmarkResolutionOptions","CFURLCanBeDecomposed","CFURLClearResourcePropertyCache","CFURLCopyAbsoluteURL","CFURLCopyFileSystemPath","CFURLCopyFragment","CFURLCopyHostName","CFURLCopyLastPathComponent","CFURLCopyNetLocation","CFURLCopyParameterString","CFURLCopyPassword","CFURLCopyPath","CFURLCopyPathExtension","CFURLCopyQueryString","CFURLCopyResourceSpecifier","CFURLCopyScheme","CFURLCopyStrictPath","CFURLCopyUserName","CFURLCreateAbsoluteURLWithBytes","CFURLCreateBookmarkData","CFURLCreateBookmarkDataFromAliasRecord","CFURLCreateBookmarkDataFromFile","CFURLCreateByResolvingBookmarkData","CFURLCreateFilePathURL","CFURLCreateFromFileSystemRepresentation","CFURLCreateResourcePropertiesForKeysFromBookmarkData","CFURLCreateResourcePropertyForKeyFromBookmarkData","CFURLCreateWithBytes","CFURLCreateWithFileSystemPath","CFURLCreateWithFileSystemPathRelativeToBase","CFURLGetBytes","CFURLGetFileSystemRepresentation","CFURLGetPortNumber","CFURLGetString","CFURLGetTypeID","CFURLHasDirectoryPath","CFURLPathStyle","CFURLRef","CFURLSetResourcePropertyForKey","CFURLStartAccessingSecurityScopedResource","CFURLStopAccessingSecurityScopedResource","CFURLWriteBookmarkDataToFile","__CFURL","absolute","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","drop","eq","equivalent","fmt","from","from","from_file_system_path","from_mut_void","from_path","from_void","get_file_system_path","get_string","into","into","kCFURLAttributeModificationDateKey","kCFURLBookmarkCreationMinimalBookmarkMask","kCFURLBookmarkCreationPreferFileIDResolutionMask","kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","kCFURLBookmarkCreationSuitableForBookmarkFile","kCFURLBookmarkCreationWithSecurityScope","kCFURLContentAccessDateKey","kCFURLContentModificationDateKey","kCFURLCreationDateKey","kCFURLFileResourceIdentifierKey","kCFURLFileResourceTypeKey","kCFURLFileSecurityKey","kCFURLHFSPathStyle","kCFURLHasHiddenExtensionKey","kCFURLIsDirectoryKey","kCFURLIsExecutableKey","kCFURLIsHiddenKey","kCFURLIsPackageKey","kCFURLIsReadableKey","kCFURLIsRegularFileKey","kCFURLIsSymbolicLinkKey","kCFURLIsSystemImmutableKey","kCFURLIsUserImmutableKey","kCFURLIsVolumeKey","kCFURLIsWritableKey","kCFURLLabelNumberKey","kCFURLLinkCountKey","kCFURLLocalizedLabelKey","kCFURLLocalizedNameKey","kCFURLLocalizedTypeDescriptionKey","kCFURLNameKey","kCFURLPOSIXPathStyle","kCFURLParentDirectoryURLKey","kCFURLPreferredIOBlockSizeKey","kCFURLTypeIdentifierKey","kCFURLVolumeIdentifierKey","kCFURLVolumeURLKey","kCFURLWindowsPathStyle","to_owned","to_path","to_void","to_void","to_void","try_from","try_from","try_into","try_into","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CFUUID","CFUUIDBytes","CFUUIDCreate","CFUUIDCreateFromUUIDBytes","CFUUIDGetTypeID","CFUUIDGetUUIDBytes","CFUUIDRef","__CFUUID","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","byte0","byte1","byte10","byte11","byte12","byte13","byte14","byte15","byte2","byte3","byte4","byte5","byte6","byte7","byte8","byte9","clone","clone","clone_into","clone_into","default","default","drop","eq","equivalent","fmt","from","from","from","from_mut_void","from_void","into","into","into","new","to_owned","to_owned","to_void","to_void","to_void","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule"],"q":[[0,"core_foundation"],[25,"core_foundation::array"],[129,"core_foundation::attributed_string"],[201,"core_foundation::base"],[392,"core_foundation::boolean"],[423,"core_foundation::bundle"],[479,"core_foundation::characterset"],[547,"core_foundation::data"],[592,"core_foundation::date"],[641,"core_foundation::dictionary"],[786,"core_foundation::error"],[834,"core_foundation::filedescriptor"],[904,"core_foundation::mach_port"],[945,"core_foundation::number"],[1026,"core_foundation::propertylist"],[1069,"core_foundation::runloop"],[1362,"core_foundation::set"],[1432,"core_foundation::string"],[1489,"core_foundation::timezone"],[1534,"core_foundation::url"],[1655,"core_foundation::uuid"],[1723,"core::ffi"],[1724,"core::fmt"],[1725,"core::fmt"],[1726,"core::option"],[1727,"std::os::raw"],[1728,"alloc::vec"],[1729,"core::result"],[1730,"core::any"],[1731,"core::cmp"],[1732,"core::fmt"],[1733,"core::convert"],[1734,"core::marker"],[1735,"alloc::string"],[1736,"std::os::fd::raw"],[1737,"core::time"],[1738,"std::path"]],"d":["","Heterogeneous immutable arrays.","","","A Boolean type.","Core Foundation Bundle Type","A set of Unicode compliant characters.","Core Foundation byte buffers.","Core Foundation date objects.","Declare a Rust type that wraps an underlying …","Dictionaries of key-value pairs.","Core Foundation errors.","","","Implement <code>std::fmt::Debug</code> for the given type.","Provide an implementation of the <code>TCFType</code> trait for the Rust","","Immutable numbers.","Core Foundation property lists","","An immutable bag of elements.","Immutable strings.","Core Foundation time zone objects.","A URL type for Core Foundation.","Core Foundation UUID objects.","A heterogeneous immutable array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>CFArray</code> with the given elements, which must …","Creates a new <code>CFArray</code> with the given elements, which must …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns the same array, but with the type reset to void …","Iterates over the elements of this <code>CFArray</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Superclass of all Core Foundation objects.","","","","A trait describing how to convert from the stored *mut …","A trait describing how to convert from the stored *const …","","A reference to a mutable element inside a container","A reference to an element inside a container","","","The reference type wrapped inside this type.","","All Core Foundation types implement this trait. The …","Trait for all types which are Core Foundation reference …","A trait describing how to convert from the stored *const …","","Returns the object as a wrapped <code>CFType</code>. The reference …","Returns the object as a raw <code>CFTypeRef</code>. The reference count …","","","Returns the object as its concrete TypeRef.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to downcast the <code>CFType</code> to a subclass. Checking if the …","Similar to <code>downcast</code>, but consumes self and can thus avoid …","","","","","","","","","","","Formats the value using <code>CFCopyDescription</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Returns true if this value is an instance of another type.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the object as a wrapped <code>CFType</code>. Consumes self and …","","","","","","","Constant used by some functions to indicate failed …","","","","","","","","","","Returns the reference count of the object. It is unwise to …","Writes a debugging version of this object on standard …","Always use this method to construct a <code>CFIndex</code> value. It …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the type ID for this class.","","","","","","","","","","Returns the type ID of this object.","","Returns an instance of the object, wrapping the underlying …","","","Returns an instance of the object, wrapping the underlying …","","","A Boolean type.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","A Bundle type.","","","","","","","","","","","","","","","","","","","","Bundle’s resources location","Bundle’s own location","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Bundle’s own location","","Bundle’s resources location","","","","","","","","","","","","","","","An immutable set of Unicde characters.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A byte buffer.","","","","","","","","","","","","","","","Returns a pointer to the underlying bytes in this data. …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a CFData referencing <code>buffer</code> without creating a copy","Creates a CFData around a copy <code>buffer</code>","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length of this byte buffer.","","","","","","","","","","","","","","","","A date.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds the key-value pair to the dictionary if no such key …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new mutable dictionary with the key-value pairs …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Panics","Panics","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the same dictionary, but with the types reset to …","Returns the same dictionary, but with the types reset to …","","","","","","","","","","Removes the value of the key from the dictionary.","","Replaces the value of the key in the dictionary.","","","Sets the value of the key in the dictionary.","Returns a <code>CFDictionary</code> pointing to the same underlying …","Returns a <code>CFMutableDictionary</code> pointing to the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error value.","","","","","","","","","","","","","","","Returns the code identifying this type of error.","","Returns a human-presentable description of the error.","Returns a string identifying the domain with which this …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An immutable numeric value.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An immutable numeric value.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A CFPropertyList struct. This is superclass to <code>CFData</code>, …","","","","","","Trait for all subclasses of <code>CFPropertyList</code>.","","","","","","","","","","Try to downcast the <code>CFPropertyList</code> to a subclass. Checking …","Similar to <code>downcast</code>, but consumes self and can thus avoid …","","","","","Returns the argument unchanged.","Returns true if this value is an instance of another type.","Calls <code>U::from(self)</code>.","Equal to <code>to_CFPropertyList</code>, but consumes self and avoids …","","","","","","","","Returns the reference count of the object. It is unwise to …","Writes a debugging version of this object on standard …","Create an instance of the superclass type <code>CFPropertyList</code> …","","","","","Returns the type ID of this object. Will be one of CFData, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An immutable bag of elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new set from a list of <code>CFType</code> instances.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Get the number of elements in the CFSet","","","","","","","","","","","","","","","","","","","","","An immutable string in one of a variety of encodings.","","","","","","","","","","","","","","","","","","","","","","Returns the number of characters in the string.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Like <code>CFString::new</code>, but references a string that can be …","See also CFString::new for a variant of this which does …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new <code>CFString</code> instance from a Rust string.","","","","","","","","","","","","","","","A time zone.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The timezone database ID that identifies the time zone. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A UUID.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1,2]],[[1,3]],0,[[1,2,3]],[[1,2,3,3],4],0,[[1,2,3],5],0,[[3,3,4,6],1],[[3,1],1],[[3,4,6],1],[[3,4,1],1],0,[[1,4,4]],[1,4],[[1,2,3],4],[[1,2,3],4],[[1,2,3],4],[[],7],[[1,4],3],[[1,2,3]],[[1,4,3]],0,0,0,[1],[[1,4]],[[1,2,3,4]],0,[[1,4,3]],[[1,2,3]],0,0,0,0,[8,9],[8,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[6,6],[[]],[[]],0,[8],[[8,8],11],0,[[],11],[[8,12],13],[[]],[[]],[[]],[[]],[[[15,[14]]],[[8,[14]]]],[[[15,[16]]],[[8,[16]]]],[3,17],[3,18],[[[8,[19]],20],[[21,[[18,[19]]]]]],[8,[[23,[22]]]],[[[8,[19]],20],[[18,[19]]]],[[8,2],[[23,[22]]]],[[]],[[]],[[]],[[]],[[[8,[19]]],[[24,[19]]]],[[]],[8,8],[8,24],0,[8,20],[[[24,[19]]],7],[[[24,[19]]],[[21,[[18,[19]]]]]],0,0,[[]],[[]],[8,8],[10,22],[8,22],[8,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],27],[[],26],[[],26],[[],26],0,[10,8],[10,8],0,[[3,28,29],30],[[3,4],30],[[3,4,30],30],[30,4],[[],7],0,[[30,2,28]],[[30,2,28,3]],0,0,0,[31,9],[32,9],[31,33],[32,34],[[]],[[]],[[]],[[]],[[]],[[]],[31,20],[32,20],[31,31],[32,32],[[]],[[]],[[],32],[31],[32],[[31,31],11],[[32,32],11],[[],11],[[],11],[[]],[[]],[[]],[3,17],[3,17],[3,18],[3,18],[[]],[[]],[[]],[35,31],[[],32],[[32,35,2]],[[32,2,36,14]],[[]],[[]],[33,22],[34,22],[31,22],[31,22],[32,22],[32,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],27],[[],26],[[],26],[[],27],[33,31],[34,32],[33,31],[34,32],0,0,[[3,4,7],3],0,0,0,[[3,37],3],[[3,3]],0,[[3,37]],[[],3],[[3,4,7],4],[[],7],0,[[3,3,4,7],3],0,0,0,0,[3],0,[3,28],[[3,3],5],[3,4],[3,7],[3,7],0,0,0,0,0,0,[3],[3,3],[3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],38],[[],9],[38,9],[39,9],[[]],[38,9],[39,40],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,38],[39,39],[41,41],[2,2],[37,37],[[]],[[]],[[]],[[]],[[]],0,0,[18],[17],[17],[38,[[21,[42]]]],[38,[[21,[42]]]],[38],[39],[[[18,[43]],[18,[43]]],11],[[[17,[43]],[17,[43]]],11],[[38,38],11],[[39,39],11],[[41,41],11],[[],11],[[[18,[44]],12],[[25,[45]]]],[[[17,[44]],12],[[25,[45]]]],[[38,12],13],[[41,12],[[25,[45]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,[[17,[46]]]],[3,17],[3,17],[22,[[18,[46]]]],[3,18],[3,18],[3],0,[[4,4],2],[[],11],[[]],[[]],[[]],[[]],[41,47],[[]],[[]],[[]],[46,38],0,0,0,0,0,0,0,0,0,0,0,[37,39],0,0,0,0,[[],20],[[]],[[],20],[[]],[[]],[[]],[[]],[[]],[[],22],[9,22],[38,22],[38,22],[39,22],[39,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],27],[[],26],[[],26],[[],27],[[],26],[[],26],[[],27],[[],26],[[],26],[[],26],[[],27],0,[[]],[9,38],[40,39],[[]],[9,38],[40,39],0,[[],7],0,[48,9],[48,49],[[]],[[]],[48,48],[[]],[48],[[48,48],11],[[],11],[[],48],[[48,12],13],[[]],[11,48],[3,17],[3,18],[[]],0,0,[[]],[48,22],[48,22],[[],48],[[],25],[[],25],[[],27],[[],26],[49,48],[49,48],0,[50,51],[50,51],[50,51],[50,51],[50,51],[[3,51],50],[28,50],[[50,28],3],[50,29],[[],50],[[],7],0,0,[52,9],[52,53],[[]],[[]],[[]],[[]],[52,[[21,[54]]]],[52,[[21,[54]]]],[35,[[21,[52]]]],[52,52],[[]],[52],[[52,52],11],[[],11],[52,[[21,[54]]]],[[]],[[]],[3,17],[3,18],[[52,35],22],[52,[[55,[35,38]]]],[[]],[[]],[[],52],[54,[[21,[52]]]],[52,[[21,[56]]]],[52,[[21,[54]]]],[52,[[21,[56]]]],[52,[[21,[54]]]],[[]],[53,22],[52,22],[52,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[53,52],[53,52],0,[[57,2]],[[57,28]],[[3,57],58],[[3,57],57],[3,57],[[3,57],57],[[3,58],57],[[3,2],57],[[3,28],57],[4,57],[[],7],[[57,57]],[57],[[57,59],5],0,0,[[57,2]],[[57,28]],[[57,57]],0,0,[60,9],[60,61],[[]],[[]],[[]],[[]],[60,60],[[]],[60],[[60,60],11],[[],11],[[60,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[61,22],[60,22],[60,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],27],[[],26],[61,60],[61,60],0,[[3,5,4],58],[[3,5,4,3],58],[58,5],[[58,2,5]],[58,4],[[],7],0,0,[62,9],[62,63],[[]],[[]],[[]],[[]],[62,[[15,[5]]]],[62,62],[[]],[62,[[15,[5]]]],[62],[[62,62],11],[[],11],[[62,12],13],[[]],[[]],[[[67,[[0,[[64,[[15,[5]]]],65,66]]]]],62],[[[15,[5]]],62],[3,17],[3,18],[[]],[[]],[62,20],[[]],[63,22],[62,22],[62,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[63,62],[63,62],0,[[],68],0,[[69,69,3],41],[[3,68],69],[69,68],[[69,69],68],[[],7],0,0,0,[70,71],[70,9],[70,72],[[]],[[]],[[]],[[]],[70,70],[[]],[[70,70],47],[70],[[70,70],11],[[],11],[[70,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],0,0,[71,70],[[],70],[[70,70],[[21,[47]]]],[[]],[72,22],[70,22],[70,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[72,70],[72,70],0,[[29,3,3]],0,[[29,3]],[[29,3],5],0,[[3,3,3,4,73,74],29],[[3,4,73,74],29],[[3,4,29],29],0,[29,4],[[29,3,3]],[[],7],[[29,3,3],5],0,0,0,0,[29],[[29,3]],[[29,3,3]],0,[[29,3,3]],0,0,0,0,[[[76,[[75,[[75,[[75,[75]]]]]],[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]]],[55,9],[76,9],[55,77],[76,78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,55],[76,76],[73,73],[74,74],[[]],[[]],[[]],[[]],[[[55,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]],11],[[76,22],11],0,0,[[76,4],76],[[],76],[55],[76],[[55,55],11],[[76,76],11],0,0,[[],11],[[],11],[[[55,[[75,[[75,[[75,[75]]]]]],19]],[75,[[75,[[75,[[75,[75]]]]]]]]],[[21,[[18,[19]]]]]],[[[76,[[75,[[75,[[75,[75]]]]]],19]],[75,[[75,[[75,[[75,[75]]]]]]]]],[[21,[[18,[19]]]]]],[[55,12],13],[[76,12],13],[[]],[[]],[55,76],[[]],[[]],[[]],[15,[[55,[14,14]]]],[15,[[76,[[75,[[75,[[75,[75]]]]]],[75,[[75,[[75,[75]]]]]]]]]],[3,17],[3,17],[3,18],[3,18],[[[55,[[75,[[75,[[75,[75]]]]]],19]],[75,[[75,[[75,[[75,[75]]]]]]]]],[[18,[19]]]],[[[76,[[75,[[75,[[75,[75]]]]]],19]],[75,[[75,[[75,[[75,[75]]]]]]]]],[[18,[19]]]],[55],[76],0,[[]],[[]],[[]],[[]],[[]],[55,55],[76,76],[55,11],[76,11],0,0,[55,7],[76,7],[[],76],0,0,[[[76,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]]],[76],[[[76,[[75,[[75,[[75,[75]]]]]],[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]]],0,0,[[[76,[[75,[[75,[[75,[75]]]]]],[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]],[75,[[75,[[75,[[75,[75]]]]]]]]]],[76,55],[55,76],[[]],[[]],[[]],[[]],[55,55],[76,76],[77,22],[78,22],[55,22],[55,22],[76,22],[76,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[[],27],[[],26],[[],26],[[],26],0,0,[4,76],[77,55],[78,76],[77,55],[78,76],0,[79,28],[79,4],[79,28],[[],7],0,0,[80,9],[80,81],[[]],[[]],[[]],[[]],[80,80],[[]],[80,20],[80,82],[80,35],[80,35],[80],[[80,80],11],[[],11],[[80,12],13],[[80,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],0,0,0,0,[[]],[[],83],[81,22],[80,22],[80,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[81,80],[81,80],0,0,0,[[3,84,5,85],86],[[3,86,4],87],[[86,7]],[[86,7]],[[86,85]],[86,84],[[],7],[86],[86,5],0,0,0,[88,9],[88,89],[88,90],[[]],[[]],[[]],[[]],[[]],[[]],[85,85],[88,88],[[]],[[]],[88,85],0,[[88,91]],[88],[[88,91]],[[88,88],11],[[],11],[[]],[[]],[[]],[3,17],[3,18],0,[[]],[[]],[[]],[88],0,0,[[90,11,92,[21,[85]]],[[21,[88]]]],0,0,[[]],[[]],[[88,20],[[21,[93]]]],[89,22],[88,22],[88,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],27],[88,11],0,[89,88],[89,88],0,0,0,[[3,94,4],87],[[],7],0,0,0,[95,9],[95,96],[[]],[[]],[[]],[[]],[95,95],[[]],[[95,20],[[25,[93]]]],[95],[[95,95],11],[[],11],[[95,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],[[]],[40,22],[96,22],[95,22],[95,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[96,95],[96,95],[[],7],[97,11],0,0,[[98,98,3],41],[[3,99,3],98],[98,99],[[],7],[[98,99,3],11],0,0,0,0,[100,9],[100,101],[[]],[[]],[[]],[[]],[[]],[[]],[100,100],[[]],[[100,100],47],[100],[[100,100],11],[[],11],[[100,12],13],[[]],[[]],[102,100],[[]],[68,100],[84,100],[103,100],[3,17],[3,18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[100,100],[[21,[47]]]],[100,[[21,[102]]]],[100,[[21,[68]]]],[100,[[21,[84]]]],[100,[[21,[103]]]],[[]],[49,22],[101,22],[100,22],[100,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],27],[101,100],[101,100],0,[[3,3,4,7,79],58],[[3,58,7,4,79],3],0,0,0,0,[104,38],[104,9],[104,105],[[]],[[]],[104,104],[[]],[[22,106],[[25,[62,80]]]],[[62,107],[[25,[80]]]],[104,[[21,[108]]]],[104,[[21,[108]]]],[104],[[104,104],11],[[],11],[[104,12],13],[[]],[104,11],[[]],[46,104],[104,38],0,0,0,0,0,0,[104,20],[104],[[],104],[[]],[[],25],[[],25],[[],26],[104,27],[105,104],[105,104],0,0,[[109,28]],[[109,110,28]],[[109,87,28]],[[109,111,28]],[[109,110,28],5],[[109,87,28],5],[[109,111,28],5],[109,1],[109,28],[[],109],[[],109],[[109,28],68],[[],7],[109,5],0,0,0,0,[[3,7,5,4,112],110],[110,5],[110,7],[[110,112]],[110,4],[[],7],[110],[110,5],0,0,[[109,110,28]],[[109,87,28]],[[109,111,28]],[[]],[[28,68,5],84],0,0,0,0,[[3,4,113],87],[[87,113]],[87,4],[[],7],[87],[87,5],0,[87],[109],0,0,0,[[3,68,68,7,4,114],111],[111,5],[[111,114]],[111,68],[111,68],[111,4],[111,68],[[],7],[111],[111,5],0,[[111,68]],[[111,68]],[109],0,0,0,0,0,0,0,0,[[115,116,117]],[[115,93,117]],[[115,118,117]],[115,9],[118,9],[93,9],[116,9],[115,119],[118,120],[93,121],[116,122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[115,115],[123,123],[118,118],[93,93],[116,116],[[]],[[]],[[]],[[]],[[]],[[115,116,117],11],[[115,93,117],11],[[115,118,117],11],0,0,0,0,[115,[[21,[83]]]],[115],[118],[93],[116],[[115,115],11],[[123,123],11],[[118,118],11],[[93,93],11],[[116,116],11],0,0,[[],11],[[],11],[[],11],[[],11],[[115,12],13],[[123,12],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[88,20],[[21,[93]]]],[3,17],[3,17],[3,17],[3,17],[3,18],[3,18],[3,18],[3,18],0,[[],115],[[],115],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[71,124,91,20,125,114],118],0,0,0,0,0,0,[[115,116,117]],[[115,93,117]],[[115,118,117]],0,0,0,0,[[]],[[36,126,11],123],0,[115],[[]],[[]],[[]],[[]],[[]],[119,22],[121,22],[122,22],[120,22],[115,22],[115,22],[118,22],[118,22],[93,22],[93,22],[116,22],[116,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],27],[[],26],[[],26],[[],27],[[],26],[[],27],[[],26],[[],27],[[],26],0,0,0,0,[119,115],[120,118],[121,93],[122,116],[119,115],[120,118],[121,93],[122,116],0,0,[[127,3]],0,[[127,3],5],0,[[3,3,4,128],127],[[3,127],127],0,[127,4],[[127,3],4],[[],7],[[127,3],3],[[127,3,3],5],[[127,3]],0,0,0,0,0,[129,9],[129,130],[[]],[[]],[[]],[[]],[[]],[[]],[129,129],[128,128],[[]],[[]],0,[129],[[129,129],11],0,[[],11],[[129,12],13],[[]],[[]],[[]],[3,17],[[[15,[14]]],[[129,[14]]]],[3,18],0,[[]],[[]],[[]],0,[129,7],0,0,[[]],[[]],[129,22],[129,22],[130,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],27],[[],26],[[],26],[[],26],0,[130,129],[130,129],0,0,[[3,5,4,99,5],28],[[3,5,4,99,5,3],28],[[3,131,99],28],[[3,59,4,3],28],0,0,[[28,2,99,5,5,5,4,4],4],[[28,131,4,99],5],[[28,99],131],[28,4],[[],7],0,0,0,[35,9],[35,36],[[]],[[]],[[]],[[]],[35,20],[35,35],[[]],[35],[[35,82],11],[[35,35],11],[[35,83],11],[[],11],[[35,12],13],[[35,12],13],[[]],[[]],[82,35],[3,17],[82,35],[82,[[25,[35]]]],[3,18],[[]],[[]],0,[82,35],[[]],[[],83],[36,22],[35,22],[35,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],27],[[],26],[36,35],[36,35],0,[[],132],[[],132],[[3,68],132],[132,28],[[132,68],68],[[],7],0,0,[133,9],[133,134],[[]],[[]],[[]],[[]],[133,133],[[]],[[],133],[133],[[133,133],11],[[],11],[[133,12],13],[[]],[[]],[3,17],[3,18],[[]],[[]],[133,35],[124,133],[[133,70],124],[[],133],[[]],[134,22],[133,22],[133,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],27],[134,133],[134,133],0,0,0,0,[51,5],[51],[51,51],[[51,4],28],[[51,28],28],[51,28],[51,28],[51,28],[[51,28],28],[51,28],[51,28],[51,28],[[51,28],28],[51,28],[51,28],[[51,5],28],[51,28],[[3,5,4,99,51,5],51],[[3,51,7,1,51,79],58],[[3,58],58],[[3,51,79],58],[[3,58,7,51,1,5,79],51],[[3,51,79],51],[[3,5,4,5],51],[[3,1,58],29],[[3,28,58],3],[[3,5,4,99,51],51],[[3,28,4,5],51],[[3,28,4,5,51],51],[[51,5,4],4],[[51,5,5,4],5],[51,84],[51,28],[[],7],[51,5],0,0,[[51,28,3,79],5],[51,5],[51],[[58,51,7,79],5],0,[54,54],[54,9],[54,135],[[]],[[]],[[]],[[]],[54,54],[[]],[54],[[54,54],11],[[],11],[[54,12],13],[[]],[[]],[[35,136,11],54],[3,17],[[[64,[137]],11],[[21,[54]]]],[3,18],[[54,136],35],[54,35],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[54,[[21,[56]]]],[135,22],[54,22],[54,22],[[],25],[[],25],[[],25],[[],25],[[],26],[[],27],[[],26],[135,54],[135,54],0,0,[3,138],[[3,139],138],[[],7],[138,139],0,0,[140,9],[140,141],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[139,139],[140,140],[[]],[[]],[[],139],[[],140],[140],[[140,140],11],[[],11],[[140,12],13],[[]],[[]],[[]],[3,17],[3,18],[[]],[[]],[[]],[[],140],[[]],[[]],[141,22],[140,22],[140,22],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],27],[141,140],[141,140]],"c":[],"p":[[3,"__CFArray",25],[3,"CFRange",201],[4,"c_void",1723],[15,"isize"],[15,"u8"],[3,"CFArrayCallBacks",25],[15,"usize"],[3,"CFArray",25],[6,"CFTypeRef",201],[6,"CFArrayRef",25],[15,"bool"],[3,"Formatter",1724],[6,"Result",1724],[8,"TCFType",201],[15,"slice"],[8,"Copy",1725],[3,"ItemMutRef",201],[3,"ItemRef",201],[8,"FromVoid",201],[6,"CFIndex",904],[4,"Option",1726],[6,"c_void",1727],[3,"Vec",1728],[3,"CFArrayIterator",25],[4,"Result",1729],[3,"TypeId",1730],[6,"CFTypeID",904],[3,"__CFString",1432],[3,"__CFDictionary",641],[3,"__CFAttributedString",129],[3,"CFAttributedString",129],[3,"CFMutableAttributedString",129],[6,"CFAttributedStringRef",129],[6,"CFMutableAttributedStringRef",129],[3,"CFString",1432],[6,"CFStringRef",1432],[3,"CFAllocatorContext",201],[3,"CFType",201],[3,"CFAllocator",201],[6,"CFAllocatorRef",904],[4,"CFComparisonResult",201],[8,"ConcreteCFType",0],[8,"PartialEq",1731],[8,"Debug",1724],[3,"Error",1724],[8,"Sized",1725],[4,"Ordering",1731],[3,"CFBoolean",392],[6,"CFBooleanRef",945],[3,"__CFBundle",423],[3,"__CFURL",1534],[3,"CFBundle",423],[6,"CFBundleRef",423],[3,"CFURL",1534],[3,"CFDictionary",641],[3,"PathBuf",1732],[3,"__CFCharacterSet",479],[3,"__CFData",547],[15,"u16"],[3,"CFCharacterSet",479],[6,"CFCharacterSetRef",479],[3,"CFData",547],[6,"CFDataRef",547],[8,"AsRef",1733],[8,"Sync",1725],[8,"Send",1725],[3,"Arc",1734],[15,"f64"],[3,"__CFDate",592],[3,"CFDate",592],[6,"CFAbsoluteTime",592],[6,"CFDateRef",592],[3,"CFDictionaryKeyCallBacks",641],[3,"CFDictionaryValueCallBacks",641],[8,"ToVoid",201],[3,"CFMutableDictionary",641],[6,"CFDictionaryRef",641],[6,"CFMutableDictionaryRef",641],[3,"__CFError",786],[3,"CFError",786],[6,"CFErrorRef",786],[15,"str"],[3,"String",1735],[15,"i32"],[3,"CFFileDescriptorContext",834],[3,"__CFFileDescriptor",834],[3,"__CFRunLoopSource",1069],[3,"CFFileDescriptor",834],[6,"CFFileDescriptorRef",834],[6,"RawFd",1736],[6,"CFOptionFlags",201],[6,"CFFileDescriptorCallBack",834],[3,"CFRunLoopSource",1069],[3,"__CFMachPort",904],[3,"CFMachPort",904],[6,"CFMachPortRef",904],[3,"__CFBoolean",945],[4,"__CFNumber",945],[15,"u32"],[3,"CFNumber",945],[6,"CFNumberRef",945],[15,"f32"],[15,"i64"],[3,"CFPropertyList",1026],[6,"CFPropertyListRef",1026],[6,"CFPropertyListFormat",1026],[6,"CFPropertyListMutabilityOptions",1026],[8,"CFPropertyListSubClass",1026],[3,"__CFRunLoop",1069],[3,"__CFRunLoopObserver",1069],[3,"__CFRunLoopTimer",1069],[3,"CFRunLoopObserverContext",1069],[3,"CFRunLoopSourceContext",1069],[3,"CFRunLoopTimerContext",1069],[3,"CFRunLoop",1069],[3,"CFRunLoopObserver",1069],[6,"CFRunLoopMode",1069],[3,"CFRunLoopTimer",1069],[6,"CFRunLoopRef",1069],[6,"CFRunLoopTimerRef",1069],[6,"CFRunLoopSourceRef",1069],[6,"CFRunLoopObserverRef",1069],[4,"CFRunLoopRunResult",1069],[6,"CFTimeInterval",592],[6,"CFRunLoopTimerCallBack",1069],[3,"Duration",1737],[3,"__CFSet",1362],[3,"CFSetCallBacks",1362],[3,"CFSet",1362],[6,"CFSetRef",1362],[15,"i8"],[3,"__CFTimeZone",1489],[3,"CFTimeZone",1489],[6,"CFTimeZoneRef",1489],[6,"CFURLRef",1534],[6,"CFURLPathStyle",1534],[3,"Path",1732],[3,"__CFUUID",1655],[3,"CFUUIDBytes",1655],[3,"CFUUID",1655],[6,"CFUUIDRef",1655],[8,"TCFTypeRef",201],[8,"FromMutVoid",201],[8,"CFIndexConvertible",201],[3,"CFRunLoopSourceContext1",1069]]},\
"core_foundation_sys":{"doc":"","t":"AAAAAAAAAAAAAAAAAAAAFFGFFDFGFFFFGFFFFFFFFFGGFFFGFFGGDLLLLLLMMLLLLHMMLLLLLLLMFFFFFGFFGDLLLLLLLGFGDGFFGFFFFGFGGGGFEFFFFFGGGGDFFFGGNNNGGIMKLLLLLLLLLLLLMMLLLLLKMLLLLLHHHHHHHHMMGMMMMLLLLLLLLLLLLMFFFFFFFFFFFGDLLLLLLLFFFFFFFFFFFFFFGGFFFGDLLLLHHHHHHHHHHHHHHHLLLFFFFFFGDLLLLLLLGFFFFFFGGDLLLLHHLLLFGFFGFFFGFFFFGDGGFFFGFDGDLLLLLLLLLLMMMMLLLMLLLHHMMMMLLLLLLLLLLLMMFFFFGDLLLLHHHHLLLGDFFFFFFFFFGGDLLLLLLMLLMLLRRMMLLLLLLLMCCFFGCDLLLLLLLGDFFFFFFFFGFFGFFFNNNNDLLLLLLMLLLMLLMMLLLLLLLMFFGFFFFFGGDELLLLLLLLHHRRRRRRRRRRRRRRRRRLLLLLLFFGGGRRRRRRGFFFFFFFFFFFFFFGDFFFFFFFFGGFFFFFDDFFFFFFGFFGDFFFFFFFFFFGFFFDDDDLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLMMMMMMMLLLLLLLLRRRRRHHRRRRRRMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMGFDFGFFGFFFFFFGGGGDLLLLLLMMLLMLLHMMLLLLLLLMGFFFFGGFFFFFGGDLLLLHLLLFFFFFFGDLLLLLLLGGGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGFFFFDLLLLHHHHHHHHHHHHRHHHHHHHHHHHHHHHHHHRHHHHHRLLLDFFFFGDLLLLMMMMMMMMMMMMMMMMLLLLLLLLLLLLLL","n":["array","attributed_string","base","bundle","characterset","data","date","dictionary","error","filedescriptor","mach_port","messageport","number","propertylist","runloop","set","string","timezone","url","uuid","CFArrayAppendArray","CFArrayAppendValue","CFArrayApplierFunction","CFArrayApplyFunction","CFArrayBSearchValues","CFArrayCallBacks","CFArrayContainsValue","CFArrayCopyDescriptionCallBack","CFArrayCreate","CFArrayCreateCopy","CFArrayCreateMutable","CFArrayCreateMutableCopy","CFArrayEqualCallBack","CFArrayExchangeValuesAtIndices","CFArrayGetCount","CFArrayGetCountOfValue","CFArrayGetFirstIndexOfValue","CFArrayGetLastIndexOfValue","CFArrayGetTypeID","CFArrayGetValueAtIndex","CFArrayGetValues","CFArrayInsertValueAtIndex","CFArrayRef","CFArrayReleaseCallBack","CFArrayRemoveAllValues","CFArrayRemoveValueAtIndex","CFArrayReplaceValues","CFArrayRetainCallBack","CFArraySetValueAtIndex","CFArraySortValues","CFComparatorFunction","CFMutableArrayRef","__CFArray","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","equal","from","from","into","into","kCFTypeArrayCallBacks","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFAttributedStringCreate","CFAttributedStringCreateMutable","CFAttributedStringCreateMutableCopy","CFAttributedStringGetLength","CFAttributedStringGetTypeID","CFAttributedStringRef","CFAttributedStringReplaceString","CFAttributedStringSetAttribute","CFMutableAttributedStringRef","__CFAttributedString","borrow","borrow_mut","from","into","try_from","try_into","type_id","Boolean","CFAllocatorAllocate","CFAllocatorAllocateCallBack","CFAllocatorContext","CFAllocatorCopyDescriptionCallBack","CFAllocatorCreate","CFAllocatorDeallocate","CFAllocatorDeallocateCallBack","CFAllocatorGetContext","CFAllocatorGetDefault","CFAllocatorGetPreferredSizeForSize","CFAllocatorGetTypeID","CFAllocatorPreferredSizeCallBack","CFAllocatorReallocate","CFAllocatorReallocateCallBack","CFAllocatorRef","CFAllocatorReleaseCallBack","CFAllocatorRetainCallBack","CFAllocatorSetDefault","CFComparisonResult","CFCopyDescription","CFEqual","CFGetRetainCount","CFGetTypeID","CFHash","CFHashCode","CFIndex","CFNullRef","CFOptionFlags","CFRange","CFRelease","CFRetain","CFShow","CFTypeID","CFTypeRef","EqualTo","GreaterThan","LessThan","OSStatus","SInt32","TCFTypeRef","allocate","as_void_ptr","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","copyDescription","deallocate","eq","fmt","from","from","from","from_void_ptr","info","init","into","into","into","into","kCFAllocatorDefault","kCFAllocatorMalloc","kCFAllocatorMallocZone","kCFAllocatorNull","kCFAllocatorSystemDefault","kCFAllocatorUseContext","kCFNotFound","kCFNull","length","location","mach_port_t","preferredSize","reallocate","release","retain","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","CFBundleCopyBundleURL","CFBundleCopyExecutableURL","CFBundleCopyPrivateFrameworksURL","CFBundleCopyResourcesDirectoryURL","CFBundleCopySharedSupportURL","CFBundleCreate","CFBundleGetBundleWithIdentifier","CFBundleGetFunctionPointerForName","CFBundleGetInfoDictionary","CFBundleGetMainBundle","CFBundleGetTypeID","CFBundleRef","__CFBundle","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFCharacterSetAddCharactersInRange","CFCharacterSetAddCharactersInString","CFCharacterSetCreateBitmapRepresentation","CFCharacterSetCreateCopy","CFCharacterSetCreateMutable","CFCharacterSetCreateMutableCopy","CFCharacterSetCreateWithBitmapRepresentation","CFCharacterSetCreateWithCharactersInRange","CFCharacterSetCreateWithCharactersInString","CFCharacterSetGetPredefined","CFCharacterSetGetTypeID","CFCharacterSetIntersect","CFCharacterSetInvert","CFCharacterSetIsCharacterMember","CFCharacterSetPredefinedSet","CFCharacterSetRef","CFCharacterSetRemoveCharactersInRange","CFCharacterSetRemoveCharactersInString","CFCharacterSetUnion","CFMutableCharacterSetRef","__CFCharacterSet","borrow","borrow_mut","from","into","kCFCharacterSetAlphaNumeric","kCFCharacterSetCapitalizedLetter","kCFCharacterSetControl","kCFCharacterSetDecimalDigit","kCFCharacterSetDecomposable","kCFCharacterSetIllegal","kCFCharacterSetLetter","kCFCharacterSetLowercaseLetter","kCFCharacterSetNewline","kCFCharacterSetNonBase","kCFCharacterSetPunctuation","kCFCharacterSetSymbol","kCFCharacterSetUppercaseLetter","kCFCharacterSetWhitespace","kCFCharacterSetWhitespaceAndNewline","try_from","try_into","type_id","CFDataCreate","CFDataCreateWithBytesNoCopy","CFDataGetBytePtr","CFDataGetBytes","CFDataGetLength","CFDataGetTypeID","CFDataRef","__CFData","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFAbsoluteTime","CFAbsoluteTimeGetCurrent","CFDateCompare","CFDateCreate","CFDateGetAbsoluteTime","CFDateGetTimeIntervalSinceDate","CFDateGetTypeID","CFDateRef","CFTimeInterval","__CFDate","borrow","borrow_mut","from","into","kCFAbsoluteTimeIntervalSince1904","kCFAbsoluteTimeIntervalSince1970","try_from","try_into","type_id","CFDictionaryAddValue","CFDictionaryApplierFunction","CFDictionaryApplyFunction","CFDictionaryContainsKey","CFDictionaryCopyDescriptionCallBack","CFDictionaryCreate","CFDictionaryCreateMutable","CFDictionaryCreateMutableCopy","CFDictionaryEqualCallBack","CFDictionaryGetCount","CFDictionaryGetKeysAndValues","CFDictionaryGetTypeID","CFDictionaryGetValueIfPresent","CFDictionaryHashCallBack","CFDictionaryKeyCallBacks","CFDictionaryRef","CFDictionaryReleaseCallBack","CFDictionaryRemoveAllValues","CFDictionaryRemoveValue","CFDictionaryReplaceValue","CFDictionaryRetainCallBack","CFDictionarySetValue","CFDictionaryValueCallBacks","CFMutableDictionaryRef","__CFDictionary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","copyDescription","copyDescription","equal","equal","from","from","from","hash","into","into","into","kCFTypeDictionaryKeyCallBacks","kCFTypeDictionaryValueCallBacks","release","release","retain","retain","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","version","CFErrorCopyDescription","CFErrorGetCode","CFErrorGetDomain","CFErrorGetTypeID","CFErrorRef","__CFError","borrow","borrow_mut","from","into","kCFErrorDomainCocoa","kCFErrorDomainMach","kCFErrorDomainOSStatus","kCFErrorDomainPOSIX","try_from","try_into","type_id","CFFileDescriptorCallBack","CFFileDescriptorContext","CFFileDescriptorCreate","CFFileDescriptorCreateRunLoopSource","CFFileDescriptorDisableCallBacks","CFFileDescriptorEnableCallBacks","CFFileDescriptorGetContext","CFFileDescriptorGetNativeDescriptor","CFFileDescriptorGetTypeID","CFFileDescriptorInvalidate","CFFileDescriptorIsValid","CFFileDescriptorNativeDescriptor","CFFileDescriptorRef","__CFFileDescriptor","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","from","from","info","into","into","kCFFileDescriptorReadCallBack","kCFFileDescriptorWriteCallBack","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFAllocatorRef","CFIndex","CFMachPortCreateRunLoopSource","CFMachPortGetTypeID","CFMachPortRef","CFTypeID","__CFMachPort","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFMessagePortCallBack","CFMessagePortContext","CFMessagePortCreateLocal","CFMessagePortCreateRemote","CFMessagePortCreateRunLoopSource","CFMessagePortGetContext","CFMessagePortGetInvalidationCallBack","CFMessagePortGetName","CFMessagePortGetTypeID","CFMessagePortInvalidate","CFMessagePortInvalidationCallBack","CFMessagePortIsRemote","CFMessagePortIsValid","CFMessagePortRef","CFMessagePortSendRequest","CFMessagePortSetInvalidationCallBack","CFMessagePortSetName","None","None","Some","Some","__CFMessagePort","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","fmt","from","from","info","into","into","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFBooleanGetTypeID","CFBooleanGetValue","CFBooleanRef","CFNumberCompare","CFNumberCreate","CFNumberGetType","CFNumberGetTypeID","CFNumberGetValue","CFNumberRef","CFNumberType","__CFBoolean","__CFNumber","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","kCFBooleanFalse","kCFBooleanTrue","kCFNumberCFIndexType","kCFNumberCGFloatType","kCFNumberCharType","kCFNumberDoubleType","kCFNumberFloat32Type","kCFNumberFloat64Type","kCFNumberFloatType","kCFNumberIntType","kCFNumberLongLongType","kCFNumberLongType","kCFNumberMaxType","kCFNumberNSIntegerType","kCFNumberSInt16Type","kCFNumberSInt32Type","kCFNumberSInt64Type","kCFNumberSInt8Type","kCFNumberShortType","try_from","try_from","try_into","try_into","type_id","type_id","CFPropertyListCreateData","CFPropertyListCreateWithData","CFPropertyListFormat","CFPropertyListMutabilityOptions","CFPropertyListRef","kCFPropertyListBinaryFormat_v1_0","kCFPropertyListImmutable","kCFPropertyListMutableContainers","kCFPropertyListMutableContainersAndLeaves","kCFPropertyListOpenStepFormat","kCFPropertyListXMLFormat_v1_0","CFRunLoopActivity","CFRunLoopAddCommonMode","CFRunLoopAddObserver","CFRunLoopAddSource","CFRunLoopAddTimer","CFRunLoopContainsObserver","CFRunLoopContainsSource","CFRunLoopContainsTimer","CFRunLoopCopyAllModes","CFRunLoopCopyCurrentMode","CFRunLoopGetCurrent","CFRunLoopGetMain","CFRunLoopGetNextTimerFireDate","CFRunLoopGetTypeID","CFRunLoopIsWaiting","CFRunLoopObserverCallBack","CFRunLoopObserverContext","CFRunLoopObserverCreate","CFRunLoopObserverDoesRepeat","CFRunLoopObserverGetActivities","CFRunLoopObserverGetContext","CFRunLoopObserverGetOrder","CFRunLoopObserverGetTypeID","CFRunLoopObserverInvalidate","CFRunLoopObserverIsValid","CFRunLoopObserverRef","CFRunLoopRef","CFRunLoopRemoveObserver","CFRunLoopRemoveSource","CFRunLoopRemoveTimer","CFRunLoopRun","CFRunLoopRunInMode","CFRunLoopSourceContext","CFRunLoopSourceContext1","CFRunLoopSourceCreate","CFRunLoopSourceGetContext","CFRunLoopSourceGetOrder","CFRunLoopSourceGetTypeID","CFRunLoopSourceInvalidate","CFRunLoopSourceIsValid","CFRunLoopSourceRef","CFRunLoopSourceSignal","CFRunLoopStop","CFRunLoopTimerCallBack","CFRunLoopTimerContext","CFRunLoopTimerCreate","CFRunLoopTimerDoesRepeat","CFRunLoopTimerGetContext","CFRunLoopTimerGetInterval","CFRunLoopTimerGetNextFireDate","CFRunLoopTimerGetOrder","CFRunLoopTimerGetTolerance","CFRunLoopTimerGetTypeID","CFRunLoopTimerInvalidate","CFRunLoopTimerIsValid","CFRunLoopTimerRef","CFRunLoopTimerSetNextFireDate","CFRunLoopTimerSetTolerance","CFRunLoopWakeUp","__CFRunLoop","__CFRunLoopObserver","__CFRunLoopSource","__CFRunLoopTimer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","copyDescription","copyDescription","copyDescription","copyDescription","equal","equal","from","from","from","from","from","from","from","from","getPort","hash","hash","info","info","info","info","into","into","into","into","into","into","into","into","kCFRunLoopAfterWaiting","kCFRunLoopAllActivities","kCFRunLoopBeforeSources","kCFRunLoopBeforeTimers","kCFRunLoopBeforeWaiting","kCFRunLoopCommonModes","kCFRunLoopDefaultMode","kCFRunLoopEntry","kCFRunLoopExit","kCFRunLoopRunFinished","kCFRunLoopRunHandledSource","kCFRunLoopRunStopped","kCFRunLoopRunTimedOut","perform","perform","release","release","release","release","retain","retain","retain","retain","schedule","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","version","version","version","CFSetApplierFunction","CFSetApplyFunction","CFSetCallBacks","CFSetContainsValue","CFSetCopyDescriptionCallBack","CFSetCreate","CFSetCreateCopy","CFSetEqualCallBack","CFSetGetCount","CFSetGetCountOfValue","CFSetGetTypeID","CFSetGetValue","CFSetGetValueIfPresent","CFSetGetValues","CFSetHashCallBack","CFSetRef","CFSetReleaseCallBack","CFSetRetainCallBack","__CFSet","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copyDescription","equal","from","from","hash","into","into","kCFTypeSetCallBacks","release","retain","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","CFStringCompareFlags","CFStringCreateWithBytes","CFStringCreateWithBytesNoCopy","CFStringCreateWithCString","CFStringCreateWithCharactersNoCopy","CFStringEncoding","CFStringEncodings","CFStringGetBytes","CFStringGetCString","CFStringGetCStringPtr","CFStringGetLength","CFStringGetTypeID","CFStringRef","UniChar","__CFString","borrow","borrow_mut","from","into","kCFStringEncodingUTF8","try_from","try_into","type_id","CFTimeZoneCopyDefault","CFTimeZoneCopySystem","CFTimeZoneCreateWithTimeIntervalFromGMT","CFTimeZoneGetName","CFTimeZoneGetSecondsFromGMT","CFTimeZoneGetTypeID","CFTimeZoneRef","__CFTimeZone","borrow","borrow_mut","from","into","try_from","try_into","type_id","CFURLBookmarkCreationOptions","CFURLBookmarkFileCreationOptions","CFURLBookmarkResolutionOptions","CFURLCanBeDecomposed","CFURLClearResourcePropertyCache","CFURLCopyAbsoluteURL","CFURLCopyFileSystemPath","CFURLCopyFragment","CFURLCopyHostName","CFURLCopyLastPathComponent","CFURLCopyNetLocation","CFURLCopyParameterString","CFURLCopyPassword","CFURLCopyPath","CFURLCopyPathExtension","CFURLCopyQueryString","CFURLCopyResourceSpecifier","CFURLCopyScheme","CFURLCopyStrictPath","CFURLCopyUserName","CFURLCreateAbsoluteURLWithBytes","CFURLCreateBookmarkData","CFURLCreateBookmarkDataFromAliasRecord","CFURLCreateBookmarkDataFromFile","CFURLCreateByResolvingBookmarkData","CFURLCreateFilePathURL","CFURLCreateFromFileSystemRepresentation","CFURLCreateResourcePropertiesForKeysFromBookmarkData","CFURLCreateResourcePropertyForKeyFromBookmarkData","CFURLCreateWithBytes","CFURLCreateWithFileSystemPath","CFURLCreateWithFileSystemPathRelativeToBase","CFURLGetBytes","CFURLGetFileSystemRepresentation","CFURLGetPortNumber","CFURLGetString","CFURLGetTypeID","CFURLHasDirectoryPath","CFURLPathStyle","CFURLRef","CFURLSetResourcePropertyForKey","CFURLStartAccessingSecurityScopedResource","CFURLStopAccessingSecurityScopedResource","CFURLWriteBookmarkDataToFile","__CFURL","borrow","borrow_mut","from","into","kCFURLAttributeModificationDateKey","kCFURLBookmarkCreationMinimalBookmarkMask","kCFURLBookmarkCreationPreferFileIDResolutionMask","kCFURLBookmarkCreationSecurityScopeAllowOnlyReadAccess","kCFURLBookmarkCreationSuitableForBookmarkFile","kCFURLBookmarkCreationWithSecurityScope","kCFURLContentAccessDateKey","kCFURLContentModificationDateKey","kCFURLCreationDateKey","kCFURLFileResourceIdentifierKey","kCFURLFileResourceTypeKey","kCFURLFileSecurityKey","kCFURLHFSPathStyle","kCFURLHasHiddenExtensionKey","kCFURLIsDirectoryKey","kCFURLIsExecutableKey","kCFURLIsHiddenKey","kCFURLIsPackageKey","kCFURLIsReadableKey","kCFURLIsRegularFileKey","kCFURLIsSymbolicLinkKey","kCFURLIsSystemImmutableKey","kCFURLIsUserImmutableKey","kCFURLIsVolumeKey","kCFURLIsWritableKey","kCFURLLabelNumberKey","kCFURLLinkCountKey","kCFURLLocalizedLabelKey","kCFURLLocalizedNameKey","kCFURLLocalizedTypeDescriptionKey","kCFURLNameKey","kCFURLPOSIXPathStyle","kCFURLParentDirectoryURLKey","kCFURLPreferredIOBlockSizeKey","kCFURLTypeIdentifierKey","kCFURLVolumeIdentifierKey","kCFURLVolumeURLKey","kCFURLWindowsPathStyle","try_from","try_into","type_id","CFUUIDBytes","CFUUIDCreate","CFUUIDCreateFromUUIDBytes","CFUUIDGetTypeID","CFUUIDGetUUIDBytes","CFUUIDRef","__CFUUID","borrow","borrow","borrow_mut","borrow_mut","byte0","byte1","byte10","byte11","byte12","byte13","byte14","byte15","byte2","byte3","byte4","byte5","byte6","byte7","byte8","byte9","clone","clone_into","default","from","from","into","into","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"core_foundation_sys"],[20,"core_foundation_sys::array"],[76,"core_foundation_sys::attributed_string"],[93,"core_foundation_sys::base"],[190,"core_foundation_sys::bundle"],[210,"core_foundation_sys::characterset"],[253,"core_foundation_sys::data"],[268,"core_foundation_sys::date"],[287,"core_foundation_sys::dictionary"],[352,"core_foundation_sys::error"],[369,"core_foundation_sys::filedescriptor"],[407,"core_foundation_sys::mach_port"],[421,"core_foundation_sys::messageport"],[466,"core_foundation_sys::number"],[511,"core_foundation_sys::propertylist"],[522,"core_foundation_sys::runloop"],[683,"core_foundation_sys::set"],[726,"core_foundation_sys::string"],[749,"core_foundation_sys::timezone"],[764,"core_foundation_sys::url"],[854,"core_foundation_sys::uuid"],[895,"core::result"],[896,"core::any"],[897,"std::os::raw"],[898,"core::fmt"],[899,"core::fmt"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait for all types which are Core Foundation reference …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constant used by some functions to indicate failed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","No value.","No value.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,1,19,1,1,1,1,1,19,1,19,1,0,1,1,1,19,1,19,1,19,1,1,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,0,0,0,7,21,5,6,7,5,6,7,5,6,7,5,6,7,7,7,5,5,5,6,7,21,7,6,5,5,6,7,0,0,0,0,0,0,0,0,6,6,0,7,7,7,7,5,6,7,5,6,7,5,6,7,5,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,0,0,0,0,0,0,0,0,24,24,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,25,25,25,25,0,0,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,13,14,26,13,14,13,14,13,14,13,14,13,14,26,13,14,13,26,13,14,0,0,13,14,13,14,13,14,26,13,14,26,13,14,26,13,14,13,14,0,0,0,0,0,0,27,27,27,27,0,0,0,0,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,15,28,15,15,15,15,28,15,15,28,15,0,0,15,15,15,28,15,28,15,28,15,15,0,0,0,0,0,0,0,29,29,29,29,29,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,30,31,0,32,16,32,16,16,16,16,16,32,16,16,32,16,16,16,16,32,16,32,16,32,16,16,0,0,0,0,0,0,0,0,0,0,0,0,33,34,33,34,33,34,33,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,34,33,34,33,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35,36,37,38,39,40,41,42,35,36,37,38,39,40,41,42,38,38,39,40,41,38,39,35,36,37,38,39,40,41,42,39,38,39,38,39,40,41,35,36,37,38,39,40,41,42,0,0,0,0,0,0,0,0,0,0,0,0,0,38,39,38,39,40,41,38,39,40,41,38,35,36,37,38,39,40,41,42,35,36,37,38,39,40,41,42,35,36,37,38,39,40,41,42,38,39,40,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,17,43,17,17,17,17,17,43,17,17,43,17,0,17,17,17,43,17,43,17,43,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,0,44,44,44,0,0,0,0,0,0,0,0,45,45,45,45,45,45,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,46,46,0,0,0,0,0,0,0,47,18,47,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,47,18,47,18,18,47,18,47,18,47,18],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],0,0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[6,6],[7,7],[[]],[[]],[[]],0,0,[[5,5],8],[[5,9],10],[[]],[[]],[[]],[4],0,[[11,11],6],[[]],[5,12],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[13,13],[14,14],[[]],[[]],0,0,0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[15,15],[[]],0,[[]],[[]],0,[[]],[[]],0,0,0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[16,16],[[]],0,[[16,9],10],[[]],[[]],0,[[]],[[]],0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[17,17],[[]],0,0,[[]],[[]],0,[[]],[[]],0,0,0,[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],2],[[],2],[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],3],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[18,18],[[]],[[],18],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],3],[[],3]],"c":[],"p":[[3,"CFArrayCallBacks",20],[4,"Result",895],[3,"TypeId",896],[6,"c_void",897],[4,"CFComparisonResult",93],[3,"CFRange",93],[3,"CFAllocatorContext",93],[15,"bool"],[3,"Formatter",898],[6,"Result",898],[6,"CFIndex",93],[4,"Ordering",899],[3,"CFDictionaryKeyCallBacks",287],[3,"CFDictionaryValueCallBacks",287],[3,"CFFileDescriptorContext",369],[3,"CFMessagePortContext",421],[3,"CFSetCallBacks",683],[3,"CFUUIDBytes",854],[3,"__CFArray",20],[3,"__CFAttributedString",76],[8,"TCFTypeRef",93],[3,"__CFBundle",190],[3,"__CFCharacterSet",210],[3,"__CFData",253],[3,"__CFDate",268],[3,"__CFDictionary",287],[3,"__CFError",352],[3,"__CFFileDescriptor",369],[3,"__CFMachPort",407],[6,"CFMessagePortCallBack",421],[6,"CFMessagePortInvalidationCallBack",421],[3,"__CFMessagePort",421],[3,"__CFBoolean",466],[4,"__CFNumber",466],[3,"__CFRunLoop",522],[3,"__CFRunLoopSource",522],[3,"__CFRunLoopObserver",522],[3,"CFRunLoopSourceContext",522],[3,"CFRunLoopSourceContext1",522],[3,"CFRunLoopObserverContext",522],[3,"CFRunLoopTimerContext",522],[3,"__CFRunLoopTimer",522],[3,"__CFSet",683],[3,"__CFString",726],[3,"__CFTimeZone",749],[3,"__CFURL",764],[3,"__CFUUID",854]]},\
"core_graphics":{"doc":"","t":"AAAAAAAAAAAAAAAAGGGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDCLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLHHHHHHHLLLLLLLLLEDDENNNNNENNNENNNENNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGGGGDGGGGGGINNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLDFFGDFGGFGFFFFFFFEGDFGFFFFFFFFFFFFFFDFFFFFFFFDFFFFFFFFFFFFFGFFFDDHHDFGGFFFGNNNRRRRRRRRLLLLLLLLLLLGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLHRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMNSDGSSSSSSSSSSDGDDGEEEGEGEGSSNSSNSSSSSSSSSDSSSSSSSSSSSSSSSSSSSSSSNSNSNSSSDNNSSNNNNNSSSSSSSSSSSNNSNNNSSSSSSSSSNNNNSSSSSSSSSSDNNSSSSSSSSSSSSSSSSSSSSSSSSSNNNNNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDRRRRMLLLMLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLMMMDDSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNENNNNNNNNNNNENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDDDEDNNCLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLGEGEGEGEGEGEGEGEGEGEGEGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGFFFFFGGFFFFFRHHRRRHRRRRRRHHRRRRRRHHHHHRRRHHH","n":["base","color","color_space","context","data_provider","display","event","event_source","font","geometry","gradient","image","path","private","sys","window","CGError","CGFloat","CGGlyph","boolean_t","kCGBitmapByteOrder16Big","kCGBitmapByteOrder16Host","kCGBitmapByteOrder16Little","kCGBitmapByteOrder32Big","kCGBitmapByteOrder32Host","kCGBitmapByteOrder32Little","kCGBitmapByteOrderDefault","kCGErrorCannotComplete","kCGErrorFailure","kCGErrorIllegalArgument","kCGErrorInvalidConnection","kCGErrorInvalidContext","kCGErrorInvalidOperation","kCGErrorNoneAvailable","kCGErrorNotImplemented","kCGErrorRangeCheck","kCGErrorSuccess","kCGErrorTypeCheck","kCGImageAlphaFirst","kCGImageAlphaLast","kCGImageAlphaNone","kCGImageAlphaNoneSkipFirst","kCGImageAlphaNoneSkipLast","kCGImageAlphaPremultipliedFirst","kCGImageAlphaPremultipliedLast","kCGRenderingIntentAbsoluteColorimetric","kCGRenderingIntentDefault","kCGRenderingIntentPerceptual","kCGRenderingIntentRelativeColorimetric","kCGRenderingIntentSaturation","CGColor","SysCGColorRef","as_CFTypeRef","as_concrete_TypeRef","borrow","borrow_mut","clone","clone_into","drop","eq","equivalent","from","from_mut_void","from_void","into","rgb","to_owned","to_void","to_void","try_from","try_into","type_id","type_id","wrap_under_create_rule","wrap_under_get_rule","CGColorSpace","CGColorSpaceRef","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","create_device_gray","create_device_rgb","create_with_name","deref","deref_mut","drop","from","from","into","into","kCGColorSpaceAdobeRGB1998","kCGColorSpaceGenericCMYK","kCGColorSpaceGenericGray","kCGColorSpaceGenericGrayGamma2_2","kCGColorSpaceGenericRGB","kCGColorSpaceGenericRGBLinear","kCGColorSpaceSRGB","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CGBlendMode","CGContext","CGContextRef","CGInterpolationQuality","CGInterpolationQualityDefault","CGInterpolationQualityHigh","CGInterpolationQualityLow","CGInterpolationQualityMedium","CGInterpolationQualityNone","CGLineCap","CGLineCapButt","CGLineCapRound","CGLineCapSquare","CGLineJoin","CGLineJoinBevel","CGLineJoinMiter","CGLineJoinRound","CGPathDrawingMode","CGPathEOFill","CGPathEOFillStroke","CGPathFill","CGPathFillStroke","CGPathStroke","CGTextClip","CGTextDrawingMode","CGTextFill","CGTextFillClip","CGTextFillStroke","CGTextFillStrokeClip","CGTextInvisible","CGTextStroke","CGTextStrokeClip","Clear","Color","ColorBurn","ColorDodge","Copy","Darken","DestinationAtop","DestinationIn","DestinationOut","DestinationOver","Difference","Exclusion","HardLight","Hue","Lighten","Luminosity","Multiply","Normal","Overlay","PlusDarker","PlusLighter","Saturation","Screen","SoftLight","SourceAtop","SourceIn","SourceOut","Xor","add_curve_to_point","add_line_to_point","add_path","add_quad_curve_to_point","as_ref","begin_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_row","clear_rect","clip","clip_bounding_box","clip_to_mask","clip_to_rect","clip_to_rects","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_path","concat_ctm","create_bitmap_context","create_image","data","deref","deref_mut","draw_image","draw_linear_gradient","draw_path","draw_radial_gradient","drop","eo_clip","eo_fill_path","fill_ellipse_in_rect","fill_path","fill_rect","fill_rects","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_existing_context_ptr","get_ctm","get_interpolation_quality","height","into","into","into","into","into","into","into","into","move_to_point","replace_path_with_stroked_path","restore","rotate","save","scale","set_allows_antialiasing","set_allows_font_smoothing","set_allows_font_subpixel_positioning","set_allows_font_subpixel_quantization","set_blend_mode","set_fill_color","set_font","set_font_size","set_font_smoothing_style","set_gray_fill_color","set_interpolation_quality","set_line_cap","set_line_dash","set_line_join","set_line_width","set_miter_limit","set_rgb_fill_color","set_rgb_stroke_color","set_shadow","set_shadow_with_color","set_should_antialias","set_should_smooth_fonts","set_should_subpixel_position_fonts","set_should_subpixel_quantize_fonts","set_text_drawing_mode","set_text_matrix","set_text_position","show_glyphs_at_positions","stroke_ellipse_in_rect","stroke_line_segments","stroke_path","stroke_rect","stroke_rect_with_width","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","CGDataProvider","CGDataProviderGetBytePointerCallback","CGDataProviderGetBytesAtOffsetCallback","CGDataProviderGetBytesAtPositionCallback","CGDataProviderGetBytesCallback","CGDataProviderRef","CGDataProviderReleaseBytePointerCallback","CGDataProviderReleaseDataCallback","CGDataProviderReleaseInfoCallback","CGDataProviderRewindCallback","CGDataProviderSkipBytesCallback","CGDataProviderSkipForwardCallback","CustomData","None","None","None","None","None","None","None","None","None","None","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copy_data","deref","deref_mut","drop","from","from","from_buffer","from_custom_data","from_slice","into","into","len","ptr","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CFArray","CFArrayGetCount","CFArrayGetValueAtIndex","CFArrayRef","CFDictionary","CFDictionaryGetValueIfPresent","CFDictionaryRef","CFIndex","CFRelease","CFTypeRef","CGAssociateMouseAndMouseCursorPosition","CGBeginDisplayConfiguration","CGCancelDisplayConfiguration","CGCompleteDisplayConfiguration","CGConfigureDisplayMirrorOfDisplay","CGConfigureDisplayOrigin","CGConfigureDisplayWithDisplayMode","CGConfigureOption","CGDirectDisplayID","CGDisplay","CGDisplayBounds","CGDisplayConfigRef","CGDisplayCopyAllDisplayModes","CGDisplayCopyDisplayMode","CGDisplayCreateImage","CGDisplayHideCursor","CGDisplayIsActive","CGDisplayIsAlwaysInMirrorSet","CGDisplayIsAsleep","CGDisplayIsBuiltin","CGDisplayIsInHWMirrorSet","CGDisplayIsInMirrorSet","CGDisplayIsMain","CGDisplayIsOnline","CGDisplayIsStereo","CGDisplayMirrorsDisplay","CGDisplayMode","CGDisplayModeCopyPixelEncoding","CGDisplayModeGetHeight","CGDisplayModeGetIODisplayModeID","CGDisplayModeGetIOFlags","CGDisplayModeGetPixelHeight","CGDisplayModeGetPixelWidth","CGDisplayModeGetRefreshRate","CGDisplayModeGetWidth","CGDisplayModeRef","CGDisplayModeRelease","CGDisplayModelNumber","CGDisplayMoveCursorToPoint","CGDisplayPixelsHigh","CGDisplayPixelsWide","CGDisplayPrimaryDisplay","CGDisplayRotation","CGDisplayScreenSize","CGDisplaySerialNumber","CGDisplayShowCursor","CGDisplayUnitNumber","CGDisplayUsesOpenGLAcceleration","CGDisplayVendorNumber","CGError","CGGetActiveDisplayList","CGGetDisplaysWithRect","CGMainDisplayID","CGPoint","CGRect","CGRectInfinite","CGRectNull","CGSize","CGWarpMouseCursorPosition","CGWindowID","CGWindowImageOption","CGWindowListCopyWindowInfo","CGWindowListCreateImage","CGWindowListCreateImageFromArray","CGWindowListOption","ConfigureForAppOnly","ConfigureForSession","ConfigurePermanently","IO16BitDirectPixels","IO1BitIndexedPixels","IO2BitIndexedPixels","IO32BitDirectPixels","IO4BitIndexedPixels","IO8BitIndexedPixels","IO8BitOverlayPixels","IOYUV422Pixels","active_display_count","active_displays","all_display_modes","as_CFTypeRef","as_CFTypeRef","as_concrete_TypeRef","as_concrete_TypeRef","as_ref","associate_mouse_and_mouse_cursor_position","begin_configuration","bit_depth","boolean_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","cancel_configuration","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","complete_configuration","configure_display_mirror_of_display","configure_display_origin","configure_display_with_display_mode","contains_key","deref","deref_mut","display_mode","drop","drop","drop","eq","eq","equivalent","equivalent","find","fmt","fmt","fmt","from","from","from","from","from","from","from_CFType_pairs","from_CFTypes","from_copyable","from_mut_void","from_mut_void","from_void","from_void","get","get","get_all_values","get_keys_and_values","get_unchecked","get_values","height","height","hide_cursor","id","image","into","into","into","into","into","into","into_iter","into_untyped","into_untyped","io_flags","is_active","is_always_in_mirror_set","is_asleep","is_builtin","is_empty","is_in_hw_mirror_set","is_in_mirror_set","is_main","is_online","is_stereo","iter","kCGDisplayShowDuplicateLowResolutionModes","kCGNullDirectDisplayID","kCGNullWindowID","kCGWindowImageBestResolution","kCGWindowImageBoundsIgnoreFraming","kCGWindowImageDefault","kCGWindowImageNominalResolution","kCGWindowImageOnlyShadows","kCGWindowImageShouldBeOpaque","kCGWindowListExcludeDesktopElements","kCGWindowListOptionAll","kCGWindowListOptionIncludingWindow","kCGWindowListOptionOnScreenAboveWindow","kCGWindowListOptionOnScreenBelowWindow","kCGWindowListOptionOnScreenOnly","kDisplayModeAcceleratorBackedFlag","kDisplayModeAlwaysShowFlag","kDisplayModeBuiltInFlag","kDisplayModeDefaultFlag","kDisplayModeInterlacedFlag","kDisplayModeNativeFlag","kDisplayModeNeverShowFlag","kDisplayModeNotGraphicsQualityFlag","kDisplayModeNotPresetFlag","kDisplayModeNotResizeFlag","kDisplayModeRequiresPanFlag","kDisplayModeSafeFlag","kDisplayModeSafetyFlags","kDisplayModeSimulscanFlag","kDisplayModeStretchedFlag","kDisplayModeTelevisionFlag","kDisplayModeValidFlag","kDisplayModeValidForAirPlayFlag","kDisplayModeValidForHiResFlag","kDisplayModeValidForMirroringFlag","kDisplayModeValidateAgainstDisplay","kIO16BitFloatPixels","kIO30BitDirectPixels","kIO32BitFloatPixels","kIO64BitDirectPixels","len","len","main","mirrors_display","mode_id","model_number","move_cursor_to_point","new","null_display","origin","pixel_encoding","pixel_height","pixel_width","pixels_high","pixels_wide","primary_display","refresh_rate","rotation","screen_size","screenshot","screenshot_from_windows","serial_number","show_cursor","size","to_mutable","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_untyped","to_untyped","to_void","to_void","to_void","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_number","uses_open_gl_acceleration","vendor_number","warp_mouse_cursor_position","width","width","window_list_info","wrap_under_create_rule","wrap_under_create_rule","wrap_under_get_rule","wrap_under_get_rule","x","y","AnnotatedSession","CAPS_LOCK","CGEvent","CGEventField","CGEventFlagAlphaShift","CGEventFlagAlternate","CGEventFlagCommand","CGEventFlagControl","CGEventFlagHelp","CGEventFlagNonCoalesced","CGEventFlagNull","CGEventFlagNumericPad","CGEventFlagSecondaryFn","CGEventFlagShift","CGEventFlags","CGEventMask","CGEventRef","CGEventTap","CGEventTapCallBackFn","CGEventTapLocation","CGEventTapOptions","CGEventTapPlacement","CGEventTapProxy","CGEventType","CGKeyCode","CGMouseButton","CGScrollEventUnit","COMMAND","CONTROL","Center","DELETE","DOWN_ARROW","Default","END","ESCAPE","EVENT_SOURCE_GROUP_ID","EVENT_SOURCE_STATE_ID","EVENT_SOURCE_UNIX_PROCESS_ID","EVENT_SOURCE_USER_DATA","EVENT_SOURCE_USER_ID","EVENT_TARGET_PROCESS_SERIAL_NUMBER","EVENT_TARGET_UNIX_PROCESS_ID","EventField","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F3","F4","F5","F6","F7","F8","F9","FORWARD_DELETE","FUNCTION","FlagsChanged","HELP","HID","HOME","HeadInsertEventTap","KEYBOARD_EVENT_AUTOREPEAT","KEYBOARD_EVENT_KEYBOARD_TYPE","KEYBOARD_EVENT_KEYCODE","KeyCode","KeyDown","KeyUp","LEFT_ARROW","LINE","Left","LeftMouseDown","LeftMouseDragged","LeftMouseUp","ListenOnly","MOUSE_EVENT_BUTTON_NUMBER","MOUSE_EVENT_CLICK_STATE","MOUSE_EVENT_DELTA_X","MOUSE_EVENT_DELTA_Y","MOUSE_EVENT_INSTANT_MOUSER","MOUSE_EVENT_NUMBER","MOUSE_EVENT_PRESSURE","MOUSE_EVENT_SUB_TYPE","MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER","MOUSE_EVENT_WINDOW_UNDER_MOUSE_POINTER_THAT_CAN_HANDLE_THIS_EVENT","MUTE","MouseMoved","Null","OPTION","OtherMouseDown","OtherMouseDragged","OtherMouseUp","PAGE_DOWN","PAGE_UP","PIXEL","RETURN","RIGHT_ARROW","RIGHT_COMMAND","RIGHT_CONTROL","RIGHT_OPTION","RIGHT_SHIFT","Right","RightMouseDown","RightMouseDragged","RightMouseUp","SCROLL_WHEEL_EVENT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_DELTA_AXIS_2","SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_FIXED_POINT_DELTA_AXIS_2","SCROLL_WHEEL_EVENT_INSTANT_MOUSER","SCROLL_WHEEL_EVENT_IS_CONTINUOUS","SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_1","SCROLL_WHEEL_EVENT_POINT_DELTA_AXIS_2","SHIFT","SPACE","ScrollEventUnit","ScrollWheel","Session","TAB","TABLET_EVENT_DEVICE_ID","TABLET_EVENT_POINT_BUTTONS","TABLET_EVENT_POINT_PRESSURE","TABLET_EVENT_POINT_X","TABLET_EVENT_POINT_Y","TABLET_EVENT_POINT_Z","TABLET_EVENT_ROTATION","TABLET_EVENT_TANGENTIAL_PRESSURE","TABLET_EVENT_TILT_X","TABLET_EVENT_TILT_Y","TABLET_EVENT_VENDOR_1","TABLET_EVENT_VENDOR_2","TABLET_EVENT_VENDOR_3","TABLET_PROXIMITY_EVENT_CAPABILITY_MASK","TABLET_PROXIMITY_EVENT_DEVICE_ID","TABLET_PROXIMITY_EVENT_ENTER_PROXIMITY","TABLET_PROXIMITY_EVENT_POINTER_ID","TABLET_PROXIMITY_EVENT_POINTER_TYPE","TABLET_PROXIMITY_EVENT_SYSTEM_TABLET_ID","TABLET_PROXIMITY_EVENT_TABLET_ID","TABLET_PROXIMITY_EVENT_VENDOR_ID","TABLET_PROXIMITY_EVENT_VENDOR_POINTER_SERIAL_NUMBER","TABLET_PROXIMITY_EVENT_VENDOR_POINTER_TYPE","TABLET_PROXIMITY_EVENT_VENDOR_UNIQUE_ID","TabletPointer","TabletProximity","TailAppendEventTap","TapDisabledByTimeout","TapDisabledByUserInput","UP_ARROW","VOLUME_DOWN","VOLUME_UP","all","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback_ref","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","deref","deref_mut","difference","drop","empty","enable","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_double_value_field","get_flags","get_integer_value_field","get_type","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","mach_port","new","new","new_keyboard_event","new_mouse_event","not","partial_cmp","post","remove","set","set_double_value_field","set_flags","set_integer_value_field","set_string","set_string_from_utf16_unchecked","set_type","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","CGEventSource","CGEventSourceRef","CGEventSourceStateID","CombinedSessionState","HIDSystemState","Private","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref_mut","drop","fmt","from","from","from","into","into","into","new","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","CGFont","CGFontRef","CGGlyph","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","copy_table_for_tag","copy_table_tags","copy_variation_axes","copy_variations","create_copy_from_variations","deref","deref_mut","drop","from","from","from_data_provider","from_name","get_glyph_advances","get_glyph_b_boxes","get_units_per_em","into","into","postscript_name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","type_id","CGAffineTransform","CGPoint","CGRect","CGSize","CG_AFFINE_TRANSFORM_IDENTITY","CG_ZERO_POINT","CG_ZERO_RECT","CG_ZERO_SIZE","a","apply_transform","apply_transform","apply_transform","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","d","default","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from_dict_representation","height","inset","into","into","into","into","invert","is_empty","is_intersects","new","new","new","new","origin","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx","ty","type_id","type_id","type_id","type_id","width","x","y","CGGradient","CGGradientDrawingOptions","CGGradientDrawsAfterEndLocation","CGGradientDrawsBeforeStartLocation","CGGradientRef","all","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","create_with_color_components","create_with_colors","deref","deref_mut","difference","drop","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","CGImage","CGImageAlphaFirst","CGImageAlphaInfo","CGImageAlphaLast","CGImageAlphaNone","CGImageAlphaNoneSkipFirst","CGImageAlphaNoneSkipLast","CGImageAlphaOnly","CGImageAlphaPremultipliedFirst","CGImageAlphaPremultipliedLast","CGImageByteOrder16Big","CGImageByteOrder16Little","CGImageByteOrder32Big","CGImageByteOrder32Little","CGImageByteOrderInfo","CGImageByteOrderMask","CGImageRef","as_ref","bits_per_component","bits_per_pixel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_row","clone","clone_into","color_space","cropped","data","deref","deref_mut","drop","from","from","from","from","height","into","into","into","into","new","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","width","AddCurveToPoint","AddLineToPoint","AddQuadCurveToPoint","CGPath","CGPathElement","CGPathElementRef","CGPathElementType","CGPathRef","CloseSubpath","MoveToPoint","SysCGPathRef","apply","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","drop","element_type","eq","fmt","fmt","from","from","from","from","from","from_rect","into","into","into","into","into","points","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","CGSRegion","CGSSurface","borrow","borrow","borrow_mut","borrow_mut","drop","from","from","from_ids","from_rect","from_rects","id","into","into","set_shape","try_from","try_from","try_into","try_into","type_id","type_id","CGColorRef","CGColorSpace","CGColorSpaceRef","CGContext","CGContextRef","CGDataProvider","CGDataProviderRef","CGDisplayMode","CGDisplayModeRef","CGEvent","CGEventRef","CGEventSource","CGEventSourceRef","CGEventTap","CGEventTapRef","CGFont","CGFontRef","CGGradient","CGGradientRef","CGImage","CGImageRef","CGPath","CGPathRef","__CGColor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","to_void","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","CGWindowBackingType","CGWindowID","CGWindowImageOption","CGWindowListCopyWindowInfo","CGWindowListCreate","CGWindowListCreateDescriptionFromArray","CGWindowListCreateImage","CGWindowListCreateImageFromArray","CGWindowListOption","CGWindowSharingType","copy_window_info","create_description_from_array","create_image","create_image_from_array","create_window_list","kCGNullWindowID","kCGWindowAlpha","kCGWindowBackingLocationVideoMemory","kCGWindowBackingStoreBuffered","kCGWindowBackingStoreNonretained","kCGWindowBackingStoreRetained","kCGWindowBounds","kCGWindowImageBestResolution","kCGWindowImageBoundsIgnoreFraming","kCGWindowImageDefault","kCGWindowImageNominalResolution","kCGWindowImageOnlyShadows","kCGWindowImageShouldBeOpaque","kCGWindowIsOnscreen","kCGWindowLayer","kCGWindowListOptionAll","kCGWindowListOptionExcludeDesktopElements","kCGWindowListOptionIncludingWindow","kCGWindowListOptionOnScreenAboveWindow","kCGWindowListOptionOnScreenBelowWindow","kCGWindowListOptionOnScreenOnly","kCGWindowMemoryUsage","kCGWindowName","kCGWindowNumber","kCGWindowOwnerName","kCGWindowOwnerPID","kCGWindowSharingNone","kCGWindowSharingReadOnly","kCGWindowSharingReadWrite","kCGWindowSharingState","kCGWindowStoreType","kCGWindowWorkspace"],"q":[[0,"core_graphics"],[16,"core_graphics::base"],[50,"core_graphics::color"],[75,"core_graphics::color_space"],[111,"core_graphics::context"],[330,"core_graphics::data_provider"],[393,"core_graphics::display"],[690,"core_graphics::event"],[1025,"core_graphics::event_source"],[1067,"core_graphics::font"],[1105,"core_graphics::geometry"],[1186,"core_graphics::gradient"],[1266,"core_graphics::image"],[1330,"core_graphics::path"],[1397,"core_graphics::private"],[1419,"core_graphics::sys"],[1528,"core_graphics::window"],[1575,"core::ffi"],[1576,"core_foundation::base"],[1577,"core_foundation::base"],[1578,"core::result"],[1579,"core_foundation_sys::base"],[1580,"core::any"],[1581,"core_foundation_sys::string"],[1582,"core::option"],[1583,"libc::unix"],[1584,"core::fmt"],[1585,"core::fmt"],[1586,"core::convert"],[1587,"core::marker"],[1588,"core::marker"],[1589,"alloc::boxed"],[1590,"core_foundation_sys::array"],[1591,"core_foundation_sys::dictionary"],[1592,"alloc::vec"],[1593,"core_foundation::base"],[1594,"core_foundation_sys::base"],[1595,"core_foundation::string"],[1596,"core_foundation::dictionary"],[1597,"core::cmp"],[1598,"core::iter::traits::collect"],[1599,"core::hash"],[1600,"core::ops::function"],[1601,"core_foundation::base"],[1602,"libc::unix"]],"d":["","","","","","","","","","","","","","Evil private APIs.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>CGContext</code> instance from an existing <code>CGContextRef</code> …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encapsulates custom data that can be wrapped.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","","","","","","","","","Creates a copy of the data from the underlying …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a data provider from the given reference-counted …","Creates a data provider from the given raw pointer, …","Creates a data prvider from a given slice. The data …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the length of this custom data. This value must …","Returns a pointer to the start of the custom data. This …","","","","","","","","","","A heterogeneous immutable array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides count of displays that are active (or drawable).","Provides a list of displays that are active (or drawable).","Returns all display modes for the specified display id.","","","","","","Connects or disconnects the mouse and cursor while an …","Begins a new set of display configuration changes.","Returns the number of bits per pixel of the specified …","","","","","","","","","","","","","","","Returns the bounds of a display in the global display …","Cancels a set of display configuration changes.","","","","","","","","","","","Completes a set of display configuration changes.","Changes the configuration of a mirroring set.","Configures the origin of a display in the global display …","Configures the display mode of a display.","","","","Returns information about a display’s current …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new <code>CFArray</code> with the given elements, which must …","Creates a new <code>CFArray</code> with the given elements, which must …","","","","","","Panics","","","","","Returns the height of the specified display mode.","","Hides the mouse cursor, and increments the hide cursor …","","Returns an image containing the contents of the specified …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the same array, but with the type reset to void …","Returns the same dictionary, but with the types reset to …","Returns the I/O Kit flags of the specified display mode.","Returns a Boolean value indicating whether a display is …","Returns a boolean indicating whether a display is always …","Returns a boolean indicating whether a display is sleeping …","Returns a boolean indicating whether a display is …","","Returns a boolean indicating whether a display is in a …","Returns a boolean indicating whether a display is in a …","Returns a boolean indicating whether a display is the main …","Returns a boolean indicating whether a display is …","Returns a boolean indicating whether a display is running …","Iterates over the elements of this <code>CFArray</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the the main display.","For a secondary display in a mirroring set, returns the …","","Returns the model number of a display monitor.","Moves the mouse cursor to a specified point relative to …","","A value that will never correspond to actual hardware.","","Returns the pixel encoding of the specified display mode.","Returns the pixel height of the specified display mode.","Returns the pixel width of the specified display mode.","Returns the display height in pixel units.","Returns the display width in pixel units.","Returns the primary display in a hardware mirroring set.","","Returns the rotation angle of a display in degrees.","Returns the width and height of a display in millimeters.","Returns a composite image based on a dynamically generated …","Returns a composite image of the specified windows.","Returns the serial number of a display monitor.","Decrements the hide cursor count, and shows the mouse …","","Returns a <code>CFMutableDictionary</code> pointing to the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the logical unit number of a display.","Returns a boolean indicating whether Quartz is using …","Returns the vendor number of the specified display’s …","Moves the mouse cursor without generating events.","Returns the width of the specified display mode.","","Generates and returns information about the selected …","","","","","","","","","","","","","","","","","","","","","Flags for events","","","","","Possible tapping points for events.","","","","Constants that specify the different types of input events.","","","","","","","","","","","","Key to access a field that contains the event source Unix …","Key to access a field that contains the event source state …","Key to access a field that contains the event source Unix …","Key to access a field that contains the event source …","Key to access a field that contains the event source Unix …","Key to access a field that contains the event target …","Key to access a field that contains the event target Unix …","Constants used as keys to access specialized fields in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key to access an integer field, non-zero when this is an …","Key to access an integer field that contains the keyboard …","Key to access an integer field that contains the virtual …","Key codes for keys that are independent of keyboard layout.","","","","","","","","","","Key to access an integer field that contains the mouse …","Key to access an integer field that contains the mouse …","Key to access an integer field that contains the …","Key to access an integer field that contains the vertical …","Key to access an integer field. The value is non-zero if …","Key to access an integer field that contains the mouse …","Key to access a double field that contains the mouse …","Key to access an integer field that encodes the mouse …","Added in 10.5; made public in 10.7.","","","","","","","","","","","","","","","","","","","","","","Key to access an integer field that contains scrolling …","Key to access an integer field that contains scrolling …","Key to access a field that contains scrolling data. The …","Key to access a field that contains scrolling data. The …","Key to access an integer field that indicates whether the …","Key to access an integer field that indicates whether a …","Key to access an integer field that contains pixel-based …","Key to access an integer field that contains pixel-based …","","","","","","","Key to access an integer field that contains the …","Key to access an integer field that contains the tablet …","Key to access a double field that contains the tablet pen …","Key to access an integer field that contains the absolute …","Key to access an integer field that contains the absolute …","Key to access an integer field that contains the absolute …","Key to access a double field that contains the tablet pen …","Key to access a double field that contains the tangential …","Key to access a double field that contains the horizontal …","Key to access a double field that contains the vertical …","Key to access an integer field that contains a …","Key to access an integer field that contains a …","Key to access an integer field that contains a …","Key to access an integer field that contains the device …","Key to access an integer field that contains the …","Key to access an integer field that indicates whether the …","Key to access an integer field that contains the …","Key to access an integer field that contains the pointer …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","Key to access an integer field that contains the …","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","Possible source states of an event source.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a cropped image. If the <code>rect</code> specifies a rectangle …","Returns the raw image bytes wrapped in <code>CFData</code>. Note, the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","This should always be memory-safe; the window server …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,13,13,13,14,13,14,13,13,13,13,13,13,13,13,13,14,13,14,0,0,0,0,0,0,0,13,14,13,14,13,14,13,13,14,0,0,0,0,28,28,28,28,28,0,25,25,25,0,26,26,26,0,27,27,27,27,27,41,0,41,41,41,41,41,41,41,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,17,17,17,17,19,17,41,24,25,26,27,28,19,19,17,41,24,25,26,27,28,19,17,17,17,17,17,17,17,17,24,25,26,27,28,19,24,25,26,27,28,19,17,17,19,17,19,19,19,17,17,17,17,19,17,17,17,17,17,17,17,24,25,26,27,28,41,24,25,26,27,28,19,17,19,17,17,17,41,24,25,26,27,28,19,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,24,25,26,27,28,19,17,17,41,24,25,26,27,28,19,17,41,24,25,26,27,28,19,17,41,24,25,26,27,28,19,19,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,120,121,122,123,124,125,126,127,128,129,120,121,122,123,124,125,126,127,128,129,43,43,43,44,43,44,43,43,44,43,43,43,43,44,43,43,43,43,44,50,50,43,44,43,44,43,44,43,43,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,0,0,0,0,0,0,0,0,64,64,60,61,62,61,62,60,64,64,60,0,61,62,66,64,60,60,63,61,62,66,64,60,63,64,64,61,62,66,64,60,61,62,66,64,60,64,64,64,64,62,60,60,64,61,62,60,61,62,61,62,62,61,62,64,61,62,66,64,60,63,62,61,61,61,62,61,62,61,62,61,62,61,61,60,40,64,64,64,61,62,66,64,60,63,61,61,62,60,64,64,64,64,62,64,64,64,64,64,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,62,64,64,60,64,64,64,64,21,60,60,60,64,64,64,60,64,64,64,64,64,64,21,62,61,62,66,64,60,63,61,62,61,61,62,62,61,62,66,64,60,63,61,62,66,64,60,63,61,61,62,62,66,64,60,63,64,64,64,64,60,40,64,61,62,61,62,33,33,87,130,0,0,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,86,130,130,89,130,130,131,131,131,131,131,131,131,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,85,130,87,130,88,131,131,131,0,85,85,130,132,86,85,85,85,89,131,131,131,131,131,131,131,131,131,131,130,85,85,130,85,85,85,130,130,132,130,130,130,130,130,130,86,85,85,85,131,131,131,131,131,131,131,131,130,130,0,85,87,130,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,85,85,88,85,85,130,130,130,82,83,82,82,82,82,82,82,82,130,132,131,91,82,85,86,87,88,89,83,83,84,130,132,131,91,82,85,86,87,88,89,83,84,91,82,85,86,87,88,89,83,82,85,86,87,88,89,83,82,82,82,83,83,82,83,82,91,82,82,82,82,82,82,82,82,85,86,87,88,89,130,132,131,91,82,85,86,87,88,89,83,84,82,82,82,82,83,83,83,83,82,82,82,82,130,132,131,91,82,85,86,87,88,89,83,84,82,82,83,91,91,83,83,83,82,82,83,82,82,83,83,83,83,83,83,82,82,82,82,85,86,87,88,89,83,84,82,130,132,131,91,82,85,86,87,88,89,83,84,130,132,131,91,82,85,86,87,88,89,83,84,130,132,131,91,82,85,86,87,88,89,83,83,84,82,0,0,0,102,102,102,97,102,97,97,101,102,97,101,102,97,102,97,97,97,97,102,102,97,101,102,97,101,97,102,97,101,102,97,101,102,97,101,102,97,97,101,0,0,0,38,38,38,103,38,103,38,38,38,38,38,38,38,38,38,38,38,103,38,38,38,38,38,38,103,38,38,103,38,103,38,103,38,38,103,0,0,0,0,0,0,0,0,29,40,33,21,29,40,33,21,29,40,33,21,29,29,40,33,21,29,40,33,21,29,21,29,40,33,21,29,40,33,21,29,40,33,21,29,21,40,21,40,33,21,29,29,21,21,40,33,21,29,21,21,40,33,21,29,40,33,21,29,40,33,21,29,29,29,40,33,21,29,40,33,33,0,0,34,34,0,34,32,34,34,34,34,34,34,34,34,32,32,107,34,32,107,34,32,34,32,34,34,34,32,32,32,32,34,32,34,34,34,34,34,34,34,34,34,34,32,107,34,34,34,34,34,34,34,34,34,32,107,34,34,34,34,34,34,34,34,34,34,32,107,34,34,32,107,34,32,107,34,32,107,34,0,133,0,133,133,133,133,133,133,133,134,134,134,134,0,134,0,22,108,108,133,134,22,22,108,133,134,22,108,108,22,22,108,108,108,22,22,22,133,134,22,108,108,133,134,22,108,22,22,108,133,134,22,108,133,134,22,108,133,134,22,22,108,108,111,111,111,0,0,0,0,0,111,111,0,109,109,112,113,109,109,18,111,112,113,109,18,111,109,111,109,111,112,109,109,109,113,111,113,111,112,113,109,18,111,109,112,113,109,18,111,113,109,18,111,112,113,109,18,111,112,113,109,18,111,112,113,109,109,18,111,0,0,114,116,114,116,114,114,116,116,114,114,116,114,116,116,114,116,114,116,114,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,136,137,138,139,140,37,141,142,143,144,145,135,136,137,138,139,140,37,141,142,143,144,145,135,136,137,138,139,140,37,141,142,143,144,145,135,136,137,138,139,140,37,141,142,143,144,145,3,135,136,137,138,139,140,37,141,142,143,144,145,135,136,137,138,139,140,37,141,142,143,144,145,135,136,137,138,139,140,37,141,142,143,144,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,3],[[]],[[]],[1,1],[[]],[1],[[1,1],4],[[],4],[[]],[5,6],[5,7],[[]],[[8,8,8,8],1],[[]],[1,9],[1,9],[[],10],[[],10],[[],11],[[],12],[3,1],[3,1],0,0,[13,14],[13,14],[[]],[[]],[[]],[[]],[13,13],[[]],[[],13],[[],13],[15,[[16,[13]]]],[13,14],[13,14],[13],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[14,13],[[],10],[[],10],[[],10],[[],10],[[],12],[[],11],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,8,8,8,8,8,8]],[[17,8,8]],[[17,18]],[[17,8,8,8,8]],[19,17],[17],[[]],[[]],[[]],[[]],[[]],[[]],[19,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,20],[[17,21]],[17],[17,21],[[17,21,22]],[[17,21]],[[17,[23,[21]]]],[24,24],[25,25],[26,26],[27,27],[28,28],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[17],[[17,29]],[[[16,[9]],20,20,20,20,13,30],19],[17,[[16,[22]]]],[19,[[23,[31]]]],[19,17],[19,17],[[17,21,22]],[[17,32,33,33,34]],[[17,27]],[[17,32,33,8,33,8,34]],[19],[17],[17],[[17,21]],[17],[[17,21]],[[17,[23,[21]]]],[17],[[24,35],36],[[25,35],36],[[26,35],36],[[27,35],36],[[28,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,19],[17,29],[17,28],[17,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,8,8]],[17],[17],[[17,8]],[17],[[17,8,8]],[[17,4]],[[17,4]],[[17,4]],[[17,4]],[[17,24]],[[17,1]],[[17,38]],[[17,8]],[[17,39]],[[17,8,8]],[[17,28]],[[17,25]],[[17,8,[23,[8]]]],[[17,26]],[[17,8]],[[17,8]],[[17,8,8,8,8]],[[17,8,8,8,8]],[[17,40,8]],[[17,40,8,1]],[[17,4]],[[17,4]],[[17,4]],[[17,4]],[[17,41]],[[17,29]],[[17,8,8]],[[17,[23,[42]],[23,[33]]]],[[17,21]],[[17,[23,[33]]]],[17],[[17,21]],[[17,21,8]],[[]],[[]],[[]],[[]],[[]],[[]],[17,19],[[17,8,8]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],11],[[],12],[17,20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[43,44],[43,44],[[]],[[]],[[]],[[]],[43,43],[[]],[44,45],[43,44],[43,44],[43],[[]],[[]],[[[49,[[0,[[46,[[23,[31]]]],47,48]]]]],43],[[[51,[[51,[50]]]]],43],[[[23,[31]]],43],[[]],[[]],[[],52],[[],31],[[]],[44,43],[[],10],[[],10],[[],10],[[],10],[[],11],[[],12],[[],12],0,[53,54],[[53,54],5],0,0,[[55,5,5],31],0,0,[5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[10,[30,56]]]],[[],[[10,[[58,[57]],56]]]],[[57,59],[[16,[[58,[60]]]]]],[61,5],[62,5],[61,53],[62,55],[60,63],[4,[[10,[56]]]],[64,[[10,[65,56]]]],[60,52],0,[[]],[[]],[[]],[[]],[[]],[60,63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,21],[[64,65],[[10,[56]]]],[[[61,[5]]],[[61,[5]]]],[[[62,[5,5]]],[[62,[5,5]]]],[66,66],[64,64],[60,60],[[]],[[]],[[]],[[]],[[]],[[64,65,66],[[10,[56]]]],[[64,65,64],[[10,[56]]]],[[64,65,39,39],[[10,[56]]]],[[64,65,60],[[10,[56]]]],[[[62,[[67,[[67,[[67,[67]]]]]]]],[67,[[67,[[67,[[67,[67]]]]]]]]],4],[60,63],[60,63],[64,[[16,[60]]]],[61],[62],[60],[[[61,[5]],[61,[5]]],4],[[[62,[5,5]],[62,[5,5]]],4],[[],4],[[],4],[[[62,[[67,[[67,[[67,[67]]]]]],68]],[67,[[67,[[67,[[67,[67]]]]]]]]],[[16,[[7,[68]]]]]],[[61,35],[[10,[69]]]],[[62,35],[[10,[69]]]],[[64,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[62,[70,70]]]],[[[23,[70]]],[[61,[70]]]],[[[23,[71]]],[[61,[71]]]],[5,6],[5,6],[5,7],[5,7],[[[61,[68]],54],[[16,[[7,[68]]]]]],[[[62,[[67,[[67,[[67,[67]]]]]],68]],[67,[[67,[[67,[[67,[67]]]]]]]]],[[7,[68]]]],[61,[[58,[5,72]]]],[62],[[[61,[68]],54],[[7,[68]]]],[[61,73],[[58,[5,72]]]],[60,74],0,[64,[[10,[56]]]],0,[64,[[16,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[68]]],[[75,[68]]]],[61,[[61,[5]]]],[62,[[62,[5,5]]]],[60,30],[64,4],[64,4],[64,4],[64,4],[62,4],[64,4],[64,4],[64,4],[64,4],[64,4],[61,75],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,54],[62,52],[[],64],[64,57],[60,39],[64,30],[[64,33],[[10,[56]]]],[57,64],[[],64],0,[60,76],[60,74],[60,74],[64,74],[64,74],[64,57],[60,77],[64,77],[64,40],[[21,78,79,80],[[16,[22]]]],[[21,61,80],[[16,[22]]]],[64,30],[64,[[10,[56]]]],0,[62,81],[[]],[[]],[[]],[[]],[[]],[63,60],[61,[[61,[5]]]],[62,[[62,[5,5]]]],[[[61,[5]]],5],[[[61,[5]]],5],[[[62,[5,5]]],5],[[[62,[5,5]]],5],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],52],[[],12],[[],52],[[],12],[[],12],[[],12],[[],12],[64,30],[64,4],[64,30],[33,[[10,[56]]]],[60,74],0,[[78,[16,[79]]],[[16,[61]]]],[53,61],[55,62],[53,61],[55,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],82],[83,84],[[82,82],82],[[82,82]],[[82,82],82],[[82,82]],[82,74],[[82,82],82],[[82,82]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[82,82],[85,85],[86,86],[87,87],[88,88],[89,89],[83,83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,82],90],[82,82],[[82,82],4],[83,84],[83,84],[[82,82],82],[83],[[],82],[91],[[82,82],4],[[],4],[[82,92]],[[82,35],36],[[82,35],36],[[82,35],36],[[82,35],36],[[82,35],36],[[85,35],36],[[86,35],36],[[87,35],36],[[88,35],36],[[89,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,[[16,[82]]]],[74,82],[74,82],[92,82],[[83,93],77],[83,82],[[83,93],94],[83,85],[[82,95]],[[82,82]],[[82,82],82],[[82,82],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,4],[82,4],[83,33],0,[[87,88,89,[58,[85]],96],[[10,[91]]]],[97,[[10,[83]]]],[[97,98,4],[[10,[83]]]],[[97,85,33,86],[[10,[83]]]],[82,82],[[82,82],[[16,[90]]]],[[83,87]],[[82,82]],[[82,82,4]],[[83,93,77]],[[83,82]],[[83,93,94]],[[83,99]],[[83,[23,[100]]]],[[83,85]],[[82,82],82],[[82,82]],[[82,82],82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,83],[[82,82]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],11],[[],12],[[82,82],82],0,0,0,0,0,0,[97,101],[[]],[[]],[97,101],[[]],[[]],[[]],[[]],[102,102],[97,97],[[]],[[]],[97,101],[97,101],[97],[[102,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[102,[[10,[97]]]],[[]],[[]],[101,97],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],11],[[],12],0,0,0,[38,103],[[]],[38,103],[[]],[[]],[[]],[38,38],[[]],[[38,30],[[16,[45]]]],[38,[[61,[30]]]],[38,[[16,[[61,[[62,[76,104]]]]]]]],[38,[[16,[[62,[76,105]]]]]],[[38,[62,[76,105]]],[[10,[38]]]],[38,103],[38,103],[38],[[]],[[]],[43,[[10,[38]]]],[76,[[10,[38]]]],[[38,[23,[42]],[23,[106]]],4],[[38,[23,[42]],[23,[21]]],4],[38,106],[[]],[[]],[38,76],[[]],[103,38],[[],10],[[],10],[[],10],[[],10],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,[[40,29],40],[[33,29],33],[[21,29],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[40,40],[33,33],[21,21],[29,29],[[]],[[]],[[]],[[]],[[21,33],4],0,[[],40],[[],33],[[],21],[[],29],[[40,35],[[10,[69]]]],[[33,35],[[10,[69]]]],[[21,35],[[10,[69]]]],[[29,35],[[10,[69]]]],[[]],[[]],[[]],[[]],[[[62,[5,5]]],[[16,[21]]]],0,[[21,40],21],[[]],[[]],[[]],[[]],[29,29],[21,4],[[21,21],4],[[77,77],40],[[77,77],33],[[33,40],21],[[77,77,77,77,77,77],29],0,0,[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,[[],34],[32,107],[[34,34],34],[[34,34]],[[34,34],34],[[34,34]],[34,30],[[34,34],34],[[34,34]],[[]],[[]],[32,107],[[]],[[]],[[]],[[]],[34,34],[32,32],[[]],[[]],[[34,34],90],[34,34],[[34,34],4],[[13,[23,[8]],[23,[8]],52],32],[[13,[61,[1]],[23,[8]]],32],[32,107],[32,107],[[34,34],34],[32],[[],34],[[34,34],4],[[],4],[[34,92]],[[34,35],36],[[34,35],36],[[34,35],36],[[34,35],36],[[34,35],36],[[]],[[]],[[]],[30,[[16,[34]]]],[30,34],[30,34],[92,34],[[34,95]],[[34,34]],[[34,34],34],[[34,34],4],[[]],[[]],[[]],[34,4],[34,4],[34,34],[[34,34],[[16,[90]]]],[[34,34]],[[34,34,4]],[[34,34],34],[[34,34]],[[34,34],34],[[]],[[]],[107,32],[[34,34]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[34,34],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[22,108],[108,20],[108,20],[[]],[[]],[22,108],[[]],[[]],[[]],[[]],[[]],[[]],[108,20],[22,22],[[]],[108,13],[[108,21],[[16,[22]]]],[108,45],[22,108],[22,108],[22],[[]],[[]],[[]],[[]],[108,20],[[]],[[]],[[]],[[]],[[20,20,20,20,20,13,30,43,4,30],22],[[]],[108,22],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],11],[[],12],[[],12],[108,20],0,0,0,0,0,0,0,0,0,0,0,[[109,110]],[109,18],[[]],[[]],[109,18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,109],[111,111],[[]],[[]],[112,113],[109,18],[109,18],[109],0,[[111,111],4],[[113,35],[[10,[69]]]],[[111,35],36],[[]],[[]],[[]],[[]],[[]],[[21,[16,[29]]],109],[[]],[[]],[[]],[[]],[[]],[113,[[23,[33]]]],[[]],[18,109],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[],11],[[],12],[[],12],0,0,[[]],[[]],[[]],[[]],[114],[[]],[[]],[[115,106,115],116],[21,114],[[[23,[21]]],114],[116,115],[[]],[[]],[[116,114]],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,9],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,[[117,118],[[16,[61]]]],[[[61,[118]]],[[16,[[61,[[62,[76,104]]]]]]]],[[21,117,118,119],[[16,[22]]]],[[21,61,119],[[16,[22]]]],[[117,118],[[16,[[61,[118]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"CGColor",50],[6,"CFTypeRef",393],[6,"CGColorRef",1419],[15,"bool"],[4,"c_void",1575],[3,"ItemMutRef",1576],[3,"ItemRef",1576],[6,"CGFloat",16],[6,"c_void",1577],[4,"Result",1578],[6,"CFTypeID",1579],[3,"TypeId",1580],[3,"CGColorSpace",75],[3,"CGColorSpaceRef",75],[6,"CFStringRef",1581],[4,"Option",1582],[3,"CGContextRef",111],[3,"CGPathRef",1330],[3,"CGContext",111],[6,"size_t",1583],[3,"CGRect",1105],[3,"CGImage",1266],[15,"slice"],[4,"CGBlendMode",111],[4,"CGLineCap",111],[4,"CGLineJoin",111],[4,"CGPathDrawingMode",111],[4,"CGInterpolationQuality",111],[3,"CGAffineTransform",1105],[15,"u32"],[15,"u8"],[3,"CGGradient",1186],[3,"CGPoint",1105],[3,"CGGradientDrawingOptions",1186],[3,"Formatter",1584],[6,"Result",1584],[4,"CGContext",1419],[3,"CGFont",1067],[15,"i32"],[3,"CGSize",1105],[4,"CGTextDrawingMode",111],[6,"CGGlyph",1067],[3,"CGDataProvider",330],[3,"CGDataProviderRef",330],[3,"CFData",1585],[8,"AsRef",1586],[8,"Sync",1587],[8,"Send",1587],[3,"Arc",1588],[8,"CustomData",330],[3,"Box",1589],[15,"usize"],[3,"__CFArray",1590],[15,"isize"],[3,"__CFDictionary",1591],[6,"CGError",393],[6,"CGDirectDisplayID",393],[3,"Vec",1592],[6,"CFDictionaryRef",393],[3,"CGDisplayMode",393],[3,"CFArray",393],[3,"CFDictionary",393],[3,"CGDisplayModeRef",393],[3,"CGDisplay",393],[6,"CGDisplayConfigRef",393],[4,"CGConfigureOption",393],[8,"ToVoid",1576],[8,"FromVoid",1576],[3,"Error",1584],[8,"TCFType",1576],[8,"Copy",1587],[3,"Global",1593],[3,"CFRange",1579],[15,"u64"],[3,"CFArrayIterator",1594],[3,"CFString",1595],[15,"f64"],[6,"CGWindowListOption",393],[6,"CGWindowID",393],[6,"CGWindowImageOption",393],[3,"CFMutableDictionary",1596],[3,"CGEventFlags",690],[3,"CGEvent",690],[3,"CGEventRef",690],[4,"CGEventType",690],[4,"CGMouseButton",690],[4,"CGEventTapLocation",690],[4,"CGEventTapPlacement",690],[4,"CGEventTapOptions",690],[4,"Ordering",1597],[3,"CGEventTap",690],[8,"IntoIterator",1598],[6,"CGEventField",690],[15,"i64"],[8,"Hasher",1599],[8,"Fn",1600],[3,"CGEventSource",1025],[6,"CGKeyCode",690],[15,"str"],[15,"u16"],[3,"CGEventSourceRef",1025],[4,"CGEventSourceStateID",1025],[3,"CGFontRef",1067],[3,"CFType",1576],[3,"CFNumber",1601],[6,"c_int",1583],[3,"CGGradientRef",1186],[3,"CGImageRef",1266],[3,"CGPath",1330],[8,"FnMut",1600],[4,"CGPathElementType",1330],[3,"CGPathElementRef",1330],[3,"CGPathElement",1330],[3,"CGSRegion",1397],[6,"c_uint",1583],[3,"CGSSurface",1397],[6,"CGWindowListOption",1528],[6,"CGWindowID",1528],[6,"CGWindowImageOption",1528],[6,"CGDataProviderGetBytesCallback",330],[6,"CGDataProviderReleaseInfoCallback",330],[6,"CGDataProviderRewindCallback",330],[6,"CGDataProviderSkipBytesCallback",330],[6,"CGDataProviderSkipForwardCallback",330],[6,"CGDataProviderGetBytePointerCallback",330],[6,"CGDataProviderGetBytesAtOffsetCallback",330],[6,"CGDataProviderReleaseBytePointerCallback",330],[6,"CGDataProviderReleaseDataCallback",330],[6,"CGDataProviderGetBytesAtPositionCallback",330],[3,"KeyCode",690],[3,"EventField",690],[3,"ScrollEventUnit",690],[4,"CGImageAlphaInfo",1266],[4,"CGImageByteOrderInfo",1266],[4,"CGImage",1419],[3,"__CGColor",1419],[4,"CGColorSpace",1419],[4,"CGPath",1419],[4,"CGDataProvider",1419],[4,"CGFont",1419],[4,"CGGradient",1419],[4,"CGEventTap",1419],[4,"CGEvent",1419],[4,"CGEventSource",1419],[4,"CGDisplayMode",1419]]},\
"core_graphics_types":{"doc":"","t":"AAGGGGRRRRRRRRRRRDDDDRRRRMLLLMLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLMMM","n":["base","geometry","CGError","CGFloat","CGGlyph","boolean_t","kCGErrorCannotComplete","kCGErrorFailure","kCGErrorIllegalArgument","kCGErrorInvalidConnection","kCGErrorInvalidContext","kCGErrorInvalidOperation","kCGErrorNoneAvailable","kCGErrorNotImplemented","kCGErrorRangeCheck","kCGErrorSuccess","kCGErrorTypeCheck","CGAffineTransform","CGPoint","CGRect","CGSize","CG_AFFINE_TRANSFORM_IDENTITY","CG_ZERO_POINT","CG_ZERO_RECT","CG_ZERO_SIZE","a","apply_transform","apply_transform","apply_transform","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains","d","default","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","from_dict_representation","height","inset","into","into","into","into","invert","is_empty","is_intersects","new","new","new","new","origin","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx","ty","type_id","type_id","type_id","type_id","width","x","y"],"q":[[0,"core_graphics_types"],[2,"core_graphics_types::base"],[17,"core_graphics_types::geometry"],[98,"core::fmt"],[99,"core::fmt"],[100,"core::option"],[101,"core::result"],[102,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,4,2,1,3,4,2,1,3,4,2,2,1,3,4,2,1,3,4,2,4,2,1,3,4,2,1,3,4,2,1,3,4,2,4,1,4,1,3,4,2,2,4,4,1,3,4,2,4,4,1,3,4,2,1,3,4,2,1,3,4,2,2,2,1,3,4,2,1,3,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[[3,2],3],[[4,2],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[3,3],[4,4],[2,2],[[]],[[]],[[]],[[]],[[4,3],5],0,[[],1],[[],3],[[],4],[[],2],[[1,6],7],[[3,6],7],[[4,6],7],[[2,6],7],[[]],[[]],[[]],[[]],[8,[[9,[4]]]],0,[[4,1],4],[[]],[[]],[[]],[[]],[2,2],[4,5],[[4,4],5],[[10,10],1],[[10,10],3],[[3,1],4],[[10,10,10,10,10,10],2],0,0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[],12],[[],12],[[],12],[[],12],0,0,0],"c":[],"p":[[3,"CGSize",17],[3,"CGAffineTransform",17],[3,"CGPoint",17],[3,"CGRect",17],[15,"bool"],[3,"Formatter",98],[6,"Result",98],[3,"CFDictionary",99],[4,"Option",100],[6,"CGFloat",2],[4,"Result",101],[3,"TypeId",102]]},\
"dispatch":{"doc":"Rust wrapper for Apple’s Grand Central Dispatch (GCD).","t":"NNNDDNNDDEEDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHRRRRRRRLLFFFFFGFFFFFFFFGFFDGFGGFFGFFFFFGFFFFFFFGLLLLL","n":["Background","Concurrent","Default","Group","GroupGuard","High","Low","Once","Queue","QueueAttribute","QueuePriority","Semaphore","SemaphoreGuard","Serial","SuspendGuard","WaitTimeout","access","access_timeout","apply","barrier_async","barrier_sync","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_once","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create","create","drop","drop","drop","drop","drop","drop","enter","eq","eq","exec_after","exec_async","exec_async","exec_sync","ffi","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","from","from","from","from","from","from","from","from","from","from","global","hash","hash","into","into","into","into","into","into","into","into","into","into","is_empty","label","leave","main","map","new","new","notify","resume","signal","signal","suspend","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","wait","wait_timeout","wait_timeout","with_target_queue","DISPATCH_QUEUE_CONCURRENT","DISPATCH_QUEUE_PRIORITY_BACKGROUND","DISPATCH_QUEUE_PRIORITY_DEFAULT","DISPATCH_QUEUE_PRIORITY_HIGH","DISPATCH_QUEUE_PRIORITY_LOW","DISPATCH_QUEUE_SERIAL","DISPATCH_TIME_FOREVER","DISPATCH_TIME_NOW","borrow","borrow_mut","dispatch_after_f","dispatch_apply_f","dispatch_async_f","dispatch_barrier_async_f","dispatch_barrier_sync_f","dispatch_function_t","dispatch_get_context","dispatch_get_global_queue","dispatch_get_main_queue","dispatch_group_async_f","dispatch_group_create","dispatch_group_enter","dispatch_group_leave","dispatch_group_notify_f","dispatch_group_t","dispatch_group_wait","dispatch_main","dispatch_object_s","dispatch_object_t","dispatch_once_f","dispatch_once_t","dispatch_queue_attr_t","dispatch_queue_create","dispatch_queue_get_label","dispatch_queue_t","dispatch_release","dispatch_resume","dispatch_retain","dispatch_semaphore_create","dispatch_semaphore_signal","dispatch_semaphore_t","dispatch_semaphore_wait","dispatch_set_context","dispatch_set_finalizer_f","dispatch_set_target_queue","dispatch_suspend","dispatch_sync_f","dispatch_time","dispatch_time_t","from","into","try_from","try_into","type_id"],"q":[[0,"dispatch"],[165,"dispatch::ffi"],[219,"core::time"],[220,"core::result"],[221,"core::marker"],[222,"core::ops::function"],[223,"core::marker"],[224,"core::fmt"],[225,"alloc::vec"],[226,"alloc::string"],[227,"core::any"]],"d":["The queue is scheduled for execution after all high …","The queue executes blocks concurrently.","The queue is scheduled for execution after all high …","A Grand Central Dispatch group.","An RAII guard which will leave a <code>Group</code> when dropped.","The queue is scheduled for execution before any default …","The queue is scheduled for execution after all default …","A predicate used to execute a closure only once for the …","A Grand Central Dispatch queue.","The type of a dispatch queue.","The priority of a global concurrent queue.","A counting semaphore.","An RAII guard which will signal a <code>Semaphore</code> when dropped.","The queue executes blocks serially in FIFO order.","An RAII guard which will resume a suspended <code>Queue</code> when …","An error indicating a wait timed out.","Wait to access a resource protected by self. This …","Wait until the specified timeout to access a resource …","Submits a closure to be executed on self the given number …","Submits a closure to be executed on self as a barrier and …","Submits a closure to be executed on self as a barrier and …","","","","","","","","","","","","","","","","","","","","","Executes a closure once, ensuring that no other closure …","","","","","","","","","","","","","","","","","Creates a new dispatch <code>Group</code>.","Creates a new dispatch <code>Queue</code>.","","","","","","","Indicates that a closure has entered self, and increments …","","","After the specified delay, submits a closure for …","Submits a closure asynchronously to the given <code>Queue</code> and …","Submits a closure for asynchronous execution on self and …","Submits a closure for execution on self and waits until it …","Raw foreign function interface for libdispatch.","","","","","","","","","","","","Submits a closure to be executed on self for each element …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a system-defined global concurrent <code>Queue</code> with the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether self is currently empty.","Returns the label that was specified for self.","Drops self, leaving the <code>Group</code>.","Returns the serial dispatch <code>Queue</code> associated with the …","Submits a closure to be executed on self for each element …","Creates a new <code>Once</code>.","Creates a new <code>Semaphore</code> with an initial value.","Schedules a closure to be submitted to the given <code>Queue</code> …","Drops self, allowing the suspended <code>Queue</code> to resume.","Signal (increment) self.","Drops self, signaling the <code>Semaphore</code>.","Suspends the invocation of blocks on self and returns a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Waits synchronously for all tasks associated with self to …","Wait for (decrement) self.","Waits for all tasks associated with self to complete …","Wait for (decrement) self until the specified timeout has …","Creates a new dispatch <code>Queue</code> with the given target queue.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[16,15,16,0,0,16,16,0,0,0,0,0,0,15,0,0,1,1,6,6,6,13,14,15,16,6,17,12,1,2,4,13,14,15,16,6,17,12,1,2,4,12,13,14,15,16,6,17,1,4,13,14,15,16,6,17,1,4,13,6,13,14,6,17,1,2,13,15,16,6,13,6,6,0,13,14,15,16,6,17,12,1,2,4,4,6,13,14,15,16,6,17,12,1,2,4,6,15,16,13,14,15,16,6,17,12,1,2,4,13,6,14,6,6,12,1,13,17,1,2,6,13,14,15,16,6,17,1,4,4,13,14,15,16,6,17,12,1,2,4,13,14,15,16,6,17,12,1,2,4,13,14,15,16,6,17,12,1,2,4,13,1,13,1,6,0,0,0,0,0,0,0,0,29,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,29,29,29],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[1,3],[[5,[2,4]]]],[[6,7,[0,[8,9]]]],[[6,[0,[10,11]]]],[[6,[0,[10,11]]],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,11]],[13,13],[14,14],[15,15],[16,16],[6,6],[17,17],[1,1],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[18,15],6],[13],[14],[6],[17],[1],[2],[13,14],[[15,15],19],[[16,16],19],[[6,3,[0,[10,11]]]],[[13,6,[0,[10,11]]]],[[6,[0,[10,11]]]],[[6,[0,[10,11]]],10],0,[[13,20],21],[[14,20],21],[[15,20],21],[[16,20],21],[[6,20],21],[[17,20],21],[[12,20],21],[[1,20],21],[[2,20],21],[[4,20],21],[[4,20],21],[[6,[22,[10]],[0,[8,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,6],[[15,23]],[[16,23]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,19],[6,18],[14],[[],6],[[6,[24,[10]],[0,[8,9]]],[[24,[10]]]],[[],12],[25,1],[[13,6,[0,[10,11]]]],[17],[1,19],[2],[6,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[13],[1],[[13,3],[[5,[4]]]],[[1,3],[[5,[4]]]],[[18,15,6],6],0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],5],[[],5],[[],27]],"c":[],"p":[[3,"Semaphore",0],[3,"SemaphoreGuard",0],[3,"Duration",219],[3,"WaitTimeout",0],[4,"Result",220],[3,"Queue",0],[15,"usize"],[8,"Sync",221],[8,"Fn",222],[8,"Send",221],[8,"FnOnce",222],[3,"Once",0],[3,"Group",0],[3,"GroupGuard",0],[4,"QueueAttribute",0],[4,"QueuePriority",0],[3,"SuspendGuard",0],[15,"str"],[15,"bool"],[3,"Formatter",223],[6,"Result",223],[15,"slice"],[8,"Hasher",224],[3,"Vec",225],[15,"u32"],[3,"String",226],[3,"TypeId",227],[6,"dispatch_queue_t",165],[3,"dispatch_object_s",165]]},\
"foreign_types":{"doc":"A framework for Rust wrappers over C APIs.","t":"QQIIDQKLLLOLKLLLLLL","n":["CType","CType","ForeignType","ForeignTypeRef","Opaque","Ref","as_ptr","as_ptr","borrow","borrow_mut","foreign_type","from","from_ptr","from_ptr","from_ptr_mut","into","try_from","try_into","type_id"],"q":[[0,"foreign_types"],[19,"core::result"],[20,"core::any"]],"d":["The raw C type.","The raw C type.","A type implemented by wrappers over foreign types.","A trait implemented by types which reference borrowed …","An opaque type used to define <code>ForeignTypeRef</code> types.","The type representing a reference to this type.","Returns a raw pointer to the wrapped value.","Returns a raw pointer to the wrapped value.","","","A macro to easily define wrappers for foreign types.","Returns the argument unchanged.","Constructs an instance of this type from its raw type.","Constructs a shared instance of this type from its raw …","Constructs a mutable reference of this type from its raw …","Calls <code>U::from(self)</code>.","","",""],"i":[3,4,0,0,0,3,3,4,5,5,0,5,3,4,4,5,5,5,5],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2]],"c":[],"p":[[4,"Result",19],[3,"TypeId",20],[8,"ForeignType",0],[8,"ForeignTypeRef",0],[3,"Opaque",0]]},\
"foreign_types_shared":{"doc":"Internal crate used by foreign-types","t":"QQIIDQKLLLLKLLLLLL","n":["CType","CType","ForeignType","ForeignTypeRef","Opaque","Ref","as_ptr","as_ptr","borrow","borrow_mut","from","from_ptr","from_ptr","from_ptr_mut","into","try_from","try_into","type_id"],"q":[[0,"foreign_types_shared"],[18,"core::result"],[19,"core::any"]],"d":["The raw C type.","The raw C type.","A type implemented by wrappers over foreign types.","A trait implemented by types which reference borrowed …","An opaque type used to define <code>ForeignTypeRef</code> types.","The type representing a reference to this type.","Returns a raw pointer to the wrapped value.","Returns a raw pointer to the wrapped value.","","","Returns the argument unchanged.","Constructs an instance of this type from its raw type.","Constructs a shared instance of this type from its raw …","Constructs a mutable reference of this type from its raw …","Calls <code>U::from(self)</code>.","","",""],"i":[3,4,0,0,0,3,3,4,5,5,5,3,4,4,5,5,5,5],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2]],"c":[],"p":[[4,"Result",18],[3,"TypeId",19],[8,"ForeignType",0],[8,"ForeignTypeRef",0],[3,"Opaque",0]]},\
"gl":{"doc":"Usage","tn":["ACTIVE_ATOMIC_COUNTER_BUFFERS","ACTIVE_ATTRIBUTES","ACTIVE_ATTRIBUTE_MAX_LENGTH","ACTIVE_PROGRAM","ACTIVE_RESOURCES","ACTIVE_SUBROUTINES","ACTIVE_SUBROUTINE_MAX_LENGTH","ACTIVE_SUBROUTINE_UNIFORMS","ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","ACTIVE_TEXTURE","ACTIVE_UNIFORMS","ACTIVE_UNIFORM_BLOCKS","ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","ACTIVE_UNIFORM_MAX_LENGTH","ACTIVE_VARIABLES","ALIASED_LINE_WIDTH_RANGE","ALL_BARRIER_BITS","ALL_SHADER_BITS","ALPHA","ALREADY_SIGNALED","ALWAYS","AND","AND_INVERTED","AND_REVERSE","ANY_SAMPLES_PASSED","ANY_SAMPLES_PASSED_CONSERVATIVE","ARRAY_BUFFER","ARRAY_BUFFER_BINDING","ARRAY_SIZE","ARRAY_STRIDE","ATOMIC_COUNTER_BARRIER_BIT","ATOMIC_COUNTER_BUFFER","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","ATOMIC_COUNTER_BUFFER_BINDING","ATOMIC_COUNTER_BUFFER_DATA_SIZE","ATOMIC_COUNTER_BUFFER_INDEX","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","ATOMIC_COUNTER_BUFFER_SIZE","ATOMIC_COUNTER_BUFFER_START","ATTACHED_SHADERS","AUTO_GENERATE_MIPMAP","ActiveShaderProgram","ActiveShaderProgram","ActiveTexture","ActiveTexture","AttachShader","AttachShader","BACK","BACK_LEFT","BACK_RIGHT","BGR","BGRA","BGRA_INTEGER","BGR_INTEGER","BLEND","BLEND_COLOR","BLEND_DST","BLEND_DST_ALPHA","BLEND_DST_RGB","BLEND_EQUATION","BLEND_EQUATION_ALPHA","BLEND_EQUATION_RGB","BLEND_SRC","BLEND_SRC_ALPHA","BLEND_SRC_RGB","BLOCK_INDEX","BLUE","BLUE_INTEGER","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","BUFFER","BUFFER_ACCESS","BUFFER_ACCESS_FLAGS","BUFFER_BINDING","BUFFER_DATA_SIZE","BUFFER_IMMUTABLE_STORAGE","BUFFER_MAPPED","BUFFER_MAP_LENGTH","BUFFER_MAP_OFFSET","BUFFER_MAP_POINTER","BUFFER_SIZE","BUFFER_STORAGE_FLAGS","BUFFER_UPDATE_BARRIER_BIT","BUFFER_USAGE","BUFFER_VARIABLE","BYTE","BeginConditionalRender","BeginConditionalRender","BeginQuery","BeginQuery","BeginQueryIndexed","BeginQueryIndexed","BeginTransformFeedback","BeginTransformFeedback","BindAttribLocation","BindAttribLocation","BindBuffer","BindBuffer","BindBufferBase","BindBufferBase","BindBufferRange","BindBufferRange","BindBuffersBase","BindBuffersBase","BindBuffersRange","BindBuffersRange","BindFragDataLocation","BindFragDataLocation","BindFragDataLocationIndexed","BindFragDataLocationIndexed","BindFramebuffer","BindFramebuffer","BindImageTexture","BindImageTexture","BindImageTextures","BindImageTextures","BindProgramPipeline","BindProgramPipeline","BindRenderbuffer","BindRenderbuffer","BindSampler","BindSampler","BindSamplers","BindSamplers","BindTexture","BindTexture","BindTextureUnit","BindTextureUnit","BindTextures","BindTextures","BindTransformFeedback","BindTransformFeedback","BindVertexArray","BindVertexArray","BindVertexBuffer","BindVertexBuffer","BindVertexBuffers","BindVertexBuffers","BlendColor","BlendColor","BlendEquation","BlendEquation","BlendEquationSeparate","BlendEquationSeparate","BlendEquationSeparatei","BlendEquationSeparatei","BlendEquationi","BlendEquationi","BlendFunc","BlendFunc","BlendFuncSeparate","BlendFuncSeparate","BlendFuncSeparatei","BlendFuncSeparatei","BlendFunci","BlendFunci","BlitFramebuffer","BlitFramebuffer","BlitNamedFramebuffer","BlitNamedFramebuffer","BufferData","BufferData","BufferStorage","BufferStorage","BufferSubData","BufferSubData","CAVEAT_SUPPORT","CCW","CLAMP_READ_COLOR","CLAMP_TO_BORDER","CLAMP_TO_EDGE","CLEAR","CLEAR_BUFFER","CLEAR_TEXTURE","CLIENT_MAPPED_BUFFER_BARRIER_BIT","CLIENT_STORAGE_BIT","CLIP_DEPTH_MODE","CLIP_DISTANCE0","CLIP_DISTANCE1","CLIP_DISTANCE2","CLIP_DISTANCE3","CLIP_DISTANCE4","CLIP_DISTANCE5","CLIP_DISTANCE6","CLIP_DISTANCE7","CLIP_ORIGIN","COLOR","COLOR_ATTACHMENT0","COLOR_ATTACHMENT1","COLOR_ATTACHMENT10","COLOR_ATTACHMENT11","COLOR_ATTACHMENT12","COLOR_ATTACHMENT13","COLOR_ATTACHMENT14","COLOR_ATTACHMENT15","COLOR_ATTACHMENT16","COLOR_ATTACHMENT17","COLOR_ATTACHMENT18","COLOR_ATTACHMENT19","COLOR_ATTACHMENT2","COLOR_ATTACHMENT20","COLOR_ATTACHMENT21","COLOR_ATTACHMENT22","COLOR_ATTACHMENT23","COLOR_ATTACHMENT24","COLOR_ATTACHMENT25","COLOR_ATTACHMENT26","COLOR_ATTACHMENT27","COLOR_ATTACHMENT28","COLOR_ATTACHMENT29","COLOR_ATTACHMENT3","COLOR_ATTACHMENT30","COLOR_ATTACHMENT31","COLOR_ATTACHMENT4","COLOR_ATTACHMENT5","COLOR_ATTACHMENT6","COLOR_ATTACHMENT7","COLOR_ATTACHMENT8","COLOR_ATTACHMENT9","COLOR_BUFFER_BIT","COLOR_CLEAR_VALUE","COLOR_COMPONENTS","COLOR_ENCODING","COLOR_LOGIC_OP","COLOR_RENDERABLE","COLOR_WRITEMASK","COMMAND_BARRIER_BIT","COMPARE_REF_TO_TEXTURE","COMPATIBLE_SUBROUTINES","COMPILE_STATUS","COMPRESSED_R11_EAC","COMPRESSED_RED","COMPRESSED_RED_RGTC1","COMPRESSED_RG","COMPRESSED_RG11_EAC","COMPRESSED_RGB","COMPRESSED_RGB8_ETC2","COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_RGBA","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGBA_BPTC_UNORM","COMPRESSED_RGB_BPTC_SIGNED_FLOAT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","COMPRESSED_RG_RGTC2","COMPRESSED_SIGNED_R11_EAC","COMPRESSED_SIGNED_RED_RGTC1","COMPRESSED_SIGNED_RG11_EAC","COMPRESSED_SIGNED_RG_RGTC2","COMPRESSED_SRGB","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","COMPRESSED_SRGB_ALPHA","COMPRESSED_SRGB_ALPHA_BPTC_UNORM","COMPRESSED_TEXTURE_FORMATS","COMPUTE_SHADER","COMPUTE_SHADER_BIT","COMPUTE_SUBROUTINE","COMPUTE_SUBROUTINE_UNIFORM","COMPUTE_TEXTURE","COMPUTE_WORK_GROUP_SIZE","CONDITION_SATISFIED","CONSTANT_ALPHA","CONSTANT_COLOR","CONTEXT_COMPATIBILITY_PROFILE_BIT","CONTEXT_CORE_PROFILE_BIT","CONTEXT_FLAGS","CONTEXT_FLAG_DEBUG_BIT","CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","CONTEXT_FLAG_ROBUST_ACCESS_BIT","CONTEXT_LOST","CONTEXT_PROFILE_MASK","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_RELEASE_BEHAVIOR_FLUSH","COPY","COPY_INVERTED","COPY_READ_BUFFER","COPY_READ_BUFFER_BINDING","COPY_WRITE_BUFFER","COPY_WRITE_BUFFER_BINDING","CULL_FACE","CULL_FACE_MODE","CURRENT_PROGRAM","CURRENT_QUERY","CURRENT_VERTEX_ATTRIB","CW","CheckFramebufferStatus","CheckFramebufferStatus","CheckNamedFramebufferStatus","CheckNamedFramebufferStatus","ClampColor","ClampColor","Clear","Clear","ClearBufferData","ClearBufferData","ClearBufferSubData","ClearBufferSubData","ClearBufferfi","ClearBufferfi","ClearBufferfv","ClearBufferfv","ClearBufferiv","ClearBufferiv","ClearBufferuiv","ClearBufferuiv","ClearColor","ClearColor","ClearDepth","ClearDepth","ClearDepthf","ClearDepthf","ClearNamedBufferData","ClearNamedBufferData","ClearNamedBufferSubData","ClearNamedBufferSubData","ClearNamedFramebufferfi","ClearNamedFramebufferfi","ClearNamedFramebufferfv","ClearNamedFramebufferfv","ClearNamedFramebufferiv","ClearNamedFramebufferiv","ClearNamedFramebufferuiv","ClearNamedFramebufferuiv","ClearStencil","ClearStencil","ClearTexImage","ClearTexImage","ClearTexSubImage","ClearTexSubImage","ClientWaitSync","ClientWaitSync","ClipControl","ClipControl","ColorMask","ColorMask","ColorMaski","ColorMaski","ColorP3ui","ColorP3ui","ColorP3uiv","ColorP3uiv","ColorP4ui","ColorP4ui","ColorP4uiv","ColorP4uiv","CompileShader","CompileShader","CompressedTexImage1D","CompressedTexImage1D","CompressedTexImage2D","CompressedTexImage2D","CompressedTexImage3D","CompressedTexImage3D","CompressedTexSubImage1D","CompressedTexSubImage1D","CompressedTexSubImage2D","CompressedTexSubImage2D","CompressedTexSubImage3D","CompressedTexSubImage3D","CompressedTextureSubImage1D","CompressedTextureSubImage1D","CompressedTextureSubImage2D","CompressedTextureSubImage2D","CompressedTextureSubImage3D","CompressedTextureSubImage3D","CopyBufferSubData","CopyBufferSubData","CopyImageSubData","CopyImageSubData","CopyNamedBufferSubData","CopyNamedBufferSubData","CopyTexImage1D","CopyTexImage1D","CopyTexImage2D","CopyTexImage2D","CopyTexSubImage1D","CopyTexSubImage1D","CopyTexSubImage2D","CopyTexSubImage2D","CopyTexSubImage3D","CopyTexSubImage3D","CopyTextureSubImage1D","CopyTextureSubImage1D","CopyTextureSubImage2D","CopyTextureSubImage2D","CopyTextureSubImage3D","CopyTextureSubImage3D","CreateBuffers","CreateBuffers","CreateFramebuffers","CreateFramebuffers","CreateProgram","CreateProgram","CreateProgramPipelines","CreateProgramPipelines","CreateQueries","CreateQueries","CreateRenderbuffers","CreateRenderbuffers","CreateSamplers","CreateSamplers","CreateShader","CreateShader","CreateShaderProgramv","CreateShaderProgramv","CreateTextures","CreateTextures","CreateTransformFeedbacks","CreateTransformFeedbacks","CreateVertexArrays","CreateVertexArrays","CullFace","CullFace","DEBUG_CALLBACK_FUNCTION","DEBUG_CALLBACK_USER_PARAM","DEBUG_GROUP_STACK_DEPTH","DEBUG_LOGGED_MESSAGES","DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","DEBUG_OUTPUT","DEBUG_OUTPUT_SYNCHRONOUS","DEBUG_SEVERITY_HIGH","DEBUG_SEVERITY_LOW","DEBUG_SEVERITY_MEDIUM","DEBUG_SEVERITY_NOTIFICATION","DEBUG_SOURCE_API","DEBUG_SOURCE_APPLICATION","DEBUG_SOURCE_OTHER","DEBUG_SOURCE_SHADER_COMPILER","DEBUG_SOURCE_THIRD_PARTY","DEBUG_SOURCE_WINDOW_SYSTEM","DEBUG_TYPE_DEPRECATED_BEHAVIOR","DEBUG_TYPE_ERROR","DEBUG_TYPE_MARKER","DEBUG_TYPE_OTHER","DEBUG_TYPE_PERFORMANCE","DEBUG_TYPE_POP_GROUP","DEBUG_TYPE_PORTABILITY","DEBUG_TYPE_PUSH_GROUP","DEBUG_TYPE_UNDEFINED_BEHAVIOR","DECR","DECR_WRAP","DELETE_STATUS","DEPTH","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_ATTACHMENT","DEPTH_BUFFER_BIT","DEPTH_CLAMP","DEPTH_CLEAR_VALUE","DEPTH_COMPONENT","DEPTH_COMPONENT16","DEPTH_COMPONENT24","DEPTH_COMPONENT32","DEPTH_COMPONENT32F","DEPTH_COMPONENTS","DEPTH_FUNC","DEPTH_RANGE","DEPTH_RENDERABLE","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","DEPTH_STENCIL_TEXTURE_MODE","DEPTH_TEST","DEPTH_WRITEMASK","DISPATCH_INDIRECT_BUFFER","DISPATCH_INDIRECT_BUFFER_BINDING","DISPLAY_LIST","DITHER","DONT_CARE","DOUBLE","DOUBLEBUFFER","DOUBLE_MAT2","DOUBLE_MAT2x3","DOUBLE_MAT2x4","DOUBLE_MAT3","DOUBLE_MAT3x2","DOUBLE_MAT3x4","DOUBLE_MAT4","DOUBLE_MAT4x2","DOUBLE_MAT4x3","DOUBLE_VEC2","DOUBLE_VEC3","DOUBLE_VEC4","DRAW_BUFFER","DRAW_BUFFER0","DRAW_BUFFER1","DRAW_BUFFER10","DRAW_BUFFER11","DRAW_BUFFER12","DRAW_BUFFER13","DRAW_BUFFER14","DRAW_BUFFER15","DRAW_BUFFER2","DRAW_BUFFER3","DRAW_BUFFER4","DRAW_BUFFER5","DRAW_BUFFER6","DRAW_BUFFER7","DRAW_BUFFER8","DRAW_BUFFER9","DRAW_FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","DRAW_INDIRECT_BUFFER","DRAW_INDIRECT_BUFFER_BINDING","DST_ALPHA","DST_COLOR","DYNAMIC_COPY","DYNAMIC_DRAW","DYNAMIC_READ","DYNAMIC_STORAGE_BIT","DebugMessageCallback","DebugMessageCallback","DebugMessageControl","DebugMessageControl","DebugMessageInsert","DebugMessageInsert","DeleteBuffers","DeleteBuffers","DeleteFramebuffers","DeleteFramebuffers","DeleteProgram","DeleteProgram","DeleteProgramPipelines","DeleteProgramPipelines","DeleteQueries","DeleteQueries","DeleteRenderbuffers","DeleteRenderbuffers","DeleteSamplers","DeleteSamplers","DeleteShader","DeleteShader","DeleteSync","DeleteSync","DeleteTextures","DeleteTextures","DeleteTransformFeedbacks","DeleteTransformFeedbacks","DeleteVertexArrays","DeleteVertexArrays","DepthFunc","DepthFunc","DepthMask","DepthMask","DepthRange","DepthRange","DepthRangeArrayv","DepthRangeArrayv","DepthRangeIndexed","DepthRangeIndexed","DepthRangef","DepthRangef","DetachShader","DetachShader","Disable","Disable","DisableVertexArrayAttrib","DisableVertexArrayAttrib","DisableVertexAttribArray","DisableVertexAttribArray","Disablei","Disablei","DispatchCompute","DispatchCompute","DispatchComputeIndirect","DispatchComputeIndirect","DrawArrays","DrawArrays","DrawArraysIndirect","DrawArraysIndirect","DrawArraysInstanced","DrawArraysInstanced","DrawArraysInstancedBaseInstance","DrawArraysInstancedBaseInstance","DrawBuffer","DrawBuffer","DrawBuffers","DrawBuffers","DrawElements","DrawElements","DrawElementsBaseVertex","DrawElementsBaseVertex","DrawElementsIndirect","DrawElementsIndirect","DrawElementsInstanced","DrawElementsInstanced","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseInstance","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertex","DrawElementsInstancedBaseVertexBaseInstance","DrawElementsInstancedBaseVertexBaseInstance","DrawRangeElements","DrawRangeElements","DrawRangeElementsBaseVertex","DrawRangeElementsBaseVertex","DrawTransformFeedback","DrawTransformFeedback","DrawTransformFeedbackInstanced","DrawTransformFeedbackInstanced","DrawTransformFeedbackStream","DrawTransformFeedbackStream","DrawTransformFeedbackStreamInstanced","DrawTransformFeedbackStreamInstanced","ELEMENT_ARRAY_BARRIER_BIT","ELEMENT_ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER_BINDING","EQUAL","EQUIV","EXTENSIONS","Enable","Enable","EnableVertexArrayAttrib","EnableVertexArrayAttrib","EnableVertexAttribArray","EnableVertexAttribArray","Enablei","Enablei","EndConditionalRender","EndConditionalRender","EndQuery","EndQuery","EndQueryIndexed","EndQueryIndexed","EndTransformFeedback","EndTransformFeedback","FALSE","FASTEST","FILL","FILTER","FIRST_VERTEX_CONVENTION","FIXED","FIXED_ONLY","FLOAT","FLOAT_32_UNSIGNED_INT_24_8_REV","FLOAT_MAT2","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4","FLOAT_MAT4x2","FLOAT_MAT4x3","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FRACTIONAL_EVEN","FRACTIONAL_ODD","FRAGMENT_INTERPOLATION_OFFSET_BITS","FRAGMENT_SHADER","FRAGMENT_SHADER_BIT","FRAGMENT_SHADER_DERIVATIVE_HINT","FRAGMENT_SUBROUTINE","FRAGMENT_SUBROUTINE_UNIFORM","FRAGMENT_TEXTURE","FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","FRAMEBUFFER_ATTACHMENT_LAYERED","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_RED_SIZE","FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_BARRIER_BIT","FRAMEBUFFER_BINDING","FRAMEBUFFER_BLEND","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_DEFAULT","FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","FRAMEBUFFER_DEFAULT_HEIGHT","FRAMEBUFFER_DEFAULT_LAYERS","FRAMEBUFFER_DEFAULT_SAMPLES","FRAMEBUFFER_DEFAULT_WIDTH","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","FRAMEBUFFER_INCOMPLETE_READ_BUFFER","FRAMEBUFFER_RENDERABLE","FRAMEBUFFER_RENDERABLE_LAYERED","FRAMEBUFFER_SRGB","FRAMEBUFFER_UNDEFINED","FRAMEBUFFER_UNSUPPORTED","FRONT","FRONT_AND_BACK","FRONT_FACE","FRONT_LEFT","FRONT_RIGHT","FULL_SUPPORT","FUNC_ADD","FUNC_REVERSE_SUBTRACT","FUNC_SUBTRACT","FenceSync","FenceSync","Finish","Finish","Flush","Flush","FlushMappedBufferRange","FlushMappedBufferRange","FlushMappedNamedBufferRange","FlushMappedNamedBufferRange","FnPtr","FramebufferParameteri","FramebufferParameteri","FramebufferRenderbuffer","FramebufferRenderbuffer","FramebufferTexture","FramebufferTexture","FramebufferTexture1D","FramebufferTexture1D","FramebufferTexture2D","FramebufferTexture2D","FramebufferTexture3D","FramebufferTexture3D","FramebufferTextureLayer","FramebufferTextureLayer","FrontFace","FrontFace","GEOMETRY_INPUT_TYPE","GEOMETRY_OUTPUT_TYPE","GEOMETRY_SHADER","GEOMETRY_SHADER_BIT","GEOMETRY_SHADER_INVOCATIONS","GEOMETRY_SUBROUTINE","GEOMETRY_SUBROUTINE_UNIFORM","GEOMETRY_TEXTURE","GEOMETRY_VERTICES_OUT","GEQUAL","GET_TEXTURE_IMAGE_FORMAT","GET_TEXTURE_IMAGE_TYPE","GREATER","GREEN","GREEN_INTEGER","GUILTY_CONTEXT_RESET","GenBuffers","GenBuffers","GenFramebuffers","GenFramebuffers","GenProgramPipelines","GenProgramPipelines","GenQueries","GenQueries","GenRenderbuffers","GenRenderbuffers","GenSamplers","GenSamplers","GenTextures","GenTextures","GenTransformFeedbacks","GenTransformFeedbacks","GenVertexArrays","GenVertexArrays","GenerateMipmap","GenerateMipmap","GenerateTextureMipmap","GenerateTextureMipmap","GetActiveAtomicCounterBufferiv","GetActiveAtomicCounterBufferiv","GetActiveAttrib","GetActiveAttrib","GetActiveSubroutineName","GetActiveSubroutineName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformName","GetActiveSubroutineUniformiv","GetActiveSubroutineUniformiv","GetActiveUniform","GetActiveUniform","GetActiveUniformBlockName","GetActiveUniformBlockName","GetActiveUniformBlockiv","GetActiveUniformBlockiv","GetActiveUniformName","GetActiveUniformName","GetActiveUniformsiv","GetActiveUniformsiv","GetAttachedShaders","GetAttachedShaders","GetAttribLocation","GetAttribLocation","GetBooleani_v","GetBooleani_v","GetBooleanv","GetBooleanv","GetBufferParameteri64v","GetBufferParameteri64v","GetBufferParameteriv","GetBufferParameteriv","GetBufferPointerv","GetBufferPointerv","GetBufferSubData","GetBufferSubData","GetCompressedTexImage","GetCompressedTexImage","GetCompressedTextureImage","GetCompressedTextureImage","GetCompressedTextureSubImage","GetCompressedTextureSubImage","GetDebugMessageLog","GetDebugMessageLog","GetDoublei_v","GetDoublei_v","GetDoublev","GetDoublev","GetError","GetError","GetFloati_v","GetFloati_v","GetFloatv","GetFloatv","GetFragDataIndex","GetFragDataIndex","GetFragDataLocation","GetFragDataLocation","GetFramebufferAttachmentParameteriv","GetFramebufferAttachmentParameteriv","GetFramebufferParameteriv","GetFramebufferParameteriv","GetGraphicsResetStatus","GetGraphicsResetStatus","GetInteger64i_v","GetInteger64i_v","GetInteger64v","GetInteger64v","GetIntegeri_v","GetIntegeri_v","GetIntegerv","GetIntegerv","GetInternalformati64v","GetInternalformati64v","GetInternalformativ","GetInternalformativ","GetMultisamplefv","GetMultisamplefv","GetNamedBufferParameteri64v","GetNamedBufferParameteri64v","GetNamedBufferParameteriv","GetNamedBufferParameteriv","GetNamedBufferPointerv","GetNamedBufferPointerv","GetNamedBufferSubData","GetNamedBufferSubData","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferAttachmentParameteriv","GetNamedFramebufferParameteriv","GetNamedFramebufferParameteriv","GetNamedRenderbufferParameteriv","GetNamedRenderbufferParameteriv","GetObjectLabel","GetObjectLabel","GetObjectPtrLabel","GetObjectPtrLabel","GetPointerv","GetPointerv","GetProgramBinary","GetProgramBinary","GetProgramInfoLog","GetProgramInfoLog","GetProgramInterfaceiv","GetProgramInterfaceiv","GetProgramPipelineInfoLog","GetProgramPipelineInfoLog","GetProgramPipelineiv","GetProgramPipelineiv","GetProgramResourceIndex","GetProgramResourceIndex","GetProgramResourceLocation","GetProgramResourceLocation","GetProgramResourceLocationIndex","GetProgramResourceLocationIndex","GetProgramResourceName","GetProgramResourceName","GetProgramResourceiv","GetProgramResourceiv","GetProgramStageiv","GetProgramStageiv","GetProgramiv","GetProgramiv","GetQueryBufferObjecti64v","GetQueryBufferObjecti64v","GetQueryBufferObjectiv","GetQueryBufferObjectiv","GetQueryBufferObjectui64v","GetQueryBufferObjectui64v","GetQueryBufferObjectuiv","GetQueryBufferObjectuiv","GetQueryIndexediv","GetQueryIndexediv","GetQueryObjecti64v","GetQueryObjecti64v","GetQueryObjectiv","GetQueryObjectiv","GetQueryObjectui64v","GetQueryObjectui64v","GetQueryObjectuiv","GetQueryObjectuiv","GetQueryiv","GetQueryiv","GetRenderbufferParameteriv","GetRenderbufferParameteriv","GetSamplerParameterIiv","GetSamplerParameterIiv","GetSamplerParameterIuiv","GetSamplerParameterIuiv","GetSamplerParameterfv","GetSamplerParameterfv","GetSamplerParameteriv","GetSamplerParameteriv","GetShaderInfoLog","GetShaderInfoLog","GetShaderPrecisionFormat","GetShaderPrecisionFormat","GetShaderSource","GetShaderSource","GetShaderiv","GetShaderiv","GetString","GetString","GetStringi","GetStringi","GetSubroutineIndex","GetSubroutineIndex","GetSubroutineUniformLocation","GetSubroutineUniformLocation","GetSynciv","GetSynciv","GetTexImage","GetTexImage","GetTexLevelParameterfv","GetTexLevelParameterfv","GetTexLevelParameteriv","GetTexLevelParameteriv","GetTexParameterIiv","GetTexParameterIiv","GetTexParameterIuiv","GetTexParameterIuiv","GetTexParameterfv","GetTexParameterfv","GetTexParameteriv","GetTexParameteriv","GetTextureImage","GetTextureImage","GetTextureLevelParameterfv","GetTextureLevelParameterfv","GetTextureLevelParameteriv","GetTextureLevelParameteriv","GetTextureParameterIiv","GetTextureParameterIiv","GetTextureParameterIuiv","GetTextureParameterIuiv","GetTextureParameterfv","GetTextureParameterfv","GetTextureParameteriv","GetTextureParameteriv","GetTextureSubImage","GetTextureSubImage","GetTransformFeedbackVarying","GetTransformFeedbackVarying","GetTransformFeedbacki64_v","GetTransformFeedbacki64_v","GetTransformFeedbacki_v","GetTransformFeedbacki_v","GetTransformFeedbackiv","GetTransformFeedbackiv","GetUniformBlockIndex","GetUniformBlockIndex","GetUniformIndices","GetUniformIndices","GetUniformLocation","GetUniformLocation","GetUniformSubroutineuiv","GetUniformSubroutineuiv","GetUniformdv","GetUniformdv","GetUniformfv","GetUniformfv","GetUniformiv","GetUniformiv","GetUniformuiv","GetUniformuiv","GetVertexArrayIndexed64iv","GetVertexArrayIndexed64iv","GetVertexArrayIndexediv","GetVertexArrayIndexediv","GetVertexArrayiv","GetVertexArrayiv","GetVertexAttribIiv","GetVertexAttribIiv","GetVertexAttribIuiv","GetVertexAttribIuiv","GetVertexAttribLdv","GetVertexAttribLdv","GetVertexAttribPointerv","GetVertexAttribPointerv","GetVertexAttribdv","GetVertexAttribdv","GetVertexAttribfv","GetVertexAttribfv","GetVertexAttribiv","GetVertexAttribiv","GetnColorTable","GetnColorTable","GetnCompressedTexImage","GetnCompressedTexImage","GetnConvolutionFilter","GetnConvolutionFilter","GetnHistogram","GetnHistogram","GetnMapdv","GetnMapdv","GetnMapfv","GetnMapfv","GetnMapiv","GetnMapiv","GetnMinmax","GetnMinmax","GetnPixelMapfv","GetnPixelMapfv","GetnPixelMapuiv","GetnPixelMapuiv","GetnPixelMapusv","GetnPixelMapusv","GetnPolygonStipple","GetnPolygonStipple","GetnSeparableFilter","GetnSeparableFilter","GetnTexImage","GetnTexImage","GetnUniformdv","GetnUniformdv","GetnUniformfv","GetnUniformfv","GetnUniformiv","GetnUniformiv","GetnUniformuiv","GetnUniformuiv","HALF_FLOAT","HIGH_FLOAT","HIGH_INT","Hint","Hint","IMAGE_1D","IMAGE_1D_ARRAY","IMAGE_2D","IMAGE_2D_ARRAY","IMAGE_2D_MULTISAMPLE","IMAGE_2D_MULTISAMPLE_ARRAY","IMAGE_2D_RECT","IMAGE_3D","IMAGE_BINDING_ACCESS","IMAGE_BINDING_FORMAT","IMAGE_BINDING_LAYER","IMAGE_BINDING_LAYERED","IMAGE_BINDING_LEVEL","IMAGE_BINDING_NAME","IMAGE_BUFFER","IMAGE_CLASS_10_10_10_2","IMAGE_CLASS_11_11_10","IMAGE_CLASS_1_X_16","IMAGE_CLASS_1_X_32","IMAGE_CLASS_1_X_8","IMAGE_CLASS_2_X_16","IMAGE_CLASS_2_X_32","IMAGE_CLASS_2_X_8","IMAGE_CLASS_4_X_16","IMAGE_CLASS_4_X_32","IMAGE_CLASS_4_X_8","IMAGE_COMPATIBILITY_CLASS","IMAGE_CUBE","IMAGE_CUBE_MAP_ARRAY","IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","IMAGE_FORMAT_COMPATIBILITY_TYPE","IMAGE_PIXEL_FORMAT","IMAGE_PIXEL_TYPE","IMAGE_TEXEL_SIZE","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","INCR","INCR_WRAP","INFO_LOG_LENGTH","INNOCENT_CONTEXT_RESET","INT","INTERLEAVED_ATTRIBS","INTERNALFORMAT_ALPHA_SIZE","INTERNALFORMAT_ALPHA_TYPE","INTERNALFORMAT_BLUE_SIZE","INTERNALFORMAT_BLUE_TYPE","INTERNALFORMAT_DEPTH_SIZE","INTERNALFORMAT_DEPTH_TYPE","INTERNALFORMAT_GREEN_SIZE","INTERNALFORMAT_GREEN_TYPE","INTERNALFORMAT_PREFERRED","INTERNALFORMAT_RED_SIZE","INTERNALFORMAT_RED_TYPE","INTERNALFORMAT_SHARED_SIZE","INTERNALFORMAT_STENCIL_SIZE","INTERNALFORMAT_STENCIL_TYPE","INTERNALFORMAT_SUPPORTED","INT_2_10_10_10_REV","INT_IMAGE_1D","INT_IMAGE_1D_ARRAY","INT_IMAGE_2D","INT_IMAGE_2D_ARRAY","INT_IMAGE_2D_MULTISAMPLE","INT_IMAGE_2D_MULTISAMPLE_ARRAY","INT_IMAGE_2D_RECT","INT_IMAGE_3D","INT_IMAGE_BUFFER","INT_IMAGE_CUBE","INT_IMAGE_CUBE_MAP_ARRAY","INT_SAMPLER_1D","INT_SAMPLER_1D_ARRAY","INT_SAMPLER_2D","INT_SAMPLER_2D_ARRAY","INT_SAMPLER_2D_MULTISAMPLE","INT_SAMPLER_2D_MULTISAMPLE_ARRAY","INT_SAMPLER_2D_RECT","INT_SAMPLER_3D","INT_SAMPLER_BUFFER","INT_SAMPLER_CUBE","INT_SAMPLER_CUBE_MAP_ARRAY","INT_VEC2","INT_VEC3","INT_VEC4","INVALID_ENUM","INVALID_FRAMEBUFFER_OPERATION","INVALID_INDEX","INVALID_OPERATION","INVALID_VALUE","INVERT","ISOLINES","IS_PER_PATCH","IS_ROW_MAJOR","InvalidateBufferData","InvalidateBufferData","InvalidateBufferSubData","InvalidateBufferSubData","InvalidateFramebuffer","InvalidateFramebuffer","InvalidateNamedFramebufferData","InvalidateNamedFramebufferData","InvalidateNamedFramebufferSubData","InvalidateNamedFramebufferSubData","InvalidateSubFramebuffer","InvalidateSubFramebuffer","InvalidateTexImage","InvalidateTexImage","InvalidateTexSubImage","InvalidateTexSubImage","IsBuffer","IsBuffer","IsEnabled","IsEnabled","IsEnabledi","IsEnabledi","IsFramebuffer","IsFramebuffer","IsProgram","IsProgram","IsProgramPipeline","IsProgramPipeline","IsQuery","IsQuery","IsRenderbuffer","IsRenderbuffer","IsSampler","IsSampler","IsShader","IsShader","IsSync","IsSync","IsTexture","IsTexture","IsTransformFeedback","IsTransformFeedback","IsVertexArray","IsVertexArray","KEEP","LAST_VERTEX_CONVENTION","LAYER_PROVOKING_VERTEX","LEFT","LEQUAL","LESS","LINE","LINEAR","LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINES","LINES_ADJACENCY","LINE_LOOP","LINE_SMOOTH","LINE_SMOOTH_HINT","LINE_STRIP","LINE_STRIP_ADJACENCY","LINE_WIDTH","LINE_WIDTH_GRANULARITY","LINE_WIDTH_RANGE","LINK_STATUS","LOCATION","LOCATION_COMPONENT","LOCATION_INDEX","LOGIC_OP_MODE","LOSE_CONTEXT_ON_RESET","LOWER_LEFT","LOW_FLOAT","LOW_INT","LineWidth","LineWidth","LinkProgram","LinkProgram","LogicOp","LogicOp","MAJOR_VERSION","MANUAL_GENERATE_MIPMAP","MAP_COHERENT_BIT","MAP_FLUSH_EXPLICIT_BIT","MAP_INVALIDATE_BUFFER_BIT","MAP_INVALIDATE_RANGE_BIT","MAP_PERSISTENT_BIT","MAP_READ_BIT","MAP_UNSYNCHRONIZED_BIT","MAP_WRITE_BIT","MATRIX_STRIDE","MAX","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","MAX_ATOMIC_COUNTER_BUFFER_SIZE","MAX_CLIP_DISTANCES","MAX_COLOR_ATTACHMENTS","MAX_COLOR_TEXTURE_SAMPLES","MAX_COMBINED_ATOMIC_COUNTERS","MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","MAX_COMBINED_CLIP_AND_CULL_DISTANCES","MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","MAX_COMBINED_DIMENSIONS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","MAX_COMBINED_IMAGE_UNIFORMS","MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","MAX_COMBINED_SHADER_OUTPUT_RESOURCES","MAX_COMBINED_SHADER_STORAGE_BLOCKS","MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_COMPUTE_ATOMIC_COUNTERS","MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","MAX_COMPUTE_IMAGE_UNIFORMS","MAX_COMPUTE_SHADER_STORAGE_BLOCKS","MAX_COMPUTE_SHARED_MEMORY_SIZE","MAX_COMPUTE_TEXTURE_IMAGE_UNITS","MAX_COMPUTE_UNIFORM_BLOCKS","MAX_COMPUTE_UNIFORM_COMPONENTS","MAX_COMPUTE_WORK_GROUP_COUNT","MAX_COMPUTE_WORK_GROUP_INVOCATIONS","MAX_COMPUTE_WORK_GROUP_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_CULL_DISTANCES","MAX_DEBUG_GROUP_STACK_DEPTH","MAX_DEBUG_LOGGED_MESSAGES","MAX_DEBUG_MESSAGE_LENGTH","MAX_DEPTH","MAX_DEPTH_TEXTURE_SAMPLES","MAX_DRAW_BUFFERS","MAX_DUAL_SOURCE_DRAW_BUFFERS","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_ELEMENT_INDEX","MAX_FRAGMENT_ATOMIC_COUNTERS","MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","MAX_FRAGMENT_IMAGE_UNIFORMS","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_INTERPOLATION_OFFSET","MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_FRAMEBUFFER_HEIGHT","MAX_FRAMEBUFFER_LAYERS","MAX_FRAMEBUFFER_SAMPLES","MAX_FRAMEBUFFER_WIDTH","MAX_GEOMETRY_ATOMIC_COUNTERS","MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","MAX_GEOMETRY_IMAGE_UNIFORMS","MAX_GEOMETRY_INPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_COMPONENTS","MAX_GEOMETRY_OUTPUT_VERTICES","MAX_GEOMETRY_SHADER_INVOCATIONS","MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","MAX_GEOMETRY_UNIFORM_BLOCKS","MAX_GEOMETRY_UNIFORM_COMPONENTS","MAX_HEIGHT","MAX_IMAGE_SAMPLES","MAX_IMAGE_UNITS","MAX_INTEGER_SAMPLES","MAX_LABEL_LENGTH","MAX_LAYERS","MAX_NAME_LENGTH","MAX_NUM_ACTIVE_VARIABLES","MAX_NUM_COMPATIBLE_SUBROUTINES","MAX_PATCH_VERTICES","MAX_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXTURE_GATHER_OFFSET","MAX_RECTANGLE_TEXTURE_SIZE","MAX_RENDERBUFFER_SIZE","MAX_SAMPLES","MAX_SAMPLE_MASK_WORDS","MAX_SERVER_WAIT_TIMEOUT","MAX_SHADER_STORAGE_BLOCK_SIZE","MAX_SHADER_STORAGE_BUFFER_BINDINGS","MAX_SUBROUTINES","MAX_SUBROUTINE_UNIFORM_LOCATIONS","MAX_TESS_CONTROL_ATOMIC_COUNTERS","MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","MAX_TESS_CONTROL_IMAGE_UNIFORMS","MAX_TESS_CONTROL_INPUT_COMPONENTS","MAX_TESS_CONTROL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","MAX_TESS_CONTROL_UNIFORM_BLOCKS","MAX_TESS_CONTROL_UNIFORM_COMPONENTS","MAX_TESS_EVALUATION_ATOMIC_COUNTERS","MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","MAX_TESS_EVALUATION_IMAGE_UNIFORMS","MAX_TESS_EVALUATION_INPUT_COMPONENTS","MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","MAX_TESS_EVALUATION_UNIFORM_BLOCKS","MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","MAX_TESS_GEN_LEVEL","MAX_TESS_PATCH_COMPONENTS","MAX_TEXTURE_BUFFER_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_LOD_BIAS","MAX_TEXTURE_SIZE","MAX_TRANSFORM_FEEDBACK_BUFFERS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_UNIFORM_LOCATIONS","MAX_VARYING_COMPONENTS","MAX_VARYING_FLOATS","MAX_VARYING_VECTORS","MAX_VERTEX_ATOMIC_COUNTERS","MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_ATTRIB_BINDINGS","MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","MAX_VERTEX_ATTRIB_STRIDE","MAX_VERTEX_IMAGE_UNIFORMS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_SHADER_STORAGE_BLOCKS","MAX_VERTEX_STREAMS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VIEWPORTS","MAX_VIEWPORT_DIMS","MAX_WIDTH","MEDIUM_FLOAT","MEDIUM_INT","MIN","MINOR_VERSION","MIN_FRAGMENT_INTERPOLATION_OFFSET","MIN_MAP_BUFFER_ALIGNMENT","MIN_PROGRAM_TEXEL_OFFSET","MIN_PROGRAM_TEXTURE_GATHER_OFFSET","MIN_SAMPLE_SHADING_VALUE","MIPMAP","MIRRORED_REPEAT","MIRROR_CLAMP_TO_EDGE","MULTISAMPLE","MapBuffer","MapBuffer","MapBufferRange","MapBufferRange","MapNamedBuffer","MapNamedBuffer","MapNamedBufferRange","MapNamedBufferRange","MemoryBarrier","MemoryBarrier","MemoryBarrierByRegion","MemoryBarrierByRegion","MinSampleShading","MinSampleShading","MultiDrawArrays","MultiDrawArrays","MultiDrawArraysIndirect","MultiDrawArraysIndirect","MultiDrawElements","MultiDrawElements","MultiDrawElementsBaseVertex","MultiDrawElementsBaseVertex","MultiDrawElementsIndirect","MultiDrawElementsIndirect","MultiTexCoordP1ui","MultiTexCoordP1ui","MultiTexCoordP1uiv","MultiTexCoordP1uiv","MultiTexCoordP2ui","MultiTexCoordP2ui","MultiTexCoordP2uiv","MultiTexCoordP2uiv","MultiTexCoordP3ui","MultiTexCoordP3ui","MultiTexCoordP3uiv","MultiTexCoordP3uiv","MultiTexCoordP4ui","MultiTexCoordP4ui","MultiTexCoordP4uiv","MultiTexCoordP4uiv","NAME_LENGTH","NAND","NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_NEAREST","NEGATIVE_ONE_TO_ONE","NEVER","NICEST","NONE","NOOP","NOR","NOTEQUAL","NO_ERROR","NO_RESET_NOTIFICATION","NUM_ACTIVE_VARIABLES","NUM_COMPATIBLE_SUBROUTINES","NUM_COMPRESSED_TEXTURE_FORMATS","NUM_EXTENSIONS","NUM_PROGRAM_BINARY_FORMATS","NUM_SAMPLE_COUNTS","NUM_SHADER_BINARY_FORMATS","NUM_SHADING_LANGUAGE_VERSIONS","NamedBufferData","NamedBufferData","NamedBufferStorage","NamedBufferStorage","NamedBufferSubData","NamedBufferSubData","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffer","NamedFramebufferDrawBuffers","NamedFramebufferDrawBuffers","NamedFramebufferParameteri","NamedFramebufferParameteri","NamedFramebufferReadBuffer","NamedFramebufferReadBuffer","NamedFramebufferRenderbuffer","NamedFramebufferRenderbuffer","NamedFramebufferTexture","NamedFramebufferTexture","NamedFramebufferTextureLayer","NamedFramebufferTextureLayer","NamedRenderbufferStorage","NamedRenderbufferStorage","NamedRenderbufferStorageMultisample","NamedRenderbufferStorageMultisample","NormalP3ui","NormalP3ui","NormalP3uiv","NormalP3uiv","OBJECT_TYPE","OFFSET","ONE","ONE_MINUS_CONSTANT_ALPHA","ONE_MINUS_CONSTANT_COLOR","ONE_MINUS_DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_SRC1_ALPHA","ONE_MINUS_SRC1_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_SRC_COLOR","OR","OR_INVERTED","OR_REVERSE","OUT_OF_MEMORY","ObjectLabel","ObjectLabel","ObjectPtrLabel","ObjectPtrLabel","PACK_ALIGNMENT","PACK_COMPRESSED_BLOCK_DEPTH","PACK_COMPRESSED_BLOCK_HEIGHT","PACK_COMPRESSED_BLOCK_SIZE","PACK_COMPRESSED_BLOCK_WIDTH","PACK_IMAGE_HEIGHT","PACK_LSB_FIRST","PACK_ROW_LENGTH","PACK_SKIP_IMAGES","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","PACK_SWAP_BYTES","PATCHES","PATCH_DEFAULT_INNER_LEVEL","PATCH_DEFAULT_OUTER_LEVEL","PATCH_VERTICES","PIXEL_BUFFER_BARRIER_BIT","PIXEL_PACK_BUFFER","PIXEL_PACK_BUFFER_BINDING","PIXEL_UNPACK_BUFFER","PIXEL_UNPACK_BUFFER_BINDING","POINT","POINTS","POINT_FADE_THRESHOLD_SIZE","POINT_SIZE","POINT_SIZE_GRANULARITY","POINT_SIZE_RANGE","POINT_SPRITE_COORD_ORIGIN","POLYGON_MODE","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_FILL","POLYGON_OFFSET_LINE","POLYGON_OFFSET_POINT","POLYGON_OFFSET_UNITS","POLYGON_SMOOTH","POLYGON_SMOOTH_HINT","PRIMITIVES_GENERATED","PRIMITIVE_RESTART","PRIMITIVE_RESTART_FIXED_INDEX","PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","PRIMITIVE_RESTART_INDEX","PROGRAM","PROGRAM_BINARY_FORMATS","PROGRAM_BINARY_LENGTH","PROGRAM_BINARY_RETRIEVABLE_HINT","PROGRAM_INPUT","PROGRAM_OUTPUT","PROGRAM_PIPELINE","PROGRAM_PIPELINE_BINDING","PROGRAM_POINT_SIZE","PROGRAM_SEPARABLE","PROVOKING_VERTEX","PROXY_TEXTURE_1D","PROXY_TEXTURE_1D_ARRAY","PROXY_TEXTURE_2D","PROXY_TEXTURE_2D_ARRAY","PROXY_TEXTURE_2D_MULTISAMPLE","PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","PROXY_TEXTURE_3D","PROXY_TEXTURE_CUBE_MAP","PROXY_TEXTURE_CUBE_MAP_ARRAY","PROXY_TEXTURE_RECTANGLE","PatchParameterfv","PatchParameterfv","PatchParameteri","PatchParameteri","PauseTransformFeedback","PauseTransformFeedback","PixelStoref","PixelStoref","PixelStorei","PixelStorei","PointParameterf","PointParameterf","PointParameterfv","PointParameterfv","PointParameteri","PointParameteri","PointParameteriv","PointParameteriv","PointSize","PointSize","PolygonMode","PolygonMode","PolygonOffset","PolygonOffset","PopDebugGroup","PopDebugGroup","PrimitiveRestartIndex","PrimitiveRestartIndex","ProgramBinary","ProgramBinary","ProgramParameteri","ProgramParameteri","ProgramUniform1d","ProgramUniform1d","ProgramUniform1dv","ProgramUniform1dv","ProgramUniform1f","ProgramUniform1f","ProgramUniform1fv","ProgramUniform1fv","ProgramUniform1i","ProgramUniform1i","ProgramUniform1iv","ProgramUniform1iv","ProgramUniform1ui","ProgramUniform1ui","ProgramUniform1uiv","ProgramUniform1uiv","ProgramUniform2d","ProgramUniform2d","ProgramUniform2dv","ProgramUniform2dv","ProgramUniform2f","ProgramUniform2f","ProgramUniform2fv","ProgramUniform2fv","ProgramUniform2i","ProgramUniform2i","ProgramUniform2iv","ProgramUniform2iv","ProgramUniform2ui","ProgramUniform2ui","ProgramUniform2uiv","ProgramUniform2uiv","ProgramUniform3d","ProgramUniform3d","ProgramUniform3dv","ProgramUniform3dv","ProgramUniform3f","ProgramUniform3f","ProgramUniform3fv","ProgramUniform3fv","ProgramUniform3i","ProgramUniform3i","ProgramUniform3iv","ProgramUniform3iv","ProgramUniform3ui","ProgramUniform3ui","ProgramUniform3uiv","ProgramUniform3uiv","ProgramUniform4d","ProgramUniform4d","ProgramUniform4dv","ProgramUniform4dv","ProgramUniform4f","ProgramUniform4f","ProgramUniform4fv","ProgramUniform4fv","ProgramUniform4i","ProgramUniform4i","ProgramUniform4iv","ProgramUniform4iv","ProgramUniform4ui","ProgramUniform4ui","ProgramUniform4uiv","ProgramUniform4uiv","ProgramUniformMatrix2dv","ProgramUniformMatrix2dv","ProgramUniformMatrix2fv","ProgramUniformMatrix2fv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3dv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x3fv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4dv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix2x4fv","ProgramUniformMatrix3dv","ProgramUniformMatrix3dv","ProgramUniformMatrix3fv","ProgramUniformMatrix3fv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2dv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x2fv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4dv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix3x4fv","ProgramUniformMatrix4dv","ProgramUniformMatrix4dv","ProgramUniformMatrix4fv","ProgramUniformMatrix4fv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2dv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x2fv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3dv","ProgramUniformMatrix4x3fv","ProgramUniformMatrix4x3fv","ProvokingVertex","ProvokingVertex","PushDebugGroup","PushDebugGroup","QUADS","QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","QUERY","QUERY_BUFFER","QUERY_BUFFER_BARRIER_BIT","QUERY_BUFFER_BINDING","QUERY_BY_REGION_NO_WAIT","QUERY_BY_REGION_NO_WAIT_INVERTED","QUERY_BY_REGION_WAIT","QUERY_BY_REGION_WAIT_INVERTED","QUERY_COUNTER_BITS","QUERY_NO_WAIT","QUERY_NO_WAIT_INVERTED","QUERY_RESULT","QUERY_RESULT_AVAILABLE","QUERY_RESULT_NO_WAIT","QUERY_TARGET","QUERY_WAIT","QUERY_WAIT_INVERTED","QueryCounter","QueryCounter","R11F_G11F_B10F","R16","R16F","R16I","R16UI","R16_SNORM","R32F","R32I","R32UI","R3_G3_B2","R8","R8I","R8UI","R8_SNORM","RASTERIZER_DISCARD","READ_BUFFER","READ_FRAMEBUFFER","READ_FRAMEBUFFER_BINDING","READ_ONLY","READ_PIXELS","READ_PIXELS_FORMAT","READ_PIXELS_TYPE","READ_WRITE","RED","RED_INTEGER","REFERENCED_BY_COMPUTE_SHADER","REFERENCED_BY_FRAGMENT_SHADER","REFERENCED_BY_GEOMETRY_SHADER","REFERENCED_BY_TESS_CONTROL_SHADER","REFERENCED_BY_TESS_EVALUATION_SHADER","REFERENCED_BY_VERTEX_SHADER","RENDERBUFFER","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_BINDING","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_SAMPLES","RENDERBUFFER_STENCIL_SIZE","RENDERBUFFER_WIDTH","RENDERER","REPEAT","REPLACE","RESET_NOTIFICATION_STRATEGY","RG","RG16","RG16F","RG16I","RG16UI","RG16_SNORM","RG32F","RG32I","RG32UI","RG8","RG8I","RG8UI","RG8_SNORM","RGB","RGB10","RGB10_A2","RGB10_A2UI","RGB12","RGB16","RGB16F","RGB16I","RGB16UI","RGB16_SNORM","RGB32F","RGB32I","RGB32UI","RGB4","RGB5","RGB565","RGB5_A1","RGB8","RGB8I","RGB8UI","RGB8_SNORM","RGB9_E5","RGBA","RGBA12","RGBA16","RGBA16F","RGBA16I","RGBA16UI","RGBA16_SNORM","RGBA2","RGBA32F","RGBA32I","RGBA32UI","RGBA4","RGBA8","RGBA8I","RGBA8UI","RGBA8_SNORM","RGBA_INTEGER","RGB_INTEGER","RG_INTEGER","RIGHT","ReadBuffer","ReadBuffer","ReadPixels","ReadPixels","ReadnPixels","ReadnPixels","ReleaseShaderCompiler","ReleaseShaderCompiler","RenderbufferStorage","RenderbufferStorage","RenderbufferStorageMultisample","RenderbufferStorageMultisample","ResumeTransformFeedback","ResumeTransformFeedback","SAMPLER","SAMPLER_1D","SAMPLER_1D_ARRAY","SAMPLER_1D_ARRAY_SHADOW","SAMPLER_1D_SHADOW","SAMPLER_2D","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_2D_MULTISAMPLE","SAMPLER_2D_MULTISAMPLE_ARRAY","SAMPLER_2D_RECT","SAMPLER_2D_RECT_SHADOW","SAMPLER_2D_SHADOW","SAMPLER_3D","SAMPLER_BINDING","SAMPLER_BUFFER","SAMPLER_CUBE","SAMPLER_CUBE_MAP_ARRAY","SAMPLER_CUBE_MAP_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","SAMPLES","SAMPLES_PASSED","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_ALPHA_TO_ONE","SAMPLE_BUFFERS","SAMPLE_COVERAGE","SAMPLE_COVERAGE_INVERT","SAMPLE_COVERAGE_VALUE","SAMPLE_MASK","SAMPLE_MASK_VALUE","SAMPLE_POSITION","SAMPLE_SHADING","SCISSOR_BOX","SCISSOR_TEST","SEPARATE_ATTRIBS","SET","SHADER","SHADER_BINARY_FORMATS","SHADER_COMPILER","SHADER_IMAGE_ACCESS_BARRIER_BIT","SHADER_IMAGE_ATOMIC","SHADER_IMAGE_LOAD","SHADER_IMAGE_STORE","SHADER_SOURCE_LENGTH","SHADER_STORAGE_BARRIER_BIT","SHADER_STORAGE_BLOCK","SHADER_STORAGE_BUFFER","SHADER_STORAGE_BUFFER_BINDING","SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","SHADER_STORAGE_BUFFER_SIZE","SHADER_STORAGE_BUFFER_START","SHADER_TYPE","SHADING_LANGUAGE_VERSION","SHORT","SIGNALED","SIGNED_NORMALIZED","SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","SMOOTH_LINE_WIDTH_GRANULARITY","SMOOTH_LINE_WIDTH_RANGE","SMOOTH_POINT_SIZE_GRANULARITY","SMOOTH_POINT_SIZE_RANGE","SRC1_ALPHA","SRC1_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","SRC_COLOR","SRGB","SRGB8","SRGB8_ALPHA8","SRGB_ALPHA","SRGB_READ","SRGB_WRITE","STACK_OVERFLOW","STACK_UNDERFLOW","STATIC_COPY","STATIC_DRAW","STATIC_READ","STENCIL","STENCIL_ATTACHMENT","STENCIL_BACK_FAIL","STENCIL_BACK_FUNC","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","STENCIL_BUFFER_BIT","STENCIL_CLEAR_VALUE","STENCIL_COMPONENTS","STENCIL_FAIL","STENCIL_FUNC","STENCIL_INDEX","STENCIL_INDEX1","STENCIL_INDEX16","STENCIL_INDEX4","STENCIL_INDEX8","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_RENDERABLE","STENCIL_TEST","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STEREO","STREAM_COPY","STREAM_DRAW","STREAM_READ","SUBPIXEL_BITS","SYNC_CONDITION","SYNC_FENCE","SYNC_FLAGS","SYNC_FLUSH_COMMANDS_BIT","SYNC_GPU_COMMANDS_COMPLETE","SYNC_STATUS","SampleCoverage","SampleCoverage","SampleMaski","SampleMaski","SamplerParameterIiv","SamplerParameterIiv","SamplerParameterIuiv","SamplerParameterIuiv","SamplerParameterf","SamplerParameterf","SamplerParameterfv","SamplerParameterfv","SamplerParameteri","SamplerParameteri","SamplerParameteriv","SamplerParameteriv","Scissor","Scissor","ScissorArrayv","ScissorArrayv","ScissorIndexed","ScissorIndexed","ScissorIndexedv","ScissorIndexedv","SecondaryColorP3ui","SecondaryColorP3ui","SecondaryColorP3uiv","SecondaryColorP3uiv","ShaderBinary","ShaderBinary","ShaderSource","ShaderSource","ShaderStorageBlockBinding","ShaderStorageBlockBinding","StencilFunc","StencilFunc","StencilFuncSeparate","StencilFuncSeparate","StencilMask","StencilMask","StencilMaskSeparate","StencilMaskSeparate","StencilOp","StencilOp","StencilOpSeparate","StencilOpSeparate","TESS_CONTROL_OUTPUT_VERTICES","TESS_CONTROL_SHADER","TESS_CONTROL_SHADER_BIT","TESS_CONTROL_SUBROUTINE","TESS_CONTROL_SUBROUTINE_UNIFORM","TESS_CONTROL_TEXTURE","TESS_EVALUATION_SHADER","TESS_EVALUATION_SHADER_BIT","TESS_EVALUATION_SUBROUTINE","TESS_EVALUATION_SUBROUTINE_UNIFORM","TESS_EVALUATION_TEXTURE","TESS_GEN_MODE","TESS_GEN_POINT_MODE","TESS_GEN_SPACING","TESS_GEN_VERTEX_ORDER","TEXTURE","TEXTURE0","TEXTURE1","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE2","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE3","TEXTURE30","TEXTURE31","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE_1D","TEXTURE_1D_ARRAY","TEXTURE_2D","TEXTURE_2D_ARRAY","TEXTURE_2D_MULTISAMPLE","TEXTURE_2D_MULTISAMPLE_ARRAY","TEXTURE_3D","TEXTURE_ALPHA_SIZE","TEXTURE_ALPHA_TYPE","TEXTURE_BASE_LEVEL","TEXTURE_BINDING_1D","TEXTURE_BINDING_1D_ARRAY","TEXTURE_BINDING_2D","TEXTURE_BINDING_2D_ARRAY","TEXTURE_BINDING_2D_MULTISAMPLE","TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","TEXTURE_BINDING_3D","TEXTURE_BINDING_BUFFER","TEXTURE_BINDING_CUBE_MAP","TEXTURE_BINDING_CUBE_MAP_ARRAY","TEXTURE_BINDING_RECTANGLE","TEXTURE_BLUE_SIZE","TEXTURE_BLUE_TYPE","TEXTURE_BORDER_COLOR","TEXTURE_BUFFER","TEXTURE_BUFFER_BINDING","TEXTURE_BUFFER_DATA_STORE_BINDING","TEXTURE_BUFFER_OFFSET","TEXTURE_BUFFER_OFFSET_ALIGNMENT","TEXTURE_BUFFER_SIZE","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","TEXTURE_COMPRESSED","TEXTURE_COMPRESSED_BLOCK_HEIGHT","TEXTURE_COMPRESSED_BLOCK_SIZE","TEXTURE_COMPRESSED_BLOCK_WIDTH","TEXTURE_COMPRESSED_IMAGE_SIZE","TEXTURE_COMPRESSION_HINT","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_ARRAY","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_SEAMLESS","TEXTURE_DEPTH","TEXTURE_DEPTH_SIZE","TEXTURE_DEPTH_TYPE","TEXTURE_FETCH_BARRIER_BIT","TEXTURE_FIXED_SAMPLE_LOCATIONS","TEXTURE_GATHER","TEXTURE_GATHER_SHADOW","TEXTURE_GREEN_SIZE","TEXTURE_GREEN_TYPE","TEXTURE_HEIGHT","TEXTURE_IMAGE_FORMAT","TEXTURE_IMAGE_TYPE","TEXTURE_IMMUTABLE_FORMAT","TEXTURE_IMMUTABLE_LEVELS","TEXTURE_INTERNAL_FORMAT","TEXTURE_LOD_BIAS","TEXTURE_MAG_FILTER","TEXTURE_MAX_LEVEL","TEXTURE_MAX_LOD","TEXTURE_MIN_FILTER","TEXTURE_MIN_LOD","TEXTURE_RECTANGLE","TEXTURE_RED_SIZE","TEXTURE_RED_TYPE","TEXTURE_SAMPLES","TEXTURE_SHADOW","TEXTURE_SHARED_SIZE","TEXTURE_STENCIL_SIZE","TEXTURE_SWIZZLE_A","TEXTURE_SWIZZLE_B","TEXTURE_SWIZZLE_G","TEXTURE_SWIZZLE_R","TEXTURE_SWIZZLE_RGBA","TEXTURE_TARGET","TEXTURE_UPDATE_BARRIER_BIT","TEXTURE_VIEW","TEXTURE_VIEW_MIN_LAYER","TEXTURE_VIEW_MIN_LEVEL","TEXTURE_VIEW_NUM_LAYERS","TEXTURE_VIEW_NUM_LEVELS","TEXTURE_WIDTH","TEXTURE_WRAP_R","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TIMEOUT_EXPIRED","TIMEOUT_IGNORED","TIMESTAMP","TIME_ELAPSED","TOP_LEVEL_ARRAY_SIZE","TOP_LEVEL_ARRAY_STRIDE","TRANSFORM_FEEDBACK","TRANSFORM_FEEDBACK_ACTIVE","TRANSFORM_FEEDBACK_BARRIER_BIT","TRANSFORM_FEEDBACK_BINDING","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK_BUFFER_ACTIVE","TRANSFORM_FEEDBACK_BUFFER_BINDING","TRANSFORM_FEEDBACK_BUFFER_INDEX","TRANSFORM_FEEDBACK_BUFFER_MODE","TRANSFORM_FEEDBACK_BUFFER_PAUSED","TRANSFORM_FEEDBACK_BUFFER_SIZE","TRANSFORM_FEEDBACK_BUFFER_START","TRANSFORM_FEEDBACK_BUFFER_STRIDE","TRANSFORM_FEEDBACK_PAUSED","TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","TRANSFORM_FEEDBACK_VARYING","TRANSFORM_FEEDBACK_VARYINGS","TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","TRIANGLES","TRIANGLES_ADJACENCY","TRIANGLE_FAN","TRIANGLE_STRIP","TRIANGLE_STRIP_ADJACENCY","TRUE","TYPE","TexBuffer","TexBuffer","TexBufferRange","TexBufferRange","TexCoordP1ui","TexCoordP1ui","TexCoordP1uiv","TexCoordP1uiv","TexCoordP2ui","TexCoordP2ui","TexCoordP2uiv","TexCoordP2uiv","TexCoordP3ui","TexCoordP3ui","TexCoordP3uiv","TexCoordP3uiv","TexCoordP4ui","TexCoordP4ui","TexCoordP4uiv","TexCoordP4uiv","TexImage1D","TexImage1D","TexImage2D","TexImage2D","TexImage2DMultisample","TexImage2DMultisample","TexImage3D","TexImage3D","TexImage3DMultisample","TexImage3DMultisample","TexParameterIiv","TexParameterIiv","TexParameterIuiv","TexParameterIuiv","TexParameterf","TexParameterf","TexParameterfv","TexParameterfv","TexParameteri","TexParameteri","TexParameteriv","TexParameteriv","TexStorage1D","TexStorage1D","TexStorage2D","TexStorage2D","TexStorage2DMultisample","TexStorage2DMultisample","TexStorage3D","TexStorage3D","TexStorage3DMultisample","TexStorage3DMultisample","TexSubImage1D","TexSubImage1D","TexSubImage2D","TexSubImage2D","TexSubImage3D","TexSubImage3D","TextureBarrier","TextureBarrier","TextureBuffer","TextureBuffer","TextureBufferRange","TextureBufferRange","TextureParameterIiv","TextureParameterIiv","TextureParameterIuiv","TextureParameterIuiv","TextureParameterf","TextureParameterf","TextureParameterfv","TextureParameterfv","TextureParameteri","TextureParameteri","TextureParameteriv","TextureParameteriv","TextureStorage1D","TextureStorage1D","TextureStorage2D","TextureStorage2D","TextureStorage2DMultisample","TextureStorage2DMultisample","TextureStorage3D","TextureStorage3D","TextureStorage3DMultisample","TextureStorage3DMultisample","TextureSubImage1D","TextureSubImage1D","TextureSubImage2D","TextureSubImage2D","TextureSubImage3D","TextureSubImage3D","TextureView","TextureView","TransformFeedbackBufferBase","TransformFeedbackBufferBase","TransformFeedbackBufferRange","TransformFeedbackBufferRange","TransformFeedbackVaryings","TransformFeedbackVaryings","UNDEFINED_VERTEX","UNIFORM","UNIFORM_ARRAY_STRIDE","UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","UNIFORM_BARRIER_BIT","UNIFORM_BLOCK","UNIFORM_BLOCK_ACTIVE_UNIFORMS","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","UNIFORM_BLOCK_BINDING","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_INDEX","UNIFORM_BLOCK_NAME_LENGTH","UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BUFFER","UNIFORM_BUFFER_BINDING","UNIFORM_BUFFER_OFFSET_ALIGNMENT","UNIFORM_BUFFER_SIZE","UNIFORM_BUFFER_START","UNIFORM_IS_ROW_MAJOR","UNIFORM_MATRIX_STRIDE","UNIFORM_NAME_LENGTH","UNIFORM_OFFSET","UNIFORM_SIZE","UNIFORM_TYPE","UNKNOWN_CONTEXT_RESET","UNPACK_ALIGNMENT","UNPACK_COMPRESSED_BLOCK_DEPTH","UNPACK_COMPRESSED_BLOCK_HEIGHT","UNPACK_COMPRESSED_BLOCK_SIZE","UNPACK_COMPRESSED_BLOCK_WIDTH","UNPACK_IMAGE_HEIGHT","UNPACK_LSB_FIRST","UNPACK_ROW_LENGTH","UNPACK_SKIP_IMAGES","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SWAP_BYTES","UNSIGNALED","UNSIGNED_BYTE","UNSIGNED_BYTE_2_3_3_REV","UNSIGNED_BYTE_3_3_2","UNSIGNED_INT","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_10_10_10_2","UNSIGNED_INT_24_8","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_5_9_9_9_REV","UNSIGNED_INT_8_8_8_8","UNSIGNED_INT_8_8_8_8_REV","UNSIGNED_INT_ATOMIC_COUNTER","UNSIGNED_INT_IMAGE_1D","UNSIGNED_INT_IMAGE_1D_ARRAY","UNSIGNED_INT_IMAGE_2D","UNSIGNED_INT_IMAGE_2D_ARRAY","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_IMAGE_2D_RECT","UNSIGNED_INT_IMAGE_3D","UNSIGNED_INT_IMAGE_BUFFER","UNSIGNED_INT_IMAGE_CUBE","UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","UNSIGNED_INT_SAMPLER_1D","UNSIGNED_INT_SAMPLER_1D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","UNSIGNED_INT_SAMPLER_2D_RECT","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_BUFFER","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","UNSIGNED_NORMALIZED","UNSIGNED_SHORT","UNSIGNED_SHORT_1_5_5_5_REV","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_4_4_4_4_REV","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","UNSIGNED_SHORT_5_6_5_REV","UPPER_LEFT","Uniform1d","Uniform1d","Uniform1dv","Uniform1dv","Uniform1f","Uniform1f","Uniform1fv","Uniform1fv","Uniform1i","Uniform1i","Uniform1iv","Uniform1iv","Uniform1ui","Uniform1ui","Uniform1uiv","Uniform1uiv","Uniform2d","Uniform2d","Uniform2dv","Uniform2dv","Uniform2f","Uniform2f","Uniform2fv","Uniform2fv","Uniform2i","Uniform2i","Uniform2iv","Uniform2iv","Uniform2ui","Uniform2ui","Uniform2uiv","Uniform2uiv","Uniform3d","Uniform3d","Uniform3dv","Uniform3dv","Uniform3f","Uniform3f","Uniform3fv","Uniform3fv","Uniform3i","Uniform3i","Uniform3iv","Uniform3iv","Uniform3ui","Uniform3ui","Uniform3uiv","Uniform3uiv","Uniform4d","Uniform4d","Uniform4dv","Uniform4dv","Uniform4f","Uniform4f","Uniform4fv","Uniform4fv","Uniform4i","Uniform4i","Uniform4iv","Uniform4iv","Uniform4ui","Uniform4ui","Uniform4uiv","Uniform4uiv","UniformBlockBinding","UniformBlockBinding","UniformMatrix2dv","UniformMatrix2dv","UniformMatrix2fv","UniformMatrix2fv","UniformMatrix2x3dv","UniformMatrix2x3dv","UniformMatrix2x3fv","UniformMatrix2x3fv","UniformMatrix2x4dv","UniformMatrix2x4dv","UniformMatrix2x4fv","UniformMatrix2x4fv","UniformMatrix3dv","UniformMatrix3dv","UniformMatrix3fv","UniformMatrix3fv","UniformMatrix3x2dv","UniformMatrix3x2dv","UniformMatrix3x2fv","UniformMatrix3x2fv","UniformMatrix3x4dv","UniformMatrix3x4dv","UniformMatrix3x4fv","UniformMatrix3x4fv","UniformMatrix4dv","UniformMatrix4dv","UniformMatrix4fv","UniformMatrix4fv","UniformMatrix4x2dv","UniformMatrix4x2dv","UniformMatrix4x2fv","UniformMatrix4x2fv","UniformMatrix4x3dv","UniformMatrix4x3dv","UniformMatrix4x3fv","UniformMatrix4x3fv","UniformSubroutinesuiv","UniformSubroutinesuiv","UnmapBuffer","UnmapBuffer","UnmapNamedBuffer","UnmapNamedBuffer","UseProgram","UseProgram","UseProgramStages","UseProgramStages","VALIDATE_STATUS","VENDOR","VERSION","VERTEX_ARRAY","VERTEX_ARRAY_BINDING","VERTEX_ATTRIB_ARRAY_BARRIER_BIT","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_DIVISOR","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_INTEGER","VERTEX_ATTRIB_ARRAY_LONG","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_BINDING","VERTEX_ATTRIB_RELATIVE_OFFSET","VERTEX_BINDING_BUFFER","VERTEX_BINDING_DIVISOR","VERTEX_BINDING_OFFSET","VERTEX_BINDING_STRIDE","VERTEX_PROGRAM_POINT_SIZE","VERTEX_SHADER","VERTEX_SHADER_BIT","VERTEX_SUBROUTINE","VERTEX_SUBROUTINE_UNIFORM","VERTEX_TEXTURE","VIEWPORT","VIEWPORT_BOUNDS_RANGE","VIEWPORT_INDEX_PROVOKING_VERTEX","VIEWPORT_SUBPIXEL_BITS","VIEW_CLASS_128_BITS","VIEW_CLASS_16_BITS","VIEW_CLASS_24_BITS","VIEW_CLASS_32_BITS","VIEW_CLASS_48_BITS","VIEW_CLASS_64_BITS","VIEW_CLASS_8_BITS","VIEW_CLASS_96_BITS","VIEW_CLASS_BPTC_FLOAT","VIEW_CLASS_BPTC_UNORM","VIEW_CLASS_RGTC1_RED","VIEW_CLASS_RGTC2_RG","VIEW_CLASS_S3TC_DXT1_RGB","VIEW_CLASS_S3TC_DXT1_RGBA","VIEW_CLASS_S3TC_DXT3_RGBA","VIEW_CLASS_S3TC_DXT5_RGBA","VIEW_COMPATIBILITY_CLASS","ValidateProgram","ValidateProgram","ValidateProgramPipeline","ValidateProgramPipeline","VertexArrayAttribBinding","VertexArrayAttribBinding","VertexArrayAttribFormat","VertexArrayAttribFormat","VertexArrayAttribIFormat","VertexArrayAttribIFormat","VertexArrayAttribLFormat","VertexArrayAttribLFormat","VertexArrayBindingDivisor","VertexArrayBindingDivisor","VertexArrayElementBuffer","VertexArrayElementBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffer","VertexArrayVertexBuffers","VertexArrayVertexBuffers","VertexAttrib1d","VertexAttrib1d","VertexAttrib1dv","VertexAttrib1dv","VertexAttrib1f","VertexAttrib1f","VertexAttrib1fv","VertexAttrib1fv","VertexAttrib1s","VertexAttrib1s","VertexAttrib1sv","VertexAttrib1sv","VertexAttrib2d","VertexAttrib2d","VertexAttrib2dv","VertexAttrib2dv","VertexAttrib2f","VertexAttrib2f","VertexAttrib2fv","VertexAttrib2fv","VertexAttrib2s","VertexAttrib2s","VertexAttrib2sv","VertexAttrib2sv","VertexAttrib3d","VertexAttrib3d","VertexAttrib3dv","VertexAttrib3dv","VertexAttrib3f","VertexAttrib3f","VertexAttrib3fv","VertexAttrib3fv","VertexAttrib3s","VertexAttrib3s","VertexAttrib3sv","VertexAttrib3sv","VertexAttrib4Nbv","VertexAttrib4Nbv","VertexAttrib4Niv","VertexAttrib4Niv","VertexAttrib4Nsv","VertexAttrib4Nsv","VertexAttrib4Nub","VertexAttrib4Nub","VertexAttrib4Nubv","VertexAttrib4Nubv","VertexAttrib4Nuiv","VertexAttrib4Nuiv","VertexAttrib4Nusv","VertexAttrib4Nusv","VertexAttrib4bv","VertexAttrib4bv","VertexAttrib4d","VertexAttrib4d","VertexAttrib4dv","VertexAttrib4dv","VertexAttrib4f","VertexAttrib4f","VertexAttrib4fv","VertexAttrib4fv","VertexAttrib4iv","VertexAttrib4iv","VertexAttrib4s","VertexAttrib4s","VertexAttrib4sv","VertexAttrib4sv","VertexAttrib4ubv","VertexAttrib4ubv","VertexAttrib4uiv","VertexAttrib4uiv","VertexAttrib4usv","VertexAttrib4usv","VertexAttribBinding","VertexAttribBinding","VertexAttribDivisor","VertexAttribDivisor","VertexAttribFormat","VertexAttribFormat","VertexAttribI1i","VertexAttribI1i","VertexAttribI1iv","VertexAttribI1iv","VertexAttribI1ui","VertexAttribI1ui","VertexAttribI1uiv","VertexAttribI1uiv","VertexAttribI2i","VertexAttribI2i","VertexAttribI2iv","VertexAttribI2iv","VertexAttribI2ui","VertexAttribI2ui","VertexAttribI2uiv","VertexAttribI2uiv","VertexAttribI3i","VertexAttribI3i","VertexAttribI3iv","VertexAttribI3iv","VertexAttribI3ui","VertexAttribI3ui","VertexAttribI3uiv","VertexAttribI3uiv","VertexAttribI4bv","VertexAttribI4bv","VertexAttribI4i","VertexAttribI4i","VertexAttribI4iv","VertexAttribI4iv","VertexAttribI4sv","VertexAttribI4sv","VertexAttribI4ubv","VertexAttribI4ubv","VertexAttribI4ui","VertexAttribI4ui","VertexAttribI4uiv","VertexAttribI4uiv","VertexAttribI4usv","VertexAttribI4usv","VertexAttribIFormat","VertexAttribIFormat","VertexAttribIPointer","VertexAttribIPointer","VertexAttribL1d","VertexAttribL1d","VertexAttribL1dv","VertexAttribL1dv","VertexAttribL2d","VertexAttribL2d","VertexAttribL2dv","VertexAttribL2dv","VertexAttribL3d","VertexAttribL3d","VertexAttribL3dv","VertexAttribL3dv","VertexAttribL4d","VertexAttribL4d","VertexAttribL4dv","VertexAttribL4dv","VertexAttribLFormat","VertexAttribLFormat","VertexAttribLPointer","VertexAttribLPointer","VertexAttribP1ui","VertexAttribP1ui","VertexAttribP1uiv","VertexAttribP1uiv","VertexAttribP2ui","VertexAttribP2ui","VertexAttribP2uiv","VertexAttribP2uiv","VertexAttribP3ui","VertexAttribP3ui","VertexAttribP3uiv","VertexAttribP3uiv","VertexAttribP4ui","VertexAttribP4ui","VertexAttribP4uiv","VertexAttribP4uiv","VertexAttribPointer","VertexAttribPointer","VertexBindingDivisor","VertexBindingDivisor","VertexP2ui","VertexP2ui","VertexP2uiv","VertexP2uiv","VertexP3ui","VertexP3ui","VertexP3uiv","VertexP3uiv","VertexP4ui","VertexP4ui","VertexP4uiv","VertexP4uiv","Viewport","Viewport","ViewportArrayv","ViewportArrayv","ViewportIndexedf","ViewportIndexedf","ViewportIndexedfv","ViewportIndexedfv","WAIT_FAILED","WRITE_ONLY","WaitSync","WaitSync","XOR","ZERO","ZERO_TO_ONE","borrow","borrow_mut","from","into","load_with","new","try_from","try_into","type_id","types","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","is_loaded","load_with","GLDEBUGPROC","GLDEBUGPROCAMD","GLDEBUGPROCARB","GLDEBUGPROCKHR","GLbitfield","GLboolean","GLbyte","GLchar","GLcharARB","GLclampd","GLclampf","GLclampx","GLdouble","GLeglImageOES","GLenum","GLfixed","GLfloat","GLhalf","GLhalfARB","GLhalfNV","GLhandleARB","GLint","GLint64","GLint64EXT","GLintptr","GLintptrARB","GLshort","GLsizei","GLsizeiptr","GLsizeiptrARB","GLsync","GLubyte","GLuint","GLuint64","GLuint64EXT","GLushort","GLvdpauSurfaceNV","GLvoid","None","None","None","None","Some","Some","Some","Some","__GLsync","_cl_context","_cl_event","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"gl"],[2747,"gl::ActiveShaderProgram"],[2749,"gl::ActiveTexture"],[2751,"gl::AttachShader"],[2753,"gl::BeginConditionalRender"],[2755,"gl::BeginQuery"],[2757,"gl::BeginQueryIndexed"],[2759,"gl::BeginTransformFeedback"],[2761,"gl::BindAttribLocation"],[2763,"gl::BindBuffer"],[2765,"gl::BindBufferBase"],[2767,"gl::BindBufferRange"],[2769,"gl::BindBuffersBase"],[2771,"gl::BindBuffersRange"],[2773,"gl::BindFragDataLocation"],[2775,"gl::BindFragDataLocationIndexed"],[2777,"gl::BindFramebuffer"],[2779,"gl::BindImageTexture"],[2781,"gl::BindImageTextures"],[2783,"gl::BindProgramPipeline"],[2785,"gl::BindRenderbuffer"],[2787,"gl::BindSampler"],[2789,"gl::BindSamplers"],[2791,"gl::BindTexture"],[2793,"gl::BindTextureUnit"],[2795,"gl::BindTextures"],[2797,"gl::BindTransformFeedback"],[2799,"gl::BindVertexArray"],[2801,"gl::BindVertexBuffer"],[2803,"gl::BindVertexBuffers"],[2805,"gl::BlendColor"],[2807,"gl::BlendEquation"],[2809,"gl::BlendEquationSeparate"],[2811,"gl::BlendEquationSeparatei"],[2813,"gl::BlendEquationi"],[2815,"gl::BlendFunc"],[2817,"gl::BlendFuncSeparate"],[2819,"gl::BlendFuncSeparatei"],[2821,"gl::BlendFunci"],[2823,"gl::BlitFramebuffer"],[2825,"gl::BlitNamedFramebuffer"],[2827,"gl::BufferData"],[2829,"gl::BufferStorage"],[2831,"gl::BufferSubData"],[2833,"gl::CheckFramebufferStatus"],[2835,"gl::CheckNamedFramebufferStatus"],[2837,"gl::ClampColor"],[2839,"gl::Clear"],[2841,"gl::ClearBufferData"],[2843,"gl::ClearBufferSubData"],[2845,"gl::ClearBufferfi"],[2847,"gl::ClearBufferfv"],[2849,"gl::ClearBufferiv"],[2851,"gl::ClearBufferuiv"],[2853,"gl::ClearColor"],[2855,"gl::ClearDepth"],[2857,"gl::ClearDepthf"],[2859,"gl::ClearNamedBufferData"],[2861,"gl::ClearNamedBufferSubData"],[2863,"gl::ClearNamedFramebufferfi"],[2865,"gl::ClearNamedFramebufferfv"],[2867,"gl::ClearNamedFramebufferiv"],[2869,"gl::ClearNamedFramebufferuiv"],[2871,"gl::ClearStencil"],[2873,"gl::ClearTexImage"],[2875,"gl::ClearTexSubImage"],[2877,"gl::ClientWaitSync"],[2879,"gl::ClipControl"],[2881,"gl::ColorMask"],[2883,"gl::ColorMaski"],[2885,"gl::ColorP3ui"],[2887,"gl::ColorP3uiv"],[2889,"gl::ColorP4ui"],[2891,"gl::ColorP4uiv"],[2893,"gl::CompileShader"],[2895,"gl::CompressedTexImage1D"],[2897,"gl::CompressedTexImage2D"],[2899,"gl::CompressedTexImage3D"],[2901,"gl::CompressedTexSubImage1D"],[2903,"gl::CompressedTexSubImage2D"],[2905,"gl::CompressedTexSubImage3D"],[2907,"gl::CompressedTextureSubImage1D"],[2909,"gl::CompressedTextureSubImage2D"],[2911,"gl::CompressedTextureSubImage3D"],[2913,"gl::CopyBufferSubData"],[2915,"gl::CopyImageSubData"],[2917,"gl::CopyNamedBufferSubData"],[2919,"gl::CopyTexImage1D"],[2921,"gl::CopyTexImage2D"],[2923,"gl::CopyTexSubImage1D"],[2925,"gl::CopyTexSubImage2D"],[2927,"gl::CopyTexSubImage3D"],[2929,"gl::CopyTextureSubImage1D"],[2931,"gl::CopyTextureSubImage2D"],[2933,"gl::CopyTextureSubImage3D"],[2935,"gl::CreateBuffers"],[2937,"gl::CreateFramebuffers"],[2939,"gl::CreateProgram"],[2941,"gl::CreateProgramPipelines"],[2943,"gl::CreateQueries"],[2945,"gl::CreateRenderbuffers"],[2947,"gl::CreateSamplers"],[2949,"gl::CreateShader"],[2951,"gl::CreateShaderProgramv"],[2953,"gl::CreateTextures"],[2955,"gl::CreateTransformFeedbacks"],[2957,"gl::CreateVertexArrays"],[2959,"gl::CullFace"],[2961,"gl::DebugMessageCallback"],[2963,"gl::DebugMessageControl"],[2965,"gl::DebugMessageInsert"],[2967,"gl::DeleteBuffers"],[2969,"gl::DeleteFramebuffers"],[2971,"gl::DeleteProgram"],[2973,"gl::DeleteProgramPipelines"],[2975,"gl::DeleteQueries"],[2977,"gl::DeleteRenderbuffers"],[2979,"gl::DeleteSamplers"],[2981,"gl::DeleteShader"],[2983,"gl::DeleteSync"],[2985,"gl::DeleteTextures"],[2987,"gl::DeleteTransformFeedbacks"],[2989,"gl::DeleteVertexArrays"],[2991,"gl::DepthFunc"],[2993,"gl::DepthMask"],[2995,"gl::DepthRange"],[2997,"gl::DepthRangeArrayv"],[2999,"gl::DepthRangeIndexed"],[3001,"gl::DepthRangef"],[3003,"gl::DetachShader"],[3005,"gl::Disable"],[3007,"gl::DisableVertexArrayAttrib"],[3009,"gl::DisableVertexAttribArray"],[3011,"gl::Disablei"],[3013,"gl::DispatchCompute"],[3015,"gl::DispatchComputeIndirect"],[3017,"gl::DrawArrays"],[3019,"gl::DrawArraysIndirect"],[3021,"gl::DrawArraysInstanced"],[3023,"gl::DrawArraysInstancedBaseInstance"],[3025,"gl::DrawBuffer"],[3027,"gl::DrawBuffers"],[3029,"gl::DrawElements"],[3031,"gl::DrawElementsBaseVertex"],[3033,"gl::DrawElementsIndirect"],[3035,"gl::DrawElementsInstanced"],[3037,"gl::DrawElementsInstancedBaseInstance"],[3039,"gl::DrawElementsInstancedBaseVertex"],[3041,"gl::DrawElementsInstancedBaseVertexBaseInstance"],[3043,"gl::DrawRangeElements"],[3045,"gl::DrawRangeElementsBaseVertex"],[3047,"gl::DrawTransformFeedback"],[3049,"gl::DrawTransformFeedbackInstanced"],[3051,"gl::DrawTransformFeedbackStream"],[3053,"gl::DrawTransformFeedbackStreamInstanced"],[3055,"gl::Enable"],[3057,"gl::EnableVertexArrayAttrib"],[3059,"gl::EnableVertexAttribArray"],[3061,"gl::Enablei"],[3063,"gl::EndConditionalRender"],[3065,"gl::EndQuery"],[3067,"gl::EndQueryIndexed"],[3069,"gl::EndTransformFeedback"],[3071,"gl::FenceSync"],[3073,"gl::Finish"],[3075,"gl::Flush"],[3077,"gl::FlushMappedBufferRange"],[3079,"gl::FlushMappedNamedBufferRange"],[3081,"gl::FramebufferParameteri"],[3083,"gl::FramebufferRenderbuffer"],[3085,"gl::FramebufferTexture"],[3087,"gl::FramebufferTexture1D"],[3089,"gl::FramebufferTexture2D"],[3091,"gl::FramebufferTexture3D"],[3093,"gl::FramebufferTextureLayer"],[3095,"gl::FrontFace"],[3097,"gl::GenBuffers"],[3099,"gl::GenFramebuffers"],[3101,"gl::GenProgramPipelines"],[3103,"gl::GenQueries"],[3105,"gl::GenRenderbuffers"],[3107,"gl::GenSamplers"],[3109,"gl::GenTextures"],[3111,"gl::GenTransformFeedbacks"],[3113,"gl::GenVertexArrays"],[3115,"gl::GenerateMipmap"],[3117,"gl::GenerateTextureMipmap"],[3119,"gl::GetActiveAtomicCounterBufferiv"],[3121,"gl::GetActiveAttrib"],[3123,"gl::GetActiveSubroutineName"],[3125,"gl::GetActiveSubroutineUniformName"],[3127,"gl::GetActiveSubroutineUniformiv"],[3129,"gl::GetActiveUniform"],[3131,"gl::GetActiveUniformBlockName"],[3133,"gl::GetActiveUniformBlockiv"],[3135,"gl::GetActiveUniformName"],[3137,"gl::GetActiveUniformsiv"],[3139,"gl::GetAttachedShaders"],[3141,"gl::GetAttribLocation"],[3143,"gl::GetBooleani_v"],[3145,"gl::GetBooleanv"],[3147,"gl::GetBufferParameteri64v"],[3149,"gl::GetBufferParameteriv"],[3151,"gl::GetBufferPointerv"],[3153,"gl::GetBufferSubData"],[3155,"gl::GetCompressedTexImage"],[3157,"gl::GetCompressedTextureImage"],[3159,"gl::GetCompressedTextureSubImage"],[3161,"gl::GetDebugMessageLog"],[3163,"gl::GetDoublei_v"],[3165,"gl::GetDoublev"],[3167,"gl::GetError"],[3169,"gl::GetFloati_v"],[3171,"gl::GetFloatv"],[3173,"gl::GetFragDataIndex"],[3175,"gl::GetFragDataLocation"],[3177,"gl::GetFramebufferAttachmentParameteriv"],[3179,"gl::GetFramebufferParameteriv"],[3181,"gl::GetGraphicsResetStatus"],[3183,"gl::GetInteger64i_v"],[3185,"gl::GetInteger64v"],[3187,"gl::GetIntegeri_v"],[3189,"gl::GetIntegerv"],[3191,"gl::GetInternalformati64v"],[3193,"gl::GetInternalformativ"],[3195,"gl::GetMultisamplefv"],[3197,"gl::GetNamedBufferParameteri64v"],[3199,"gl::GetNamedBufferParameteriv"],[3201,"gl::GetNamedBufferPointerv"],[3203,"gl::GetNamedBufferSubData"],[3205,"gl::GetNamedFramebufferAttachmentParameteriv"],[3207,"gl::GetNamedFramebufferParameteriv"],[3209,"gl::GetNamedRenderbufferParameteriv"],[3211,"gl::GetObjectLabel"],[3213,"gl::GetObjectPtrLabel"],[3215,"gl::GetPointerv"],[3217,"gl::GetProgramBinary"],[3219,"gl::GetProgramInfoLog"],[3221,"gl::GetProgramInterfaceiv"],[3223,"gl::GetProgramPipelineInfoLog"],[3225,"gl::GetProgramPipelineiv"],[3227,"gl::GetProgramResourceIndex"],[3229,"gl::GetProgramResourceLocation"],[3231,"gl::GetProgramResourceLocationIndex"],[3233,"gl::GetProgramResourceName"],[3235,"gl::GetProgramResourceiv"],[3237,"gl::GetProgramStageiv"],[3239,"gl::GetProgramiv"],[3241,"gl::GetQueryBufferObjecti64v"],[3243,"gl::GetQueryBufferObjectiv"],[3245,"gl::GetQueryBufferObjectui64v"],[3247,"gl::GetQueryBufferObjectuiv"],[3249,"gl::GetQueryIndexediv"],[3251,"gl::GetQueryObjecti64v"],[3253,"gl::GetQueryObjectiv"],[3255,"gl::GetQueryObjectui64v"],[3257,"gl::GetQueryObjectuiv"],[3259,"gl::GetQueryiv"],[3261,"gl::GetRenderbufferParameteriv"],[3263,"gl::GetSamplerParameterIiv"],[3265,"gl::GetSamplerParameterIuiv"],[3267,"gl::GetSamplerParameterfv"],[3269,"gl::GetSamplerParameteriv"],[3271,"gl::GetShaderInfoLog"],[3273,"gl::GetShaderPrecisionFormat"],[3275,"gl::GetShaderSource"],[3277,"gl::GetShaderiv"],[3279,"gl::GetString"],[3281,"gl::GetStringi"],[3283,"gl::GetSubroutineIndex"],[3285,"gl::GetSubroutineUniformLocation"],[3287,"gl::GetSynciv"],[3289,"gl::GetTexImage"],[3291,"gl::GetTexLevelParameterfv"],[3293,"gl::GetTexLevelParameteriv"],[3295,"gl::GetTexParameterIiv"],[3297,"gl::GetTexParameterIuiv"],[3299,"gl::GetTexParameterfv"],[3301,"gl::GetTexParameteriv"],[3303,"gl::GetTextureImage"],[3305,"gl::GetTextureLevelParameterfv"],[3307,"gl::GetTextureLevelParameteriv"],[3309,"gl::GetTextureParameterIiv"],[3311,"gl::GetTextureParameterIuiv"],[3313,"gl::GetTextureParameterfv"],[3315,"gl::GetTextureParameteriv"],[3317,"gl::GetTextureSubImage"],[3319,"gl::GetTransformFeedbackVarying"],[3321,"gl::GetTransformFeedbacki64_v"],[3323,"gl::GetTransformFeedbacki_v"],[3325,"gl::GetTransformFeedbackiv"],[3327,"gl::GetUniformBlockIndex"],[3329,"gl::GetUniformIndices"],[3331,"gl::GetUniformLocation"],[3333,"gl::GetUniformSubroutineuiv"],[3335,"gl::GetUniformdv"],[3337,"gl::GetUniformfv"],[3339,"gl::GetUniformiv"],[3341,"gl::GetUniformuiv"],[3343,"gl::GetVertexArrayIndexed64iv"],[3345,"gl::GetVertexArrayIndexediv"],[3347,"gl::GetVertexArrayiv"],[3349,"gl::GetVertexAttribIiv"],[3351,"gl::GetVertexAttribIuiv"],[3353,"gl::GetVertexAttribLdv"],[3355,"gl::GetVertexAttribPointerv"],[3357,"gl::GetVertexAttribdv"],[3359,"gl::GetVertexAttribfv"],[3361,"gl::GetVertexAttribiv"],[3363,"gl::GetnColorTable"],[3365,"gl::GetnCompressedTexImage"],[3367,"gl::GetnConvolutionFilter"],[3369,"gl::GetnHistogram"],[3371,"gl::GetnMapdv"],[3373,"gl::GetnMapfv"],[3375,"gl::GetnMapiv"],[3377,"gl::GetnMinmax"],[3379,"gl::GetnPixelMapfv"],[3381,"gl::GetnPixelMapuiv"],[3383,"gl::GetnPixelMapusv"],[3385,"gl::GetnPolygonStipple"],[3387,"gl::GetnSeparableFilter"],[3389,"gl::GetnTexImage"],[3391,"gl::GetnUniformdv"],[3393,"gl::GetnUniformfv"],[3395,"gl::GetnUniformiv"],[3397,"gl::GetnUniformuiv"],[3399,"gl::Hint"],[3401,"gl::InvalidateBufferData"],[3403,"gl::InvalidateBufferSubData"],[3405,"gl::InvalidateFramebuffer"],[3407,"gl::InvalidateNamedFramebufferData"],[3409,"gl::InvalidateNamedFramebufferSubData"],[3411,"gl::InvalidateSubFramebuffer"],[3413,"gl::InvalidateTexImage"],[3415,"gl::InvalidateTexSubImage"],[3417,"gl::IsBuffer"],[3419,"gl::IsEnabled"],[3421,"gl::IsEnabledi"],[3423,"gl::IsFramebuffer"],[3425,"gl::IsProgram"],[3427,"gl::IsProgramPipeline"],[3429,"gl::IsQuery"],[3431,"gl::IsRenderbuffer"],[3433,"gl::IsSampler"],[3435,"gl::IsShader"],[3437,"gl::IsSync"],[3439,"gl::IsTexture"],[3441,"gl::IsTransformFeedback"],[3443,"gl::IsVertexArray"],[3445,"gl::LineWidth"],[3447,"gl::LinkProgram"],[3449,"gl::LogicOp"],[3451,"gl::MapBuffer"],[3453,"gl::MapBufferRange"],[3455,"gl::MapNamedBuffer"],[3457,"gl::MapNamedBufferRange"],[3459,"gl::MemoryBarrier"],[3461,"gl::MemoryBarrierByRegion"],[3463,"gl::MinSampleShading"],[3465,"gl::MultiDrawArrays"],[3467,"gl::MultiDrawArraysIndirect"],[3469,"gl::MultiDrawElements"],[3471,"gl::MultiDrawElementsBaseVertex"],[3473,"gl::MultiDrawElementsIndirect"],[3475,"gl::MultiTexCoordP1ui"],[3477,"gl::MultiTexCoordP1uiv"],[3479,"gl::MultiTexCoordP2ui"],[3481,"gl::MultiTexCoordP2uiv"],[3483,"gl::MultiTexCoordP3ui"],[3485,"gl::MultiTexCoordP3uiv"],[3487,"gl::MultiTexCoordP4ui"],[3489,"gl::MultiTexCoordP4uiv"],[3491,"gl::NamedBufferData"],[3493,"gl::NamedBufferStorage"],[3495,"gl::NamedBufferSubData"],[3497,"gl::NamedFramebufferDrawBuffer"],[3499,"gl::NamedFramebufferDrawBuffers"],[3501,"gl::NamedFramebufferParameteri"],[3503,"gl::NamedFramebufferReadBuffer"],[3505,"gl::NamedFramebufferRenderbuffer"],[3507,"gl::NamedFramebufferTexture"],[3509,"gl::NamedFramebufferTextureLayer"],[3511,"gl::NamedRenderbufferStorage"],[3513,"gl::NamedRenderbufferStorageMultisample"],[3515,"gl::NormalP3ui"],[3517,"gl::NormalP3uiv"],[3519,"gl::ObjectLabel"],[3521,"gl::ObjectPtrLabel"],[3523,"gl::PatchParameterfv"],[3525,"gl::PatchParameteri"],[3527,"gl::PauseTransformFeedback"],[3529,"gl::PixelStoref"],[3531,"gl::PixelStorei"],[3533,"gl::PointParameterf"],[3535,"gl::PointParameterfv"],[3537,"gl::PointParameteri"],[3539,"gl::PointParameteriv"],[3541,"gl::PointSize"],[3543,"gl::PolygonMode"],[3545,"gl::PolygonOffset"],[3547,"gl::PopDebugGroup"],[3549,"gl::PrimitiveRestartIndex"],[3551,"gl::ProgramBinary"],[3553,"gl::ProgramParameteri"],[3555,"gl::ProgramUniform1d"],[3557,"gl::ProgramUniform1dv"],[3559,"gl::ProgramUniform1f"],[3561,"gl::ProgramUniform1fv"],[3563,"gl::ProgramUniform1i"],[3565,"gl::ProgramUniform1iv"],[3567,"gl::ProgramUniform1ui"],[3569,"gl::ProgramUniform1uiv"],[3571,"gl::ProgramUniform2d"],[3573,"gl::ProgramUniform2dv"],[3575,"gl::ProgramUniform2f"],[3577,"gl::ProgramUniform2fv"],[3579,"gl::ProgramUniform2i"],[3581,"gl::ProgramUniform2iv"],[3583,"gl::ProgramUniform2ui"],[3585,"gl::ProgramUniform2uiv"],[3587,"gl::ProgramUniform3d"],[3589,"gl::ProgramUniform3dv"],[3591,"gl::ProgramUniform3f"],[3593,"gl::ProgramUniform3fv"],[3595,"gl::ProgramUniform3i"],[3597,"gl::ProgramUniform3iv"],[3599,"gl::ProgramUniform3ui"],[3601,"gl::ProgramUniform3uiv"],[3603,"gl::ProgramUniform4d"],[3605,"gl::ProgramUniform4dv"],[3607,"gl::ProgramUniform4f"],[3609,"gl::ProgramUniform4fv"],[3611,"gl::ProgramUniform4i"],[3613,"gl::ProgramUniform4iv"],[3615,"gl::ProgramUniform4ui"],[3617,"gl::ProgramUniform4uiv"],[3619,"gl::ProgramUniformMatrix2dv"],[3621,"gl::ProgramUniformMatrix2fv"],[3623,"gl::ProgramUniformMatrix2x3dv"],[3625,"gl::ProgramUniformMatrix2x3fv"],[3627,"gl::ProgramUniformMatrix2x4dv"],[3629,"gl::ProgramUniformMatrix2x4fv"],[3631,"gl::ProgramUniformMatrix3dv"],[3633,"gl::ProgramUniformMatrix3fv"],[3635,"gl::ProgramUniformMatrix3x2dv"],[3637,"gl::ProgramUniformMatrix3x2fv"],[3639,"gl::ProgramUniformMatrix3x4dv"],[3641,"gl::ProgramUniformMatrix3x4fv"],[3643,"gl::ProgramUniformMatrix4dv"],[3645,"gl::ProgramUniformMatrix4fv"],[3647,"gl::ProgramUniformMatrix4x2dv"],[3649,"gl::ProgramUniformMatrix4x2fv"],[3651,"gl::ProgramUniformMatrix4x3dv"],[3653,"gl::ProgramUniformMatrix4x3fv"],[3655,"gl::ProvokingVertex"],[3657,"gl::PushDebugGroup"],[3659,"gl::QueryCounter"],[3661,"gl::ReadBuffer"],[3663,"gl::ReadPixels"],[3665,"gl::ReadnPixels"],[3667,"gl::ReleaseShaderCompiler"],[3669,"gl::RenderbufferStorage"],[3671,"gl::RenderbufferStorageMultisample"],[3673,"gl::ResumeTransformFeedback"],[3675,"gl::SampleCoverage"],[3677,"gl::SampleMaski"],[3679,"gl::SamplerParameterIiv"],[3681,"gl::SamplerParameterIuiv"],[3683,"gl::SamplerParameterf"],[3685,"gl::SamplerParameterfv"],[3687,"gl::SamplerParameteri"],[3689,"gl::SamplerParameteriv"],[3691,"gl::Scissor"],[3693,"gl::ScissorArrayv"],[3695,"gl::ScissorIndexed"],[3697,"gl::ScissorIndexedv"],[3699,"gl::SecondaryColorP3ui"],[3701,"gl::SecondaryColorP3uiv"],[3703,"gl::ShaderBinary"],[3705,"gl::ShaderSource"],[3707,"gl::ShaderStorageBlockBinding"],[3709,"gl::StencilFunc"],[3711,"gl::StencilFuncSeparate"],[3713,"gl::StencilMask"],[3715,"gl::StencilMaskSeparate"],[3717,"gl::StencilOp"],[3719,"gl::StencilOpSeparate"],[3721,"gl::TexBuffer"],[3723,"gl::TexBufferRange"],[3725,"gl::TexCoordP1ui"],[3727,"gl::TexCoordP1uiv"],[3729,"gl::TexCoordP2ui"],[3731,"gl::TexCoordP2uiv"],[3733,"gl::TexCoordP3ui"],[3735,"gl::TexCoordP3uiv"],[3737,"gl::TexCoordP4ui"],[3739,"gl::TexCoordP4uiv"],[3741,"gl::TexImage1D"],[3743,"gl::TexImage2D"],[3745,"gl::TexImage2DMultisample"],[3747,"gl::TexImage3D"],[3749,"gl::TexImage3DMultisample"],[3751,"gl::TexParameterIiv"],[3753,"gl::TexParameterIuiv"],[3755,"gl::TexParameterf"],[3757,"gl::TexParameterfv"],[3759,"gl::TexParameteri"],[3761,"gl::TexParameteriv"],[3763,"gl::TexStorage1D"],[3765,"gl::TexStorage2D"],[3767,"gl::TexStorage2DMultisample"],[3769,"gl::TexStorage3D"],[3771,"gl::TexStorage3DMultisample"],[3773,"gl::TexSubImage1D"],[3775,"gl::TexSubImage2D"],[3777,"gl::TexSubImage3D"],[3779,"gl::TextureBarrier"],[3781,"gl::TextureBuffer"],[3783,"gl::TextureBufferRange"],[3785,"gl::TextureParameterIiv"],[3787,"gl::TextureParameterIuiv"],[3789,"gl::TextureParameterf"],[3791,"gl::TextureParameterfv"],[3793,"gl::TextureParameteri"],[3795,"gl::TextureParameteriv"],[3797,"gl::TextureStorage1D"],[3799,"gl::TextureStorage2D"],[3801,"gl::TextureStorage2DMultisample"],[3803,"gl::TextureStorage3D"],[3805,"gl::TextureStorage3DMultisample"],[3807,"gl::TextureSubImage1D"],[3809,"gl::TextureSubImage2D"],[3811,"gl::TextureSubImage3D"],[3813,"gl::TextureView"],[3815,"gl::TransformFeedbackBufferBase"],[3817,"gl::TransformFeedbackBufferRange"],[3819,"gl::TransformFeedbackVaryings"],[3821,"gl::Uniform1d"],[3823,"gl::Uniform1dv"],[3825,"gl::Uniform1f"],[3827,"gl::Uniform1fv"],[3829,"gl::Uniform1i"],[3831,"gl::Uniform1iv"],[3833,"gl::Uniform1ui"],[3835,"gl::Uniform1uiv"],[3837,"gl::Uniform2d"],[3839,"gl::Uniform2dv"],[3841,"gl::Uniform2f"],[3843,"gl::Uniform2fv"],[3845,"gl::Uniform2i"],[3847,"gl::Uniform2iv"],[3849,"gl::Uniform2ui"],[3851,"gl::Uniform2uiv"],[3853,"gl::Uniform3d"],[3855,"gl::Uniform3dv"],[3857,"gl::Uniform3f"],[3859,"gl::Uniform3fv"],[3861,"gl::Uniform3i"],[3863,"gl::Uniform3iv"],[3865,"gl::Uniform3ui"],[3867,"gl::Uniform3uiv"],[3869,"gl::Uniform4d"],[3871,"gl::Uniform4dv"],[3873,"gl::Uniform4f"],[3875,"gl::Uniform4fv"],[3877,"gl::Uniform4i"],[3879,"gl::Uniform4iv"],[3881,"gl::Uniform4ui"],[3883,"gl::Uniform4uiv"],[3885,"gl::UniformBlockBinding"],[3887,"gl::UniformMatrix2dv"],[3889,"gl::UniformMatrix2fv"],[3891,"gl::UniformMatrix2x3dv"],[3893,"gl::UniformMatrix2x3fv"],[3895,"gl::UniformMatrix2x4dv"],[3897,"gl::UniformMatrix2x4fv"],[3899,"gl::UniformMatrix3dv"],[3901,"gl::UniformMatrix3fv"],[3903,"gl::UniformMatrix3x2dv"],[3905,"gl::UniformMatrix3x2fv"],[3907,"gl::UniformMatrix3x4dv"],[3909,"gl::UniformMatrix3x4fv"],[3911,"gl::UniformMatrix4dv"],[3913,"gl::UniformMatrix4fv"],[3915,"gl::UniformMatrix4x2dv"],[3917,"gl::UniformMatrix4x2fv"],[3919,"gl::UniformMatrix4x3dv"],[3921,"gl::UniformMatrix4x3fv"],[3923,"gl::UniformSubroutinesuiv"],[3925,"gl::UnmapBuffer"],[3927,"gl::UnmapNamedBuffer"],[3929,"gl::UseProgram"],[3931,"gl::UseProgramStages"],[3933,"gl::ValidateProgram"],[3935,"gl::ValidateProgramPipeline"],[3937,"gl::VertexArrayAttribBinding"],[3939,"gl::VertexArrayAttribFormat"],[3941,"gl::VertexArrayAttribIFormat"],[3943,"gl::VertexArrayAttribLFormat"],[3945,"gl::VertexArrayBindingDivisor"],[3947,"gl::VertexArrayElementBuffer"],[3949,"gl::VertexArrayVertexBuffer"],[3951,"gl::VertexArrayVertexBuffers"],[3953,"gl::VertexAttrib1d"],[3955,"gl::VertexAttrib1dv"],[3957,"gl::VertexAttrib1f"],[3959,"gl::VertexAttrib1fv"],[3961,"gl::VertexAttrib1s"],[3963,"gl::VertexAttrib1sv"],[3965,"gl::VertexAttrib2d"],[3967,"gl::VertexAttrib2dv"],[3969,"gl::VertexAttrib2f"],[3971,"gl::VertexAttrib2fv"],[3973,"gl::VertexAttrib2s"],[3975,"gl::VertexAttrib2sv"],[3977,"gl::VertexAttrib3d"],[3979,"gl::VertexAttrib3dv"],[3981,"gl::VertexAttrib3f"],[3983,"gl::VertexAttrib3fv"],[3985,"gl::VertexAttrib3s"],[3987,"gl::VertexAttrib3sv"],[3989,"gl::VertexAttrib4Nbv"],[3991,"gl::VertexAttrib4Niv"],[3993,"gl::VertexAttrib4Nsv"],[3995,"gl::VertexAttrib4Nub"],[3997,"gl::VertexAttrib4Nubv"],[3999,"gl::VertexAttrib4Nuiv"],[4001,"gl::VertexAttrib4Nusv"],[4003,"gl::VertexAttrib4bv"],[4005,"gl::VertexAttrib4d"],[4007,"gl::VertexAttrib4dv"],[4009,"gl::VertexAttrib4f"],[4011,"gl::VertexAttrib4fv"],[4013,"gl::VertexAttrib4iv"],[4015,"gl::VertexAttrib4s"],[4017,"gl::VertexAttrib4sv"],[4019,"gl::VertexAttrib4ubv"],[4021,"gl::VertexAttrib4uiv"],[4023,"gl::VertexAttrib4usv"],[4025,"gl::VertexAttribBinding"],[4027,"gl::VertexAttribDivisor"],[4029,"gl::VertexAttribFormat"],[4031,"gl::VertexAttribI1i"],[4033,"gl::VertexAttribI1iv"],[4035,"gl::VertexAttribI1ui"],[4037,"gl::VertexAttribI1uiv"],[4039,"gl::VertexAttribI2i"],[4041,"gl::VertexAttribI2iv"],[4043,"gl::VertexAttribI2ui"],[4045,"gl::VertexAttribI2uiv"],[4047,"gl::VertexAttribI3i"],[4049,"gl::VertexAttribI3iv"],[4051,"gl::VertexAttribI3ui"],[4053,"gl::VertexAttribI3uiv"],[4055,"gl::VertexAttribI4bv"],[4057,"gl::VertexAttribI4i"],[4059,"gl::VertexAttribI4iv"],[4061,"gl::VertexAttribI4sv"],[4063,"gl::VertexAttribI4ubv"],[4065,"gl::VertexAttribI4ui"],[4067,"gl::VertexAttribI4uiv"],[4069,"gl::VertexAttribI4usv"],[4071,"gl::VertexAttribIFormat"],[4073,"gl::VertexAttribIPointer"],[4075,"gl::VertexAttribL1d"],[4077,"gl::VertexAttribL1dv"],[4079,"gl::VertexAttribL2d"],[4081,"gl::VertexAttribL2dv"],[4083,"gl::VertexAttribL3d"],[4085,"gl::VertexAttribL3dv"],[4087,"gl::VertexAttribL4d"],[4089,"gl::VertexAttribL4dv"],[4091,"gl::VertexAttribLFormat"],[4093,"gl::VertexAttribLPointer"],[4095,"gl::VertexAttribP1ui"],[4097,"gl::VertexAttribP1uiv"],[4099,"gl::VertexAttribP2ui"],[4101,"gl::VertexAttribP2uiv"],[4103,"gl::VertexAttribP3ui"],[4105,"gl::VertexAttribP3uiv"],[4107,"gl::VertexAttribP4ui"],[4109,"gl::VertexAttribP4uiv"],[4111,"gl::VertexAttribPointer"],[4113,"gl::VertexBindingDivisor"],[4115,"gl::VertexP2ui"],[4117,"gl::VertexP2uiv"],[4119,"gl::VertexP3ui"],[4121,"gl::VertexP3uiv"],[4123,"gl::VertexP4ui"],[4125,"gl::VertexP4uiv"],[4127,"gl::Viewport"],[4129,"gl::ViewportArrayv"],[4131,"gl::ViewportIndexedf"],[4133,"gl::ViewportIndexedfv"],[4135,"gl::WaitSync"],[4137,"gl::types"],[4207,"std::os::raw"],[4208,"core::ops::function"],[4209,"core::result"],[4210,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ActiveTextureARB","","Fallbacks: AttachObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: BeginConditionalRenderNV","","Fallbacks: BeginQueryARB","","","","Fallbacks: BeginTransformFeedbackEXT, …","","Fallbacks: BindAttribLocationARB","","Fallbacks: BindBufferARB","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV","","","","","","Fallbacks: BindFragDataLocationEXT","","Fallbacks: BindFragDataLocationIndexedEXT","","","","","","","","","","","","","","","","Fallbacks: BindTextureEXT","","","","","","","","Fallbacks: BindVertexArrayOES","","","","","","Fallbacks: BlendColorEXT","","Fallbacks: BlendEquationEXT","","Fallbacks: BlendEquationSeparateEXT","","Fallbacks: BlendEquationSeparateIndexedAMD, …","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, …","","","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR","","Fallbacks: BlendFuncSeparateIndexedAMD, …","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, …","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV","","","","Fallbacks: BufferDataARB","","Fallbacks: BufferStorageEXT","","Fallbacks: BufferSubDataARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: CheckFramebufferStatusEXT","","","","Fallbacks: ClampColorARB","","","","","","","","","","","","","","","","","","","","Fallbacks: ClearDepthfOES","","","","","","","","","","","","","","","","Fallbacks: ClearTexImageEXT","","Fallbacks: ClearTexSubImageEXT","","Fallbacks: ClientWaitSyncAPPLE","","Fallbacks: ClipControlEXT","","","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, …","","","","","","","","","","Fallbacks: CompileShaderARB","","Fallbacks: CompressedTexImage1DARB","","Fallbacks: CompressedTexImage2DARB","","Fallbacks: CompressedTexImage3DARB","","Fallbacks: CompressedTexSubImage1DARB","","Fallbacks: CompressedTexSubImage2DARB","","Fallbacks: CompressedTexSubImage3DARB","","","","","","","","Fallbacks: CopyBufferSubDataNV","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES","","","","Fallbacks: CopyTexImage1DEXT","","Fallbacks: CopyTexImage2DEXT","","Fallbacks: CopyTexSubImage1DEXT","","Fallbacks: CopyTexSubImage2DEXT","","Fallbacks: CopyTexSubImage3DEXT","","","","","","","","","","","","Fallbacks: CreateProgramObjectARB","","","","","","","","","","Fallbacks: CreateShaderObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR","","Fallbacks: DeleteBuffersARB","","Fallbacks: DeleteFramebuffersEXT","","","","","","Fallbacks: DeleteQueriesARB","","Fallbacks: DeleteRenderbuffersEXT","","","","","","Fallbacks: DeleteSyncAPPLE","","","","Fallbacks: DeleteTransformFeedbacksNV","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES","","","","","","","","","","","","Fallbacks: DepthRangefOES","","Fallbacks: DetachObjectARB","","","","","","Fallbacks: DisableVertexAttribArrayARB","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, …","","","","","","Fallbacks: DrawArraysEXT","","","","Fallbacks: DrawArraysInstancedANGLE, …","","Fallbacks: DrawArraysInstancedBaseInstanceEXT","","","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT","","","","Fallbacks: DrawElementsBaseVertexEXT, …","","","","Fallbacks: DrawElementsInstancedANGLE, …","","Fallbacks: DrawElementsInstancedBaseInstanceEXT","","Fallbacks: DrawElementsInstancedBaseVertexEXT, …","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT","","Fallbacks: DrawRangeElementsEXT","","Fallbacks: DrawRangeElementsBaseVertexEXT, …","","Fallbacks: DrawTransformFeedbackEXT, …","","Fallbacks: DrawTransformFeedbackInstancedEXT","","","","","","","","","","","","","","","","Fallbacks: EnableVertexAttribArrayARB","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, …","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX","","Fallbacks: EndQueryARB","","","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: FenceSyncAPPLE","","","","","","Fallbacks: FlushMappedBufferRangeAPPLE, …","","","","","","","Fallbacks: FramebufferRenderbufferEXT","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, …","","Fallbacks: FramebufferTexture1DEXT","","Fallbacks: FramebufferTexture2DEXT","","Fallbacks: FramebufferTexture3DEXT","","Fallbacks: FramebufferTextureLayerARB, …","","","","","","","","","","","","","","","","","","","","Fallbacks: GenBuffersARB","","Fallbacks: GenFramebuffersEXT","","","","Fallbacks: GenQueriesARB","","Fallbacks: GenRenderbuffersEXT","","","","","","Fallbacks: GenTransformFeedbacksNV","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES","","Fallbacks: GenerateMipmapEXT","","","","","","Fallbacks: GetActiveAttribARB","","","","","","","","Fallbacks: GetActiveUniformARB","","","","","","","","","","","","Fallbacks: GetAttribLocationARB","","Fallbacks: GetBooleanIndexedvEXT","","","","","","Fallbacks: GetBufferParameterivARB","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES","","Fallbacks: GetBufferSubDataARB","","Fallbacks: GetCompressedTexImageARB","","","","","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT","","","","","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, …","","","","Fallbacks: GetFragDataIndexEXT","","Fallbacks: GetFragDataLocationEXT","","Fallbacks: GetFramebufferAttachmentParameterivEXT","","","","Fallbacks: GetGraphicsResetStatusEXT, …","","","","Fallbacks: GetInteger64vAPPLE","","Fallbacks: GetIntegerIndexedvEXT","","","","","","","","Fallbacks: GetMultisamplefvNV","","","","","","","","","","","","","","","","Fallbacks: GetObjectLabelKHR","","Fallbacks: GetObjectPtrLabelKHR","","Fallbacks: GetPointervEXT, GetPointervKHR","","Fallbacks: GetProgramBinaryOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetQueryObjecti64vEXT","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT","","Fallbacks: GetQueryObjectui64vEXT","","Fallbacks: GetQueryObjectuivARB","","Fallbacks: GetQueryivARB","","Fallbacks: GetRenderbufferParameterivEXT","","Fallbacks: GetSamplerParameterIivEXT, …","","Fallbacks: GetSamplerParameterIuivEXT, …","","","","","","","","","","Fallbacks: GetShaderSourceARB","","","","","","","","","","","","Fallbacks: GetSyncivAPPLE","","","","","","","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetTransformFeedbackVaryingEXT","","","","","","","","","","","","Fallbacks: GetUniformLocationARB","","","","","","Fallbacks: GetUniformfvARB","","Fallbacks: GetUniformivARB","","Fallbacks: GetUniformuivEXT","","","","","","","","Fallbacks: GetVertexAttribIivEXT","","Fallbacks: GetVertexAttribIuivEXT","","Fallbacks: GetVertexAttribLdvEXT","","Fallbacks: GetVertexAttribPointervARB, …","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR","","Fallbacks: GetnUniformuivKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: IsBufferARB","","","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, …","","Fallbacks: IsFramebufferEXT","","","","","","Fallbacks: IsQueryARB","","Fallbacks: IsRenderbufferEXT","","","","","","Fallbacks: IsSyncAPPLE","","","","Fallbacks: IsTransformFeedbackNV","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: LinkProgramallbacks: MapBufferARB, MapBufferOES","","Fallbacks: MapBufferRangeEXT","","","","","","Fallbacks: MemoryBarrierEXT","","","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES","","Fallbacks: MultiDrawArraysEXT","","Fallbacks: MultiDrawArraysIndirectAMD, …","","Fallbacks: MultiDrawElementsEXT","","Fallbacks: MultiDrawElementsBaseVertexEXT","","Fallbacks: MultiDrawElementsIndirectAMD, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: NamedBufferStorageEXT","","Fallbacks: NamedBufferSubDataEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ObjectLabelKHR","","Fallbacks: ObjectPtrLabelKHR","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: PatchParameteriEXT, PatchParameteriOES","","Fallbacks: PauseTransformFeedbackNV","","","","","","Fallbacks: PointParameterfARB, PointParameterfEXT, …","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, …","","Fallbacks: PointParameteriNV","","Fallbacks: PointParameterivNV","","","","Fallbacks: PolygonModeNV","","","","Fallbacks: PopDebugGroupKHR","","","","Fallbacks: ProgramBinaryOES","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT","","","","","","Fallbacks: ProgramUniform1fEXT","","Fallbacks: ProgramUniform1fvEXT","","Fallbacks: ProgramUniform1iEXT","","Fallbacks: ProgramUniform1ivEXT","","Fallbacks: ProgramUniform1uiEXT","","Fallbacks: ProgramUniform1uivEXT","","","","","","Fallbacks: ProgramUniform2fEXT","","Fallbacks: ProgramUniform2fvEXT","","Fallbacks: ProgramUniform2iEXT","","Fallbacks: ProgramUniform2ivEXT","","Fallbacks: ProgramUniform2uiEXT","","Fallbacks: ProgramUniform2uivEXT","","","","","","Fallbacks: ProgramUniform3fEXT","","Fallbacks: ProgramUniform3fvEXT","","Fallbacks: ProgramUniform3iEXT","","Fallbacks: ProgramUniform3ivEXT","","Fallbacks: ProgramUniform3uiEXT","","Fallbacks: ProgramUniform3uivEXT","","","","","","Fallbacks: ProgramUniform4fEXT","","Fallbacks: ProgramUniform4fvEXT","","Fallbacks: ProgramUniform4iEXT","","Fallbacks: ProgramUniform4ivEXT","","Fallbacks: ProgramUniform4uiEXT","","Fallbacks: ProgramUniform4uivEXT","","","","Fallbacks: ProgramUniformMatrix2fvEXT","","","","Fallbacks: ProgramUniformMatrix2x3fvEXT","","","","Fallbacks: ProgramUniformMatrix2x4fvEXT","","","","Fallbacks: ProgramUniformMatrix3fvEXT","","","","Fallbacks: ProgramUniformMatrix3x2fvEXT","","","","Fallbacks: ProgramUniformMatrix3x4fvEXT","","","","Fallbacks: ProgramUniformMatrix4fvEXT","","","","Fallbacks: ProgramUniformMatrix4x2fvEXT","","","","Fallbacks: ProgramUniformMatrix4x3fvEXT","","Fallbacks: ProvokingVertexEXT","","Fallbacks: PushDebugGroupKHR","","","","","","","","","","","","","","","","","","","","","Fallbacks: QueryCounterEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR","","","","Fallbacks: RenderbufferStorageEXT","","Fallbacks: RenderbufferStorageMultisampleEXT, …","","Fallbacks: ResumeTransformFeedbackNV","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: SampleCoverageARB","","","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES","","","","","","","","","","","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES","","","","","","","","Fallbacks: ShaderSourceARB","","","","","","","","","","","","","","Fallbacks: StencilOpSeparateallbacks: TexBufferARB, TexBufferEXT, TexBufferOES","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TexImage3DEXT","","","","Fallbacks: TexParameterIivEXT, TexParameterIivOES","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES","","","","","","","","","","Fallbacks: TexStorage1DEXT","","Fallbacks: TexStorage2DEXT","","","","Fallbacks: TexStorage3DEXT","","Fallbacks: TexStorage3DMultisampleOES","","Fallbacks: TexSubImage1DEXT","","Fallbacks: TexSubImage2DEXT","","Fallbacks: TexSubImage3DEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: TextureViewEXT, TextureViewOES","","","","","","Fallbacks: TransformFeedbackVaryingsEXT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: Uniform1fARB","","Fallbacks: Uniform1fvARB","","Fallbacks: Uniform1iARB","","Fallbacks: Uniform1ivARB","","Fallbacks: Uniform1uiEXT","","Fallbacks: Uniform1uivEXT","","","","","","Fallbacks: Uniform2fARB","","Fallbacks: Uniform2fvARB","","Fallbacks: Uniform2iARB","","Fallbacks: Uniform2ivARB","","Fallbacks: Uniform2uiEXT","","Fallbacks: Uniform2uivEXT","","","","","","Fallbacks: Uniform3fARB","","Fallbacks: Uniform3fvARB","","Fallbacks: Uniform3iARB","","Fallbacks: Uniform3ivARB","","Fallbacks: Uniform3uiEXT","","Fallbacks: Uniform3uivEXT","","","","","","Fallbacks: Uniform4fARB","","Fallbacks: Uniform4fvARB","","Fallbacks: Uniform4iARB","","Fallbacks: Uniform4ivARB","","Fallbacks: Uniform4uiEXT","","Fallbacks: Uniform4uivEXT","","","","","","Fallbacks: UniformMatrix2fvARB","","","","Fallbacks: UniformMatrix2x3fvNV","","","","Fallbacks: UniformMatrix2x4fvNV","","","","Fallbacks: UniformMatrix3fvARB","","","","Fallbacks: UniformMatrix3x2fvNV","","","","Fallbacks: UniformMatrix3x4fvNV","","","","Fallbacks: UniformMatrix4fvARB","","","","Fallbacks: UniformMatrix4x2fvNV","","","","Fallbacks: UniformMatrix4x3fvNV","","","","Fallbacks: UnmapBufferARB, UnmapBufferOES","","","","Fallbacks: UseProgramObjectARB","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fallbacks: ValidateProgramARB","","","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV","","Fallbacks: VertexAttrib4NbvARB","","Fallbacks: VertexAttrib4NivARB","","Fallbacks: VertexAttrib4NsvARB","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV","","Fallbacks: VertexAttrib4NuivARB","","Fallbacks: VertexAttrib4NusvARB","","Fallbacks: VertexAttrib4bvARB","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV","","Fallbacks: VertexAttrib4ivARB","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV","","Fallbacks: VertexAttrib4ubvARB","","Fallbacks: VertexAttrib4uivARB","","Fallbacks: VertexAttrib4usvARB","","","","Fallbacks: VertexAttribDivisorANGLE, …","","","","Fallbacks: VertexAttribI1iEXT","","Fallbacks: VertexAttribI1ivEXT","","Fallbacks: VertexAttribI1uiEXT","","Fallbacks: VertexAttribI1uivEXT","","Fallbacks: VertexAttribI2iEXT","","Fallbacks: VertexAttribI2ivEXT","","Fallbacks: VertexAttribI2uiEXT","","Fallbacks: VertexAttribI2uivEXT","","Fallbacks: VertexAttribI3iEXT","","Fallbacks: VertexAttribI3ivEXT","","Fallbacks: VertexAttribI3uiEXT","","Fallbacks: VertexAttribI3uivEXT","","Fallbacks: VertexAttribI4bvEXT","","Fallbacks: VertexAttribI4iEXT","","Fallbacks: VertexAttribI4ivEXT","","Fallbacks: VertexAttribI4svEXT","","Fallbacks: VertexAttribI4ubvEXT","","Fallbacks: VertexAttribI4uiEXT","","Fallbacks: VertexAttribI4uivEXT","","Fallbacks: VertexAttribI4usvEXT","","","","Fallbacks: VertexAttribIPointerEXT","","Fallbacks: VertexAttribL1dEXT","","Fallbacks: VertexAttribL1dvEXT","","Fallbacks: VertexAttribL2dEXT","","Fallbacks: VertexAttribL2dvEXT","","Fallbacks: VertexAttribL3dEXT","","Fallbacks: VertexAttribL3dvEXT","","Fallbacks: VertexAttribL4dEXT","","Fallbacks: VertexAttribL4dvEXT","","","","Fallbacks: VertexAttribLPointerEXT","","","","","","","","","","","","","","","","","","Fallbacks: VertexAttribPointerARB","","","","","","","","","","","","","","","","","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV","","","","Fallbacks: WaitSyncAPPLE","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Load each OpenGL symbol using a custom load function. This …","Creates a <code>FnPtr</code> from a load attempto value.","No value.","No value.","No value.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,0,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,26,27,28,15,26,27,28,0,0,0,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31,29,30,31],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],0,[2],0,[[1,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,[[2,1]],0,[[2,1,1]],0,[2],0,[[1,1,3]],0,[[2,1]],0,[[2,1,1]],0,[[2,1,1,4,5]],0,[[2,1,6,1]],0,[[2,1,6,1,4,5]],0,[[1,1,3]],0,[[1,1,1,3]],0,[[2,1]],0,[[1,1,7,8,7,2,2]],0,[[1,6,1]],0,[1],0,[[2,1]],0,[[1,1]],0,[[1,6,1]],0,[[2,1]],0,[[1,1]],0,[[1,6,1]],0,[[2,1]],0,[1],0,[[1,1,4,6]],0,[[1,6,1,4,6]],0,[[9,9,9,9]],0,[2],0,[[2,2]],0,[[1,2,2]],0,[[1,2]],0,[[2,2]],0,[[2,2,2,2]],0,[[1,2,2,2,2]],0,[[1,2,2]],0,[[7,7,7,7,7,7,7,7,10,2]],0,[[1,1,7,7,7,7,7,7,7,7,10,2]],0,[[2,5,11,2]],0,[[2,5,11,10]],0,[[2,4,5,11]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,2],0,[[1,2],2],0,[[2,2]],0,[10],0,[[2,2,2,2,11]],0,[[2,2,4,5,2,2,11]],0,[[2,7,9,7]],0,[[2,7,9]],0,[[2,7,7]],0,[[2,7,1]],0,[[9,9,9,9]],0,[12],0,[9],0,[[1,2,2,2,11]],0,[[1,2,4,5,2,2,11]],0,[[1,2,7,9,7]],0,[[1,2,7,9]],0,[[1,2,7,7]],0,[[1,2,7,1]],0,[7],0,[[1,7,2,2,11]],0,[[1,7,7,7,7,6,6,6,2,2,11]],0,[[13,10,14],2],0,[[2,2]],0,[[8,8,8,8]],0,[[1,8,8,8,8]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[1],0,[[2,7,2,6,7,6,11]],0,[[2,7,2,6,6,7,6,11]],0,[[2,7,2,6,6,6,7,6,11]],0,[[2,7,7,6,2,6,11]],0,[[2,7,7,7,6,6,2,6,11]],0,[[2,7,7,7,7,6,6,6,2,6,11]],0,[[1,7,7,6,2,6,11]],0,[[1,7,7,7,6,6,2,6,11]],0,[[1,7,7,7,7,6,6,6,2,6,11]],0,[[2,2,4,4,5]],0,[[1,2,7,7,7,7,1,2,7,7,7,7,6,6,6]],0,[[1,1,4,4,5]],0,[[2,7,2,7,7,6,7]],0,[[2,7,2,7,7,6,6,7]],0,[[2,7,7,7,7,6]],0,[[2,7,7,7,7,7,6,6]],0,[[2,7,7,7,7,7,7,6,6]],0,[[1,7,7,7,7,6]],0,[[1,7,7,7,7,7,6,6]],0,[[1,7,7,7,7,7,7,6,6]],0,[[6,1]],0,[[6,1]],0,[[],1],0,[[6,1]],0,[[2,6,1]],0,[[6,1]],0,[[6,1]],0,[2,1],0,[[2,6,3],1],0,[[2,6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,11]],0,[[2,2,2,6,1,8]],0,[[2,2,1,2,6,3]],0,[[6,1]],0,[[6,1]],0,[1],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[1],0,[13],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,[8],0,[[12,12]],0,[[1,6,12]],0,[[1,12,12]],0,[[9,9]],0,[[1,1]],0,[2],0,[[1,1]],0,[1],0,[[2,1]],0,[[1,1,1]],0,[4],0,[[2,7,6]],0,[[2,11]],0,[[2,7,6,6]],0,[[2,7,6,6,1]],0,[2],0,[[6,2]],0,[[2,6,2,11]],0,[[2,6,2,11,7]],0,[[2,2,11]],0,[[2,6,2,11,6]],0,[[2,6,2,11,6,1]],0,[[2,6,2,11,6,7]],0,[[2,6,2,11,6,7,1]],0,[[2,1,1,6,2,11]],0,[[2,1,1,6,2,11,7]],0,[[2,1]],0,[[2,1,6]],0,[[2,1,1]],0,[[2,1,1,6]],0,0,0,0,0,0,0,[2],0,[[1,1]],0,[1],0,[[2,1]],0,[[]],0,[2],0,[[2,1]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,10],13],0,[[]],0,[[]],0,[[2,4,5]],0,[[1,4,5]],0,0,[[2,2,7]],0,[[2,2,2,1]],0,[[2,2,1,7]],0,[[2,2,2,1,7]],0,[[2,2,2,1,7]],0,[[2,2,2,1,7,7]],0,[[2,2,1,7,7]],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[[6,1]],0,[2],0,[1],0,[[1,1,2,7]],0,[[1,1,6,6,7,2,3]],0,[[1,2,1,6,6,3]],0,[[1,2,1,6,6,3]],0,[[1,2,1,2,7]],0,[[1,1,6,6,7,2,3]],0,[[1,1,6,6,3]],0,[[1,1,2,7]],0,[[1,1,6,6,3]],0,[[1,6,1,2,7]],0,[[1,6,6,1]],0,[[1,3],7],0,[[2,1,8]],0,[[2,8]],0,[[2,2,16]],0,[[2,2,7]],0,[[2,2,11]],0,[[2,4,5,11]],0,[[2,7,11]],0,[[1,7,6,11]],0,[[1,7,7,7,7,6,6,6,6,11]],0,[[1,6,2,2,1,2,6,3],1],0,[[2,1,12]],0,[[2,12]],0,[[],2],0,[[2,1,9]],0,[[2,9]],0,[[1,3],7],0,[[1,3],7],0,[[2,2,2,7]],0,[[2,2,7]],0,[[],2],0,[[2,1,16]],0,[[2,16]],0,[[2,1,7]],0,[[2,7]],0,[[2,2,2,6,16]],0,[[2,2,2,6,7]],0,[[2,1,9]],0,[[1,2,16]],0,[[1,2,7]],0,[[1,2,11]],0,[[1,4,5,11]],0,[[1,2,2,7]],0,[[1,2,7]],0,[[1,2,7]],0,[[2,1,6,6,3]],0,[[11,6,6,3]],0,[[2,11]],0,[[1,6,6,2,11]],0,[[1,6,6,3]],0,[[1,2,2,7]],0,[[1,6,6,3]],0,[[1,2,7]],0,[[1,2,3],1],0,[[1,2,3],7],0,[[1,2,3],7],0,[[1,2,1,6,6,3]],0,[[1,2,1,6,2,6,6,7]],0,[[1,2,2,7]],0,[[1,2,7]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[1,1,2,4]],0,[[2,1,2,7]],0,[[1,2,16]],0,[[1,2,7]],0,[[1,2,14]],0,[[1,2,1]],0,[[2,2,7]],0,[[2,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,6,6,3]],0,[[2,2,7,7]],0,[[1,6,6,3]],0,[[1,2,7]],0,[2,17],0,[[2,1],17],0,[[1,2,3],1],0,[[1,2,3],7],0,[[13,2,6,6,7]],0,[[2,7,2,2,11]],0,[[2,7,2,9]],0,[[2,7,2,7]],0,[[2,2,7]],0,[[2,2,1]],0,[[2,2,9]],0,[[2,2,7]],0,[[1,7,2,2,6,11]],0,[[1,7,2,9]],0,[[1,7,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,7,7,7,7,6,6,6,2,2,6,11]],0,[[1,1,6,6,6,2,3]],0,[[1,2,1,16]],0,[[1,2,1,7]],0,[[1,2,7]],0,[[1,3],1],0,[[1,6,3,1]],0,[[1,3],7],0,[[2,7,1]],0,[[1,7,12]],0,[[1,7,9]],0,[[1,7,7]],0,[[1,7,1]],0,[[1,1,2,16]],0,[[1,1,2,7]],0,[[1,2,7]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,12]],0,[[1,2,11]],0,[[1,2,12]],0,[[1,2,9]],0,[[1,2,7]],0,[[2,2,2,6,11]],0,[[2,7,6,11]],0,[[2,2,2,6,11]],0,[[2,8,2,2,6,11]],0,[[2,2,6,12]],0,[[2,2,6,9]],0,[[2,2,6,7]],0,[[2,8,2,2,6,11]],0,[[2,6,9]],0,[[2,6,1]],0,[[2,6,18]],0,[[6,17]],0,[[2,2,2,6,11,6,11,11]],0,[[2,7,2,2,6,11]],0,[[1,7,6,12]],0,[[1,7,6,9]],0,[[1,7,6,7]],0,[[1,7,6,1]],0,0,0,0,[[2,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[1,4,5]],0,[[2,6,2]],0,[[1,6,2]],0,[[1,6,2,7,7,6,6]],0,[[2,6,2,7,7,6,6]],0,[[1,7]],0,[[1,7,7,7,7,6,6,6]],0,[1,8],0,[2,8],0,[[2,1],8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[1,8],0,[13,8],0,[1,8],0,[1,8],0,[1,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9],0,[1],0,[2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,2],11],0,[[2,4,5,10],11],0,[[1,2],11],0,[[1,4,5,10],11],0,[10],0,[10],0,[9],0,[[2,7,6,6]],0,[[2,11,6,6]],0,[[2,6,2,11,6]],0,[[2,6,2,11,6,7]],0,[[2,2,11,6,6]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,[[2,2,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,5,11,2]],0,[[1,5,11,10]],0,[[1,4,5,11]],0,[[1,2]],0,[[1,6,2]],0,[[1,2,7]],0,[[1,2]],0,[[1,2,2,1]],0,[[1,2,1,7]],0,[[1,2,1,7,7]],0,[[1,2,6,6]],0,[[1,6,2,6,6]],0,[[2,1]],0,[[2,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,1,6,3]],0,[[11,6,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,9]],0,[[2,7]],0,[[]],0,[[2,9]],0,[[2,7]],0,[[2,9]],0,[[2,9]],0,[[2,7]],0,[[2,7]],0,[9],0,[[2,2]],0,[[9,9]],0,[[]],0,[1],0,[[1,2,11,6]],0,[[1,2,7]],0,[[1,7,12]],0,[[1,7,6,12]],0,[[1,7,9]],0,[[1,7,6,9]],0,[[1,7,7]],0,[[1,7,6,7]],0,[[1,7,1]],0,[[1,7,6,1]],0,[[1,7,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1]],0,[[1,7,6,1]],0,[[1,7,12,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1,1]],0,[[1,7,6,1]],0,[[1,7,12,12,12,12]],0,[[1,7,6,12]],0,[[1,7,9,9,9,9]],0,[[1,7,6,9]],0,[[1,7,7,7,7,7]],0,[[1,7,6,7]],0,[[1,7,1,1,1,1]],0,[[1,7,6,1]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[[1,7,6,8,12]],0,[[1,7,6,8,9]],0,[2],0,[[2,1,6,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2],0,[[7,7,6,6,2,2,11]],0,[[7,7,6,6,2,2,6,11]],0,[[]],0,[[2,2,6,6]],0,[[2,6,2,6,6]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,8]],0,[[1,10]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,2,7]],0,[[7,7,6,6]],0,[[1,6,7]],0,[[1,7,7,6,6]],0,[[1,7]],0,[[2,1]],0,[[2,1]],0,[[6,1,2,11,6]],0,[[1,6,3,7]],0,[[1,1,1]],0,[[2,7,1]],0,[[2,2,7,1]],0,[1],0,[[2,1]],0,[[2,2,2]],0,[[2,2,2,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,2,1]],0,[[2,2,1,4,5]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,7,7,6,7,2,2,11]],0,[[2,7,7,6,6,7,2,2,11]],0,[[2,6,2,6,6,8]],0,[[2,7,7,6,6,6,7,2,2,11]],0,[[2,6,2,6,6,6,8]],0,[[2,2,7]],0,[[2,2,1]],0,[[2,2,9]],0,[[2,2,9]],0,[[2,2,7]],0,[[2,2,7]],0,[[2,6,2,6]],0,[[2,6,2,6,6]],0,[[2,6,2,6,6,8]],0,[[2,6,2,6,6,6]],0,[[2,6,2,6,6,6,8]],0,[[2,7,7,6,2,2,11]],0,[[2,7,7,7,6,6,2,2,11]],0,[[2,7,7,7,7,6,6,6,2,2,11]],0,[[]],0,[[1,2,1]],0,[[1,2,1,4,5]],0,[[1,2,7]],0,[[1,2,1]],0,[[1,2,9]],0,[[1,2,9]],0,[[1,2,7]],0,[[1,2,7]],0,[[1,6,2,6]],0,[[1,6,2,6,6]],0,[[1,6,2,6,6,8]],0,[[1,6,2,6,6,6]],0,[[1,6,2,6,6,6,8]],0,[[1,7,7,6,2,2,11]],0,[[1,7,7,7,6,6,2,2,11]],0,[[1,7,7,7,7,6,6,6,2,2,11]],0,[[1,2,1,2,1,1,1,1]],0,[[1,1,1]],0,[[1,1,1,4,5]],0,[[1,6,3,2]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,12]],0,[[7,6,12]],0,[[7,9]],0,[[7,6,9]],0,[[7,7]],0,[[7,6,7]],0,[[7,1]],0,[[7,6,1]],0,[[7,12,12]],0,[[7,6,12]],0,[[7,9,9]],0,[[7,6,9]],0,[[7,7,7]],0,[[7,6,7]],0,[[7,1,1]],0,[[7,6,1]],0,[[7,12,12,12]],0,[[7,6,12]],0,[[7,9,9,9]],0,[[7,6,9]],0,[[7,7,7,7]],0,[[7,6,7]],0,[[7,1,1,1]],0,[[7,6,1]],0,[[7,12,12,12,12]],0,[[7,6,12]],0,[[7,9,9,9,9]],0,[[7,6,9]],0,[[7,7,7,7,7]],0,[[7,6,7]],0,[[7,1,1,1,1]],0,[[7,6,1]],0,[[1,1,1]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[7,6,8,12]],0,[[7,6,8,9]],0,[[2,6,1]],0,[2,8],0,[1,8],0,[1],0,[[1,10,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[1],0,[[1,1,1]],0,[[1,1,7,2,8,1]],0,[[1,1,7,2,1]],0,[[1,1,7,2,1]],0,[[1,1,1]],0,[[1,1]],0,[[1,1,1,4,6]],0,[[1,1,6,1,4,6]],0,[[1,12]],0,[[1,12]],0,[[1,9]],0,[[1,9]],0,[[1,19]],0,[[1,19]],0,[[1,12,12]],0,[[1,12]],0,[[1,9,9]],0,[[1,9]],0,[[1,19,19]],0,[[1,19]],0,[[1,12,12,12]],0,[[1,12]],0,[[1,9,9,9]],0,[[1,9]],0,[[1,19,19,19]],0,[[1,19]],0,[[1,20]],0,[[1,7]],0,[[1,19]],0,[[1,17,17,17,17]],0,[[1,17]],0,[[1,1]],0,[[1,18]],0,[[1,20]],0,[[1,12,12,12,12]],0,[[1,12]],0,[[1,9,9,9,9]],0,[[1,9]],0,[[1,7]],0,[[1,19,19,19,19]],0,[[1,19]],0,[[1,17]],0,[[1,1]],0,[[1,18]],0,[[1,1]],0,[[1,1]],0,[[1,7,2,8,1]],0,[[1,7]],0,[[1,7]],0,[[1,1]],0,[[1,1]],0,[[1,7,7]],0,[[1,7]],0,[[1,1,1]],0,[[1,1]],0,[[1,7,7,7]],0,[[1,7]],0,[[1,1,1,1]],0,[[1,1]],0,[[1,20]],0,[[1,7,7,7,7]],0,[[1,7]],0,[[1,19]],0,[[1,17]],0,[[1,1,1,1,1]],0,[[1,1]],0,[[1,18]],0,[[1,7,2,1]],0,[[1,7,2,6,11]],0,[[1,12]],0,[[1,12]],0,[[1,12,12]],0,[[1,12]],0,[[1,12,12,12]],0,[[1,12]],0,[[1,12,12,12,12]],0,[[1,12]],0,[[1,7,2,1]],0,[[1,7,2,6,11]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,2,8,1]],0,[[1,7,2,8,6,11]],0,[[1,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[2,1]],0,[[7,7,6,6]],0,[[1,6,9]],0,[[1,9,9,9,9]],0,[[1,9]],0,0,0,[[13,10,14]],0,0,0,[[]],[[]],[[]],[[]],[21],[11,22],[[],23],[[],23],[[],24],0,[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],[[],25],[21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24]],"c":[],"p":[[6,"GLuint",4137],[6,"GLenum",4137],[6,"GLchar",4137],[6,"GLintptr",4137],[6,"GLsizeiptr",4137],[6,"GLsizei",4137],[6,"GLint",4137],[6,"GLboolean",4137],[6,"GLfloat",4137],[6,"GLbitfield",4137],[6,"c_void",4207],[6,"GLdouble",4137],[6,"GLsync",4137],[6,"GLuint64",4137],[6,"GLDEBUGPROC",4137],[6,"GLint64",4137],[6,"GLubyte",4137],[6,"GLushort",4137],[6,"GLshort",4137],[6,"GLbyte",4137],[8,"FnMut",4208],[3,"FnPtr",0],[4,"Result",4209],[3,"TypeId",4210],[15,"bool"],[6,"GLDEBUGPROCARB",4137],[6,"GLDEBUGPROCKHR",4137],[6,"GLDEBUGPROCAMD",4137],[4,"__GLsync",4137],[4,"_cl_context",4137],[4,"_cl_event",4137]]},\
"glutin":{"doc":"The purpose of this library is to provide an OpenGL <code>context</code>…","t":"AAAAAAAAAAAAADLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLDINNEEDDDSSSIINSSSENQSLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKKLLLLLKLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLKLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMINNNNEDDNNIENNNEQIINNEQQIIEENNEQQDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMKKLLKKLLKLMLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLISSSSNNNQEEDSIIISQQQESSQQLLLLLLLLLLLLLLLLLLLLLLLLLKLKLKLKLLKLLLLLLKKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLKLNNNNNNNNNNNNNNNNDENNNNNNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCINNQNIENDNDEDIEDDEQIENNDNNNLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLLLLLLLKLKLKLKLLLKLKLKLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLMM","n":["api","config","context","display","error","platform","prelude","surface","cgl","config","context","display","surface","Config","alpha_size","api","borrow","borrow_mut","clone","clone_into","color_buffer_type","config_surface_types","depth_size","display","eq","equivalent","float_pixels","fmt","from","hardware_accelerated","into","num_samples","raw_config","srgb_capable","stencil_size","supports_transparency","to_owned","try_from","try_into","type_id","NotCurrentContext","PossiblyCurrentContext","borrow","borrow","borrow_mut","borrow_mut","config","config","context_api","context_api","display","display","fmt","fmt","from","from","into","into","is_current","make_current","make_current","make_current_draw_read","make_current_draw_read","make_not_current","raw_context","raw_context","treat_as_possibly_current","try_from","try_from","try_into","try_into","type_id","type_id","Display","borrow","borrow_mut","clone","clone_into","create_context","create_pbuffer_surface","create_pixmap_surface","create_window_surface","find_configs","fmt","from","get_proc_address","into","new","raw_display","supported_features","to_owned","try_from","try_into","type_id","version_string","Surface","borrow","borrow_mut","buffer_age","config","display","fmt","from","height","into","is_current","is_current_draw","is_current_read","is_single_buffered","raw_surface","resize","set_swap_interval","swap_buffers","try_from","try_into","type_id","width","Api","AsRawConfig","Cgl","Cgl","ColorBufferType","Config","ConfigSurfaceTypes","ConfigTemplate","ConfigTemplateBuilder","GLES1","GLES2","GLES3","GetGlConfig","GlConfig","Luminance","OPENGL","PBUFFER","PIXMAP","RawConfig","Rgb","Target","WINDOW","all","all","alpha_size","alpha_size","api","api","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color_buffer_type","color_buffer_type","compatible_with_native_window","complement","complement","config","config_surface_types","config_surface_types","contains","contains","default","default","depth_size","depth_size","difference","difference","display","empty","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","float_pixels","float_pixels","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hardware_accelerated","hardware_accelerated","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","num_samples","num_samples","partial_cmp","partial_cmp","prefer_hardware_accelerated","raw_config","raw_config","remove","remove","set","set","srgb_capable","srgb_capable","stencil_size","stencil_size","sub","sub","sub_assign","sub_assign","supports_transparency","supports_transparency","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","with_alpha_size","with_api","with_buffer_type","with_depth_size","with_float_pixels","with_multisampling","with_pbuffer_sizes","with_single_buffering","with_stencil_size","with_stereoscopy","with_surface_type","with_swap_interval","with_transparency","b_size","g_size","r_size","AsRawContext","Cgl","Cgl","Cgl","Compatibility","ContextApi","ContextAttributes","ContextAttributesBuilder","Core","Flush","GlContext","GlProfile","Gles","NoError","None","NotCurrentContext","NotCurrentContext","NotCurrentGlContext","NotCurrentGlContextSurfaceAccessor","NotRobust","OpenGl","PossiblyCurrentContext","PossiblyCurrentContext","PossiblyCurrentContext","PossiblyCurrentContextGlSurfaceAccessor","PossiblyCurrentGlContext","RawContext","ReleaseBehavior","RobustLoseContextOnReset","RobustNoResetNotification","Robustness","Surface","Surface","Version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config","config","context_api","context_api","context_api","default","default","default","default","default","display","display","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","is_current","is_current","major","make_current","make_current","make_current","make_current","make_current_draw_read","make_current_draw_read","make_current_draw_read","make_current_draw_read","make_not_current","make_not_current","minor","new","new","partial_cmp","raw_context","raw_context","raw_context","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","treat_as_possibly_current","treat_as_possibly_current","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_context_api","with_debug","with_profile","with_release_behavior","with_robustness","with_sharing","AsRawDisplay","CONTEXT_NO_ERROR","CONTEXT_RELEASE_BEHAVIOR","CONTEXT_ROBUSTNESS","CREATE_ES_CONTEXT","Cgl","Cgl","Cgl","Config","Display","DisplayApiPreference","DisplayFeatures","FLOAT_PIXEL_FORMAT","GetDisplayExtensions","GetGlDisplay","GlDisplay","MULTISAMPLING_PIXEL_FORMATS","NotCurrentContext","PbufferSurface","PixmapSurface","RawDisplay","SRGB_FRAMEBUFFERS","SWAP_CONTROL","Target","WindowSurface","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","create_context","create_context","create_pbuffer_surface","create_pbuffer_surface","create_pixmap_surface","create_pixmap_surface","create_window_surface","create_window_surface","difference","display","empty","eq","eq","equivalent","equivalent","extend","extensions","find_configs","find_configs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_proc_address","get_proc_address","hash","insert","intersection","intersects","into","into","into","into","is_all","is_empty","new","not","partial_cmp","raw_display","raw_display","remove","set","sub","sub_assign","supported_features","supported_features","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","version_string","version_string","BadAccess","BadAttribute","BadConfig","BadContext","BadContextState","BadCurrentSurface","BadDisplay","BadMatch","BadNativePixmap","BadNativeWindow","BadParameter","BadPbuffer","BadPixmap","BadSurface","ContextLost","Err","Error","ErrorKind","InitializationFailed","Misc","NotFound","NotSupported","Ok","OutOfMemory","Result","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","error_kind","fmt","fmt","fmt","fmt","from","from","from","hash","into","into","not_supported","raw_code","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","GlConfig","GlDisplay","GlSurface","NotCurrentGlContext","NotCurrentGlContextSurfaceAccessor","PossiblyCurrentContextGlSurfaceAccessor","PossiblyCurrentGlContext","AsRawSurface","Cgl","Cgl","Context","DontWait","GlSurface","NativePixmap","Pbuffer","PbufferSurface","Pixmap","PixmapSurface","RawSurface","Rect","ResizeableSurface","Surface","SurfaceAttributes","SurfaceAttributesBuilder","SurfaceType","SurfaceType","SurfaceTypeTrait","SwapInterval","Wait","Window","WindowSurface","WindowsPixmap","XcbPixmap","XlibPixmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_age","buffer_age","build","build","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","display","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","height","height","height","into","into","into","into","into","into","into","into","into","into","into","is_current","is_current","is_current_draw","is_current_draw","is_current_read","is_current_read","is_single_buffered","is_single_buffered","new","new","raw_surface","raw_surface","resize","resize","set_swap_interval","set_swap_interval","surface_type","surface_type","surface_type","surface_type","swap_buffers","swap_buffers","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","width","width","with_largest_pbuffer","with_single_buffer","with_single_buffer","with_srgb","x","y"],"q":[[0,"glutin"],[8,"glutin::api"],[9,"glutin::api::cgl"],[13,"glutin::api::cgl::config"],[40,"glutin::api::cgl::context"],[73,"glutin::api::cgl::display"],[95,"glutin::api::cgl::surface"],[117,"glutin::config"],[345,"glutin::config::ColorBufferType"],[348,"glutin::context"],[540,"glutin::display"],[668,"glutin::error"],[726,"glutin::prelude"],[733,"glutin::surface"],[939,"core::option"],[940,"core::fmt"],[941,"core::fmt"],[942,"core::any"],[943,"core::iter::traits::iterator"],[944,"alloc::boxed"],[945,"core::ffi::c_str"],[946,"core::ffi"],[947,"raw_window_handle"],[948,"alloc::string"],[949,"core::num::nonzero"],[950,"core::cmp"],[951,"raw_window_handle"],[952,"core::hash"],[953,"std::collections::hash::set"],[954,"core::clone"],[955,"core::default"],[956,"core::fmt"]],"d":["The underlying OpenGL platform Api.","Api config picking and creating utils.","OpenGL context creation and initialization.","The OpenGL platform display selection and creation.","Glutin error handling.","Platform-specific API helpers.","The glutin prelude.","A cross platform OpenGL surface representation.","The CGL Api.","Everything related to <code>NSOpenGLPixelFormat</code>.","Everything related to <code>NSOpenGLContext</code>.","A CGL display.","Wrapper around <code>NSView</code>.","A wrapper around NSOpenGLPixelFormat.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","A wrapper arounh <code>NSOpenGLContext</code> that is known to be not …","A wrapper around <code>NSOpenGLContext</code> that could be curront on …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The CGL display.","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create CGL display.","","","","","","","","A wrapper aroud <code>NSView</code>.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The Api supported by the config.","Get the raw config.","The CGL config.","NSOpenGLPixelFormat.","The buffer type baked by the config.","The GL configuration used to create <code>Surface</code> and <code>Context</code> in …","The types of the surface supported by the config.","The context configuration template that is used to find …","Builder for the <code>ConfigTemplate</code>.","Context supports OpenGL ES 1 API.","Context supports OpenGL ES 2 API.","Context supports OpenGL ES 3 API.","The trait to","The trait to group all common config option.","The backing buffer is using Luminance.","Context supports OpenGL API.","Context must support pbuffers.","Context must support pixmaps.","Raw config.","The backing buffer is using RGB format.","The config type.","Context must support windows.","Returns the set containing all flags.","Returns the set containing all flags.","The size of the alpha.","","The <code>crate::config::Api</code> supported by the configuration.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","Build the template to match the configs against.","","","","","","","","","","","","","","","","","The type of the underlying color buffer.","","Request config that can render to a particular native …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Get the GL config used to create a particular GL object.","The type of the surfaces that can be created with this …","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","The size of the depth buffer.","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","Whether the config uses floating pixels.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","Whether the config is hardware accelerated.","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Create a new configuration template builder.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","The number of samples in multisample buffer.","","","","Wether the configuration should prefer hardware …","Obtain the <code>RawConfig</code> of the underlying Api.","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Whether the config supports creating srgb capable <code>Surface</code>.","","The size of the stencil buffer.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Whether the config supports creating transparent surfaces.","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Number of alpha bits in the color buffer.","The set of apis that are supported by configuration.","The type of the color buffer.","Number of bits in the depth buffer.","Wether the floating pixel formats should be used.","Whether multisampling configurations should be picked. The …","With the maximum sizes of pbuffer.","Wether the single buffer should be used.","Number of bits in the stencil buffer.","Wether the stereo pairs should be present.","The types of the surfaces that must be supported by the …","With supported swap intervals.","Wether the configuration should support transparency.","Size of the blue component in bits.","Size of the green component in bits.","Size of the red component in bits.","A trait that provides raw context.","The CGL context.","The CGL context.","Pointer to NSOpenGLContext.","Include all the immediate more functions and definitions.","The rendering Api context should support.","The attributes that are used to create a graphics context.","The builder to help customizing context","Include all the future-compatible functions and …","Flushes the context that was previously current as if …","A trait to group common context operations.","Describes the requested OpenGL context profiles.","OpenGL Api version that should be used by the context.","The driver doesn’t check anything. This option is very …","Doesn’t do anything. Most notably doesn’t flush. Not …","A context that is known to be not current on the current …","The not current context type.","A trait to group common not current operations.","A trait that splits the methods accessing …","Not everything is checked. Your application can crash if …","OpenGL Api version that should be used by the context.","A context that is possibly current on the current thread.","The type of possibly current context.","The possibly current context produced when making not …","A trait that splits the methods accessing …","A trait to group common context operations.","Raw context.","The behavior of the driver when you change the current …","Everything is checked to avoid any crash. If a problem …","Everything is checked to avoid any crash. The driver will …","Specifies the tolerance of the OpenGL context to faults. …","The surface supported by the context.","The surface supported by the context.","The version used to index the Api.","","","","","","","","","","","","","","","","","","","","","Build the context attributes.","","","","","","","","","","","","","","","","","","","","Get the <code>ContextApi</code> used by the context.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this context is the current one in this …","","Major version of the Api.","Make <code>Self::Surface</code> on the calling thread producing the …","Make <code>Self::Surface</code> current on the calling thread.","","","The same as <code>Self::make_current</code>, but provides a way to set …","The same as <code>Self::make_current</code> but provides a way to set …","","","Make the context not current to the current thread and …","","Minor version of the Api.","Create new builder.","Create new version with the given <code>major</code> and <code>minor</code> values.","","Get the raw context handle.","","","","","","","","","","","Treat the not current context as possibly current. The …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the desired OpenGL context api. See the docs of …","Sets the <em>debug</em> flag for the OpenGL context.","Set the desired OpenGL context profile. See the docs of …","The behavior when changing the current context. See the …","Sets the robustness of the OpenGL context. See the docs of …","Share the display lists with the given context.","Get the raw handle to the <code>Display</code>.","The display supports creating <code>no error</code> context.","The display supports creating context with explicit …","The display supports creating <code>robust</code> context.","The display supports creating OpenGL ES <code>context</code>.","Use only CGL.","The CGL display.","Raw display is CGL.","A config that is used by the display.","The graphics display to handle underlying graphics …","Preference of the display that should be used.","The features and extensions supported by the <code>Display</code>.","The display supports <code>floating</code> pixel formats.","Obtain the underlying api extensions.","Get the <code>Display</code>.","A trait to group common display operations.","The display supports pixel formats with <code>multisampling</code>.","A context that is being used by the display.","A pbuffer surface created by the display.","A pixmap surface created by the display.","Raw GL platform display.","The display supports creating surfaces backed by <code>SRGB</code> …","The display supports changing the <code>swap interval</code> on …","The display used by the object.","A window surface created by the display.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Create the graphics platform context.","","Create the surface that can be used to render into pbuffer.","","Create the surface that can be used to render into pixmap.","","Create the surface that can be used to render into native …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Obtain the GL display used to create a particular GL …","Returns an empty set of flags.","","","","","","Supported extensions by the display.","Find configurations matching the given <code>template</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Return the address of an OpenGL function.","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Create a graphics platform display from the given raw …","Returns the complement of this set of flags.","","A raw handle to the underlying Api display.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Get the features supported by the display.","","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Helper to obtain the information about the underlying …","","Can’t access a requested resource.","An recognized attribute value was passed.","Invalid config was passed.","The context is no longer valid.","The context is in bad state.","The current surface of the calling thread is no longer …","The display is no longer valid.","Arguments are inconsistent. For example when shared …","Bad native pixmap was provided.","Bad native window was provided.","One or more argument values are invalid.","The pbuffer is invalid.","The pixmap is invalid.","The surface is invalid.","The context was lost.","Contains the error value","The error type for all the graphics platform operations.","A list specifying general categoires of native platform …","Failed to perform resource initialization.","The misc error that can’t be classified occurred.","The requested display wasn’t found or some required …","The operation is not supported by the platform.","Contains the success value","An operation could not be completed, because it failed to …","A specialized <code>Result</code> type for graphics operations.","","","","","","","","","","","The underlying error kind.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Helper to check that error is <code>ErrorKind::NotSupported</code>.","The underlying raw code in case it’s present.","","","","","","","","","","","","","","","","","","Trait for accessing the raw GL surface.","The CGL surface.","Pointer to <code>NSView</code>.","The context to access surface data.","When this variant is used calling …","A trait to group common operations on the surface.","A platform native pixmap.","Pbuffer surface.","Marker that used to type-gate methods for pbuffer.","Pixmap surface.","Marker that used to type-gate methods for pixmap.","Handle to the raw OpenGL surface.","The rect that is being used in various surface operations.","Marker indicating that the surface could be resized.","The GL surface that is used for rendering.","Attributes which are used for creating a particular …","Builder to get the required set of attributes initialized …","The underlying type of the surface.","The type of the surface.","The marker trait to indicate the type of the surface.","A swap interval.","The swap is synchronized to the <code>n</code>’th video frame. This …","The window surface.","Marker that used to type-gate methods for window.","HBITMAP handle for windows bitmap.","XID of X11 pixmap from xcb.","XID of X11 pixmap.","","","","","","","","","","","","","","","","","","","","","","","The age of the back buffer of that surface. The <code>0</code> …","","Build the surface attributes suitable to create a window …","Build the surface attributes suitable to create a pixmap …","Build the surface attributes suitable to create a pbuffer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The <strong>physical</strong> height of the underlying surface.","","Rect height.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether the surface is current on to the current …","","Check whether the surface is the current draw surface to …","","Check whether the surface is the current read surface to …","","Check whether the surface is single buffered.","","Get new surface attributes.","Helper to simplify rectangle creation.","Get the raw handle to the surface.","","Resize the surface to a new size.","","Set swap interval for the surface.","","Get the type of the surface.","","","","Swaps the underlying back buffers when the surface is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <strong>physical</strong> width of the underlying surface.","","Rect width.","Request the largest pbuffer.","Specify whether the single buffer should be used instead …","The same as in …","Specify whether the surface should support srgb or not. …","<code>X</code> of the origin.","<code>Y</code> of the origin."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,14,13,14,13,14,14,13,14,13,13,14,13,14,13,14,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,39,10,0,0,0,0,0,3,3,3,0,0,4,3,6,6,0,4,70,6,6,3,71,39,71,39,6,3,6,3,6,3,6,3,6,3,6,3,6,3,40,24,6,3,4,39,10,40,24,6,3,4,39,10,40,40,24,6,3,4,39,10,40,24,6,3,4,39,10,6,3,71,39,40,6,3,70,71,39,6,3,40,24,71,39,6,3,39,6,3,6,3,4,39,10,6,3,4,39,10,6,3,71,39,40,24,6,6,6,6,6,3,3,3,3,3,4,39,10,40,24,6,3,4,39,10,6,3,6,3,6,3,6,3,71,39,6,3,6,3,6,3,6,3,40,24,6,3,4,39,10,6,3,6,3,40,6,3,71,39,6,3,40,72,39,6,3,6,3,71,39,71,39,6,3,6,3,71,39,6,3,40,24,6,3,4,39,10,6,3,40,24,6,3,4,39,10,40,24,6,3,4,39,10,40,24,6,3,4,39,10,6,3,40,40,40,40,40,40,40,40,40,40,40,40,40,73,73,73,0,51,52,17,48,0,0,0,48,50,0,0,15,47,50,0,74,0,0,47,15,0,75,76,0,0,0,0,47,47,0,76,77,0,46,19,47,48,15,49,50,51,52,17,46,19,47,48,15,49,50,51,52,17,46,46,19,47,48,15,49,50,17,46,19,47,48,15,49,50,17,49,51,52,78,51,52,46,19,47,15,50,51,52,47,48,15,49,50,17,47,48,15,49,50,17,46,19,47,48,15,49,50,51,52,17,46,19,47,48,15,49,50,51,52,17,46,19,47,48,15,49,50,51,52,17,74,52,49,76,77,51,52,76,77,51,52,74,52,49,46,49,49,53,51,52,46,19,47,48,15,49,50,17,75,51,46,19,47,48,15,49,50,51,52,17,46,19,47,48,15,49,50,51,52,17,46,19,47,48,15,49,50,51,52,17,46,46,46,46,46,46,0,31,31,31,31,57,54,30,79,0,0,0,31,0,0,0,31,79,79,79,0,31,31,80,79,31,31,31,31,31,31,31,31,57,54,31,30,57,54,31,30,54,31,30,54,31,30,31,31,31,79,54,79,54,79,54,79,54,31,80,31,31,30,31,30,31,81,79,54,57,54,31,31,31,31,31,30,57,54,31,30,31,31,31,31,79,54,31,31,31,31,57,54,31,30,31,31,54,31,31,82,54,31,31,31,31,79,54,31,54,31,30,31,57,54,31,30,57,54,31,30,57,54,31,30,31,79,54,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,16,0,0,59,59,59,59,16,59,0,58,59,58,59,58,59,58,59,59,59,58,58,58,59,59,58,58,59,59,58,59,58,58,58,59,58,59,58,59,58,59,58,59,0,0,0,0,0,0,0,0,61,36,83,38,0,0,66,0,66,0,0,0,0,0,0,0,0,83,0,0,38,66,0,63,63,63,62,21,23,20,22,66,61,38,63,36,67,62,21,23,20,22,66,61,38,63,36,67,83,61,62,62,62,62,21,23,20,22,66,38,63,36,67,62,21,23,20,22,66,38,63,36,67,62,21,23,20,22,67,61,23,20,22,38,63,36,67,23,20,22,38,63,36,67,62,21,23,20,22,66,61,38,63,36,67,62,21,23,20,22,66,61,38,63,36,67,67,83,61,67,62,21,23,20,22,66,61,38,63,36,67,83,61,83,61,83,61,83,61,62,67,84,61,83,61,83,61,33,23,20,22,83,61,62,21,23,20,22,66,38,63,36,67,62,21,23,20,22,66,61,38,63,36,67,62,21,23,20,22,66,61,38,63,36,67,62,21,23,20,22,66,61,38,63,36,67,83,61,67,62,62,62,62,67,67],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,3],[[]],[[]],[1,1],[[]],[1,[[5,[4]]]],[1,6],[1,2],[1],[[1,1],7],[[],7],[1,7],[[1,8],9],[[]],[1,7],[[]],[1,2],[1,10],[1,7],[1,2],[1,[[5,[7]]]],[[]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[]],[[]],[13],[14],[13,15],[14,15],[13],[14],[[13,8],9],[[14,8],9],[[]],[[]],[[]],[[]],[14,7],[13,16],[14,16],[13,16],[14,16],[14,16],[13,17],[14,17],[13,14],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,[[]],[[]],[18,18],[[]],[[18,19],16],[[18,[21,[20]]],16],[[18,[21,[22]]],16],[[18,[21,[23]]],16],[[18,24],[[16,[[26,[25]]]]]],[[18,8],9],[[]],[[18,27],28],[[]],[29,[[16,[18]]]],[18,30],[18,31],[[]],[[],11],[[],11],[[],12],[18,32],0,[[]],[[]],[[[34,[33]]],35],[[[34,[33]]]],[[[34,[33]]]],[[[34,[33]],8],9],[[]],[[[34,[33]]],[[5,[35]]]],[[]],[[[34,[33]]],7],[[[34,[33]]],7],[[[34,[33]]],7],[[[34,[33]]],7],[[[34,[33]]],36],[[[34,[33]],37,37]],[[[34,[33]],38],16],[[[34,[33]]],16],[[],11],[[],11],[[],12],[[[34,[33]]],[[5,[35]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],3],[[],2],[39,2],[[],3],[39,3],[[6,6],6],[[3,3],3],[[6,6]],[[3,3]],[[6,6],6],[[3,3],3],[[6,6]],[[3,3]],[6,2],[3,2],[[6,6],6],[[3,3],3],[[6,6]],[[3,3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,24],[40,40],[24,24],[6,6],[3,3],[4,4],[39,39],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],41],[[3,3],41],[[],[[5,[4]]]],[39,[[5,[4]]]],[[40,42],40],[6,6],[3,3],[[]],[[],6],[39,6],[[6,6],7],[[3,3],7],[[],40],[[],24],[[],2],[39,2],[[6,6],6],[[3,3],3],[39],[[],6],[[],3],[[6,6],7],[[3,3],7],[[4,4],7],[[39,39],7],[[10,10],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[6,43]],[[3,43]],[[],7],[39,7],[[40,8],9],[[24,8],9],[[6,8],9],[[6,8],9],[[6,8],9],[[6,8],9],[[6,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[3,8],9],[[4,8],9],[[39,8],9],[[10,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[5,[6]]]],[2,[[5,[3]]]],[2,6],[2,3],[2,6],[2,3],[43,6],[43,3],[[],7],[39,7],[[6,44]],[[3,44]],[[6,6]],[[3,3]],[[6,6],6],[[3,3],3],[[6,6],7],[[3,3],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,7],[3,7],[6,7],[3,7],[[],40],[6,6],[3,3],[[],2],[39,2],[[6,6],[[5,[41]]]],[[3,3],[[5,[41]]]],[[40,[5,[7]]],40],[[],10],[39,10],[[6,6]],[[3,3]],[[6,6,7]],[[3,3,7]],[[],7],[39,7],[[],2],[39,2],[[6,6],6],[[3,3],3],[[6,6]],[[3,3]],[[],[[5,[7]]]],[39,[[5,[7]]]],[[6,6],6],[[3,3],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6]],[[3,3]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[6,6],6],[[3,3],3],[[40,2],40],[[40,3],40],[[40,4],40],[[40,2],40],[[40,7],40],[[40,2],40],[[40,37,37],40],[[40,7],40],[[40,2],40],[[40,[5,[7]]],40],[[40,6],40],[[40,[5,[45]],[5,[45]]],40],[[40,7],40],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[46,[5,[42]]],19],[46,46],[19,19],[47,47],[48,48],[15,15],[49,49],[50,50],[17,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,49],41],[51],[52],[[],15],[51,15],[52,15],[[],46],[[],19],[[],47],[[],15],[[],50],[51],[52],[[47,47],7],[[48,48],7],[[15,15],7],[[49,49],7],[[50,50],7],[[17,17],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[46,8],9],[[19,8],9],[[47,8],9],[[48,8],9],[[15,8],9],[[49,8],9],[[50,8],9],[[51,8],9],[[52,8],9],[[17,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[52,7],0,[[],16],[[],16],[51,16],[52,16],[[],16],[[],16],[51,16],[52,16],[[],16],[52,16],0,[[],46],[[2,2],49],[[49,49],[[5,[41]]]],[[],17],[51,17],[52,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[46,15],46],[[46,7],46],[[46,48],46],[[46,50],46],[[46,47],46],[[46,53],46],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],[[31,31],31],[[31,31]],[[31,31],31],[[31,31]],[31,35],[[31,31],31],[[31,31]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[31,31],[30,30],[[]],[[]],[[]],[[31,31],41],[31,31],[[31,31],7],[19,16],[[54,19],16],[[[21,[20]]],16],[[54,[21,[20]]],16],[[[21,[22]]],16],[[54,[21,[22]]],16],[[[21,[23]]],16],[[54,[21,[23]]],16],[[31,31],31],[[]],[[],31],[[31,31],7],[[30,30],7],[[],7],[[],7],[[31,43]],[[],[[56,[55]]]],[24,[[16,[[26,[25]]]]]],[[54,24],[[16,[[26,[25]]]]]],[[57,8],9],[[54,8],9],[[31,8],9],[[31,8],9],[[31,8],9],[[31,8],9],[[31,8],9],[[30,8],9],[[]],[[]],[[]],[[]],[35,[[5,[31]]]],[35,31],[35,31],[43,31],[27,28],[[54,27],28],[[31,44]],[[31,31]],[[31,31],31],[[31,31],7],[[]],[[]],[[]],[[]],[31,7],[31,7],[[29,57],[[16,[54]]]],[31,31],[[31,31],[[5,[41]]]],[[],30],[54,30],[[31,31]],[[31,31,7]],[[31,31],31],[[31,31]],[[],31],[54,31],[[31,31],31],[[]],[[]],[[]],[[31,31]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[31,31],31],[[],32],[54,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[58,58],[59,59],[[]],[[]],[[59,59],7],[[],7],[58,59],[[58,8],9],[[58,8],9],[[59,8],9],[[59,8],9],[59,58],[[]],[[]],[[59,44]],[[]],[[]],[58,7],[58,[[5,[60]]]],[[]],[[]],[[],32],[[],32],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[[61,[33]]],35],[[[62,[23]],42,37,37],[[21,[23]]]],[[[62,[22]],63],[[21,[22]]]],[[[62,[20]],37,37],[[21,[20]]]],[[[62,[[0,[64,33,65]]]]],[[62,[[0,[64,33,65]]]]]],[[[21,[[0,[64,33]]]]],[[21,[[0,[64,33]]]]]],[23,23],[20,20],[22,22],[66,66],[38,38],[63,63],[36,36],[67,67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[62,[[0,[65,33,65]]]]]],[[],[[21,[[0,[65,33]]]]]],[[],23],[[],20],[[],22],[[],67],[[[61,[33]]]],[[23,23],7],[[20,20],7],[[22,22],7],[[38,38],7],[[63,63],7],[[36,36],7],[[67,67],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[62,[[0,[68,33,65]]]],8],9],[[[21,[[0,[68,33]]]],8],9],[[23,8],9],[[20,8],9],[[22,8],9],[[66,8],9],[[[61,[[0,[68,33]]]],8],9],[[38,8],9],[[63,8],9],[[36,8],9],[[67,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[67,44]],[[],[[5,[35]]]],[[[61,[33]]],[[5,[35]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[[61,[33]]],7],[[],7],[[[61,[33]]],7],[[],7],[[[61,[33]]],7],[[],7],[[[61,[33]]],7],[[],[[62,[[0,[33,65]]]]]],[[69,69,69,69],67],[[],36],[[[61,[33]]],36],[[37,37]],[[[61,[33]],37,37]],[38,16],[[[61,[33]],38],16],[[],66],[[],66],[[],66],[[],66],[[],16],[[[61,[33]]],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],[[5,[35]]]],[[[61,[33]]],[[5,[35]]]],0,[[[62,[20]],7],[[62,[20]]]],[[[62,[23]],7],[[62,[23]]]],[[[62,[20]],7],[[62,[20]]]],[[[62,[[0,[33,65]]]],[5,[7]]],[[62,[[0,[33,65]]]]]],0,0],"c":[],"p":[[3,"Config",13],[15,"u8"],[3,"Api",117],[4,"ColorBufferType",117],[4,"Option",939],[3,"ConfigSurfaceTypes",117],[15,"bool"],[3,"Formatter",940],[6,"Result",940],[4,"RawConfig",117],[4,"Result",941],[3,"TypeId",942],[3,"NotCurrentContext",40],[3,"PossiblyCurrentContext",40],[4,"ContextApi",348],[6,"Result",668],[4,"RawContext",348],[3,"Display",73],[3,"ContextAttributes",348],[3,"PbufferSurface",733],[3,"SurfaceAttributes",733],[3,"PixmapSurface",733],[3,"WindowSurface",733],[3,"ConfigTemplate",117],[8,"Iterator",943],[3,"Box",944],[3,"CStr",945],[4,"c_void",946],[4,"RawDisplayHandle",947],[4,"RawDisplay",540],[3,"DisplayFeatures",540],[3,"String",948],[8,"SurfaceTypeTrait",733],[3,"Surface",95],[15,"u32"],[4,"RawSurface",733],[3,"NonZeroU32",949],[4,"SwapInterval",733],[4,"Config",117],[3,"ConfigTemplateBuilder",117],[4,"Ordering",950],[4,"RawWindowHandle",947],[8,"IntoIterator",951],[8,"Hasher",952],[15,"u16"],[3,"ContextAttributesBuilder",348],[4,"Robustness",348],[4,"GlProfile",348],[3,"Version",348],[4,"ReleaseBehavior",348],[4,"NotCurrentContext",348],[4,"PossiblyCurrentContext",348],[8,"AsRawContext",348],[4,"Display",540],[15,"str"],[3,"HashSet",953],[4,"DisplayApiPreference",540],[3,"Error",668],[4,"ErrorKind",668],[15,"i64"],[4,"Surface",733],[3,"SurfaceAttributesBuilder",733],[4,"NativePixmap",733],[8,"Clone",954],[8,"Default",955],[4,"SurfaceType",733],[3,"Rect",733],[8,"Debug",940],[15,"i32"],[8,"GetGlConfig",117],[8,"GlConfig",117],[8,"AsRawConfig",117],[13,"Rgb",345],[8,"PossiblyCurrentGlContext",348],[8,"NotCurrentGlContext",348],[8,"NotCurrentGlContextSurfaceAccessor",348],[8,"PossiblyCurrentContextGlSurfaceAccessor",348],[8,"GlContext",348],[8,"GlDisplay",540],[8,"GetGlDisplay",540],[8,"GetDisplayExtensions",540],[8,"AsRawDisplay",540],[8,"GlSurface",733],[8,"AsRawSurface",733]]},\
"glutin_winit":{"doc":"This library provides helpers for cross-platform <code>glutin</code> …","t":"EDNINLLLLLKLLLLLLLLFLLLLLLLKLLLLLLLLLL","n":["ApiPrefence","DisplayBuilder","FallbackEgl","GlWindow","PreferEgl","borrow","borrow","borrow_mut","borrow_mut","build","build_surface_attributes","clone","clone","clone_into","clone_into","default","default","eq","equivalent","finalize_window","fmt","fmt","from","from","into","into","new","resize_surface","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_preference","with_window_builder"],"q":[[0,"glutin_winit"],[38,"winit::event_loop"],[39,"glutin::config"],[40,"core::ops::function"],[41,"core::error"],[42,"alloc::boxed"],[43,"core::result"],[44,"glutin::surface"],[45,"glutin::surface"],[46,"glutin::config"],[47,"core::fmt"],[48,"core::fmt"],[49,"core::any"],[50,"core::option"]],"d":["Simplified version of the <code>DisplayApiPreference</code> which is …","The helper to perform <code>Display</code> creation and OpenGL platform …","Fallback to <code>EGL</code> when failed to create the system profile.","<code>Window</code> extensions for working with <code>glutin</code> surfaces.","Prefer <code>EGL</code> over system provider like <code>GLX</code> and <code>WGL</code>.","","","","","Initialize the OpenGL platform and create a compatible …","Build the surface attributes suitable to create a window …","","","","","","","","","Finalize <code>Window</code> creation by applying the options from the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create new display builder.","Resize the surface to the window inner size.","","","","","","","","","The preference in picking the configuration.","The window builder to use when building a window."],"i":[0,0,11,0,11,1,11,1,11,1,25,1,11,1,11,1,11,11,11,0,1,11,1,11,1,11,1,25,1,11,1,11,1,11,1,11,1,1],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2,3,4],[[7,[[6,[5]]]]]],[[[9,[8]]],[[10,[8]]]],[1,1],[11,11],[[]],[[]],[[],1],[[],11],[[11,11],12],[[],12],[[2,13,14],[[7,[15,16]]]],[[1,17],18],[[11,17],18],[[]],[[]],[[]],[[]],[[],1],[[[21,[[0,[19,20]]]],22]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],23],[[],23],[[1,11],1],[[1,[24,[13]]],1]],"c":[],"p":[[3,"DisplayBuilder",0],[3,"EventLoopWindowTarget",38],[3,"ConfigTemplateBuilder",39],[8,"FnOnce",40],[8,"Error",41],[3,"Box",42],[4,"Result",43],[3,"WindowSurface",44],[3,"SurfaceAttributesBuilder",44],[3,"SurfaceAttributes",44],[4,"ApiPrefence",0],[15,"bool"],[3,"WindowBuilder",45],[4,"Config",39],[3,"Window",45],[3,"OsError",46],[3,"Formatter",47],[6,"Result",47],[8,"SurfaceTypeTrait",44],[8,"ResizeableSurface",44],[4,"Surface",44],[4,"PossiblyCurrentContext",48],[3,"TypeId",49],[4,"Option",50],[8,"GlWindow",0]]},\
"grid":{"doc":"Two Dimensional Grid","t":"DDDLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Grid","GridColIter","GridRowIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cols","eq","equivalent","fill","fill_with","flatten","fmt","from","from","from","from_vec","get","get_mut","get_unchecked","get_unchecked_mut","grid","index","index","index_mut","index_mut","init","insert_col","insert_row","into","into","into","into_iter","into_iter","into_vec","is_empty","iter","iter_col","iter_col_mut","iter_cols","iter_mut","iter_row","iter_row_mut","iter_rows","new","next","next","pop_col","pop_row","push_col","push_row","remove_col","remove_row","rows","size","to_owned","transpose","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"grid"],[72,"core::clone"],[73,"core::cmp"],[74,"core::ops::function"],[75,"alloc::vec"],[76,"core::fmt"],[77,"core::fmt"],[78,"core::slice::iter"],[79,"core::iter::adapters::step_by"],[80,"core::slice::iter"],[81,"core::result"],[82,"core::any"]],"d":["Stores elements of a certain type in a 2D grid structure.","","","","","","","","","Clears the grid.","","","Returns the number of columns of the grid.","","","Fills the grid with elements by cloning <code>value</code>.","Fills the grid with elements returned by calling a closure …","Returns a reference to the internal data structure of the …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a grid from a vector with a given column length. …","Access a certain element in the grid. Returns None if an …","Mutable access to a certain element in the grid. Returns …","Returns a reference to an element, without performing …","Returns a mutable reference to an element, without …","Init a grid with values.","","","","","Init a grid of size rows x columns with the given data …","Insert a new column at the index.","Insert a new row at the index and shifts all rows after …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts self into a vector without clones or allocation.","Returns true if the grid contains no elements. For example:","Returns an iterator over the whole grid, starting from the …","Returns an iterator over a column.","Returns a mutable iterator over a column.","Iterate over the columns of the grid. Each time an …","Returns an mutable iterator over the whole grid that …","Returns an iterator over a row.","Returns a mutable iterator over a row.","Iterate over the rows of the grid. Each time an iterator …","Init a grid of size rows x columns with default values of …","","","Removes the last column from a grid and returns it, or …","Removes the last row from a grid and returns it, or None …","Add a new column to the grid.","Add a new row to the grid.","Remove a column at the index and return a vector of it.","Remove a Row at the index and return a vector of it.","Returns the number of rows of the grid.","Returns the size of the gird as a two element tuple. First …","","Transpose the grid so that columns become rows in new grid.","","","","","","","","",""],"i":[0,0,0,1,17,16,1,17,16,1,1,1,1,1,1,1,1,1,1,1,17,16,1,1,1,1,1,0,1,1,1,1,1,1,1,1,17,16,17,16,1,1,1,1,1,1,1,1,1,1,1,17,16,1,1,1,1,1,1,1,1,1,1,1,17,16,1,17,16,1,17,16],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1],[[[1,[2]]],[[1,[2]]]],[[]],[1,3],[[[1,[4]],[1,[4]]],5],[[],5],[[[1,[2]],2]],[[1,6]],[1,7],[[[1,[8]],9],10],[[]],[[]],[[]],[[7,3],1],[[1,3,3],11],[[1,3,3],11],[[1,3,3]],[[1,3,3]],0,[1],[[1,3],12],[[1,3],12],[1],[[3,3,2],[[1,[2]]]],[[1,3,7]],[[1,3,7]],[[]],[[]],[[]],[[]],[[]],[1,7],[1,5],[1,13],[[1,3],[[14,[13]]]],[[1,3],[[14,[15]]]],[1,16],[1,15],[[1,3],13],[[1,3],15],[1,17],[[3,3],[[1,[18]]]],[17,11],[16,11],[1,[[11,[7]]]],[1,[[11,[7]]]],[[1,7]],[[1,7]],[[1,3],[[11,[7]]]],[[1,3],[[11,[7]]]],[1,3],[1],[[]],[[[1,[2]]],[[1,[2]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20]],"c":[],"p":[[3,"Grid",0],[8,"Clone",72],[15,"usize"],[8,"Eq",73],[15,"bool"],[8,"FnMut",74],[3,"Vec",75],[8,"Debug",76],[3,"Formatter",76],[6,"Result",76],[4,"Option",77],[15,"slice"],[3,"Iter",78],[3,"StepBy",79],[3,"IterMut",78],[3,"GridColIter",0],[3,"GridRowIter",0],[8,"Default",80],[4,"Result",81],[3,"TypeId",82]]},\
"instant":{"doc":"","t":"DGSSSSSGSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLL","n":["Duration","Instant","MAX","MICROSECOND","MILLISECOND","NANOSECOND","SECOND","SystemTime","ZERO","add","add_assign","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","borrow","borrow_mut","checked_add","checked_div","checked_mul","checked_sub","clone","clone_into","cmp","default","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","eq","equivalent","fmt","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","hash","into","is_zero","mul","mul_assign","mul_f32","mul_f64","new","now","partial_cmp","saturating_add","saturating_mul","saturating_sub","sub","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","to_owned","try_from","try_from_secs_f32","try_from_secs_f64","try_into","type_id"],"q":[[0,"instant"],[69,"core::option"],[70,"core::cmp"],[71,"core::fmt"],[72,"core::fmt"],[73,"core::hash"],[74,"core::iter::traits::iterator"],[75,"core::time"],[76,"core::any"]],"d":["A <code>Duration</code> type to represent a span of time, typically …","","The maximum duration.","The duration of one microsecond.","The duration of one millisecond.","The duration of one nanosecond.","The duration of one second.","","A duration of zero time.","","","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","","","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","","","","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","Calls <code>U::from(self)</code>.","Returns true if this <code>Duration</code> spans no time.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","Creates a new <code>Duration</code> from the specified number of whole …","The current time, expressed in milliseconds since the Unix …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","",""],"i":[0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1]],[1,2],[1,2],[1,2],[1,3],[1,4],[1,5],[[]],[[]],[[1,1],[[6,[1]]]],[[1,7],[[6,[1]]]],[[1,7],[[6,[1]]]],[[1,1],[[6,[1]]]],[1,1],[[]],[[1,1],8],[[],1],[[1,7],1],[[1,7]],[[1,1],4],[[1,1],5],[[1,4],1],[[1,5],1],[[1,1],9],[[],9],[[1,10],[[12,[11]]]],[[]],[3,1],[3,1],[3,1],[3,1],[4,1],[5,1],[[1,13]],[[]],[1,9],[[1,7],1],[[1,7]],[[1,4],1],[[1,5],1],[[3,7],1],[[],5],[[1,1],[[6,[8]]]],[[1,1],1],[[1,7],1],[[1,1],1],[[1,1],1],[[1,1]],[1,7],[1,7],[1,7],[14,1],[14,1],[[]],[[],12],[4,[[12,[1,15]]]],[5,[[12,[1,15]]]],[[],12],[[],16]],"c":[],"p":[[3,"Duration",0],[15,"u128"],[15,"u64"],[15,"f32"],[15,"f64"],[4,"Option",69],[15,"u32"],[4,"Ordering",70],[15,"bool"],[3,"Formatter",71],[3,"Error",71],[4,"Result",72],[8,"Hasher",73],[8,"Iterator",74],[3,"TryFromFloatSecsError",75],[3,"TypeId",76]]},\
"kurbo":{"doc":"2D geometry, with a focus on curves.","t":"DDDDDNDNDDDNRQDSSSDDNDNRDNDSIIIIIIIIEQEDDNDDDNDDDDIDDEDNNDNSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLLLLLLLLLLLLLKLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLFLLLLLLLLLLLLLLLLKLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLKLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMMMMMMMMMMMKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLKKLLLLLMFLKLLLLALLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLMMMMMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMMLIRRRRRRRRRRRRRRRKFFFFFDLLLLLLLLLLLNDEDNLLLLLLLLLLLLLLLLLLLLFLLLLLLLLL","n":["Affine","Arc","BezPath","Circle","CircleSegment","ClosePath","ConstPoint","Cubic","CubicBez","CubicBezIter","CurveFitSample","CurveTo","DEFAULT_ACCURACY","DerivResult","Ellipse","FLIP_X","FLIP_Y","IDENTITY","Insets","Line","Line","LineIntersection","LineTo","MAX_EXTREMA","MinDistance","MoveTo","Nearest","ORIGIN","ParamCurve","ParamCurveArclen","ParamCurveArea","ParamCurveCurvature","ParamCurveDeriv","ParamCurveExtrema","ParamCurveFit","ParamCurveNearest","PathEl","PathElementsIter","PathSeg","PathSegIter","Point","Quad","QuadBez","QuadBezIter","QuadSpline","QuadTo","Rect","RoundedRect","RoundedRectRadii","Segments","Shape","Size","SvgArc","SvgParseError","TranslateScale","UnexpectedEof","UnknownCommand","Vec2","Wrong","ZERO","ZERO","ZERO","ZERO","ZERO","abs","abs","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","angle","append_iter","apply_affine","approx_spline","arclen","arclen","arclen","arclen","arclen","arclen","are_nonnegative","area","area","area","area","area","area","area","area","area","area","area","area","area","area","as_circle","as_circle","as_circle","as_coeffs","as_line","as_line","as_line","as_line","as_path_el","as_path_slice","as_path_slice","as_path_slice","as_rect","as_rect","as_rect","as_rounded_rect","as_rounded_rect","as_rounded_rect","as_single_radius","as_tuple","aspect_ratio","aspect_ratio","atan2","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_left","bottom_right","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","break_cusp","ceil","ceil","ceil","ceil","center","center","center","center","center","center","clamp","clamp","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_path","common","contained_rect_with_aspect_ratio","contains","contains","contains","contains","cross","crossing_point","cubics_to_quadratic_splines","curvature","curvature","curvature","curve_to","default","default","default","default","default","default","default","default","default","default","default","default","deriv","deriv","deriv","deriv","deriv","determinant","distance","distance","distance_sq","distance_squared","div","div","div_assign","div_assign","dot","elements","elements_mut","end","end","end","end","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eval","eval","eval","eval","eval","eval","expand","expand","expand","expand","extend","extrema","extrema","extrema","extrema","extrema","extrema_ranges","extrema_ranges","fit_to_bezpath","fit_to_bezpath_opt","fit_to_cubic","flatten","flatten","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine","from_angle","from_center_size","from_iter","from_origin_size","from_origin_size","from_path_segments","from_points","from_points","from_rect","from_rect","from_single_radius","from_svg","from_svg_arc","from_vec","gauss_arclen","gauss_arclen","get_seg","height","height","height","hypot","hypot2","inflate","inflections","inner_radius","inset","intersect","intersect_line","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_path","into_path","into_path","inv_arclen","inv_arclen","inv_arclen","inv_arclen","inv_arclen","inverse","inverse","is_empty","is_empty","is_empty","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_straight_line","iter","large_arc","length","length","length_squared","lerp","lerp","line_t","line_to","map_unit_square","max_side","max_x","max_y","midpoint","min_dist","min_side","min_x","min_y","moment_integrals","moment_integrals","move_to","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","nearest","nearest","nearest","nearest","nearest","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","next","next","next","nonnegative","normalize","offset","origin","origin","outer_radius","p","p0","p0","p0","p1","p1","p1","p2","p2","p3","path_elements","path_elements","path_elements","path_elements","path_elements","path_elements","path_elements","path_elements","path_elements","path_elements","path_elements","path_elements","path_segments","path_segments","perimeter","perimeter","perimeter","perimeter","perimeter","perimeter","perimeter","perimeter","perimeter","perimeter","perimeter","perimeter","points","pop","pre_rotate","pre_rotate_about","pre_scale","pre_scale_non_uniform","pre_translate","push","quad_to","radii","radii","radii","radii","radii_and_rotation","radius","raise","rect","reverse","rotate","rotate_about","rotation","round","round","round","round","sample_pt_deriv","sample_pt_tangent","scale","scale","scale_from_origin","scale_non_uniform","segment","segment_t","segments","segments","signed_area","signed_area","signed_area","signed_area","signed_area","simplify","size","size","skew","start","start","start","start","start","start_angle","start_angle","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","subdivide","subdivide","subdivide","subdivide","subsegment","subsegment","subsegment","subsegment","subsegment","subsegment","sweep","sweep_angle","sweep_angle","t","t1","t2","tangent","then_rotate","then_rotate_about","then_scale","then_scale_non_uniform","then_translate","to","to_cubic","to_cubic_beziers","to_ellipse","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path","to_path","to_path","to_point","to_quads","to_quads","to_rect","to_rounded_rect","to_rounded_rect","to_size","to_string","to_string","to_string","to_string","to_string","to_svg","to_vec2","to_vec2","top_left","top_right","transform_rect_bbox","translate","translate","translation","trunc","trunc","trunc","trunc","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform","uniform_xy","union","union_pt","width","width","width","winding","winding","winding","winding","winding","winding","winding","winding","winding","winding","winding","winding","with_center","with_origin","with_radii","with_rotation","with_size","with_translation","write_to","x","x","x0","x0","x1","x1","x_rotation","x_rotation","x_value","y","y","y0","y0","y1","y1","y_value","FloatExt","GAUSS_LEGENDRE_COEFFS_11","GAUSS_LEGENDRE_COEFFS_16","GAUSS_LEGENDRE_COEFFS_16_HALF","GAUSS_LEGENDRE_COEFFS_24","GAUSS_LEGENDRE_COEFFS_24_HALF","GAUSS_LEGENDRE_COEFFS_3","GAUSS_LEGENDRE_COEFFS_32","GAUSS_LEGENDRE_COEFFS_32_HALF","GAUSS_LEGENDRE_COEFFS_4","GAUSS_LEGENDRE_COEFFS_5","GAUSS_LEGENDRE_COEFFS_6","GAUSS_LEGENDRE_COEFFS_7","GAUSS_LEGENDRE_COEFFS_8","GAUSS_LEGENDRE_COEFFS_8_HALF","GAUSS_LEGENDRE_COEFFS_9","expand","factor_quartic_inner","solve_cubic","solve_itp","solve_quadratic","solve_quartic","CubicOffset","borrow","borrow_mut","break_cusp","from","into","new","sample_pt_deriv","sample_pt_tangent","try_from","try_into","type_id","Optimize","SimplifyBezPath","SimplifyOptLevel","SimplifyOptions","Subdivide","angle_thresh","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","break_cusp","default","from","from","from","into","into","into","moment_integrals","new","opt_level","sample_pt_deriv","sample_pt_tangent","simplify_bezpath","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"kurbo"],[969,"kurbo::common"],[991,"kurbo::offset"],[1003,"kurbo::simplify"],[1038,"core::option"],[1039,"core::ops::range"],[1040,"core::clone"],[1041,"core::iter::traits::iterator"],[1042,"alloc::vec"],[1043,"core::convert"],[1044,"core::iter::traits::collect"],[1045,"arrayvec::arrayvec"],[1046,"core::ops::function"],[1047,"core::fmt"],[1048,"core::fmt"],[1049,"core::iter::sources::once"],[1050,"core::iter::adapters::chain"],[1051,"alloc::string"],[1052,"core::any"],[1053,"std::io"],[1054,"std::io::error"]],"d":["A 2D affine transform.","A single arc segment.","A Bézier path.","A circle.","A segment of a circle.","Close off the path.","A trivial “curve” that is just a constant.","A cubic bezier segment.","A single cubic Bézier segment.","An iterator for cubic beziers.","A sample point of a curve for fitting.","Draw a cubic bezier using the current location and the …","A default value for methods that take an ‘accuracy’ …","The parametric curve obtained by taking the derivative of …","An ellipse.","A transform that is flipped on the x-axis.","A transform that is flipped on the y-axis. Useful for …","The identity transform.","Insets from the edges of a rectangle.","A single line.","A line segment.","An intersection of a <code>Line</code> and a <code>PathSeg</code>.","Draw a line from the current location to the point.","The maximum number of extrema that can be reported in the …","The minimum distance between two Bézier curves.","Move directly to the point without drawing anything, …","The nearest position on a curve to some point.","The point at the origin; (0, 0).","A curve parametrized by a scalar.","A parametrized curve that can have its arc length measured.","A parametrized curve that can have its signed area …","A parametrized curve that reports its curvature.","A differentiable parametrized curve.","A parametrized curve that reports its extrema.","The source curve for curve fitting.","A parametrized curve that reports the nearest point.","The element of a Bézier path.","The iterator returned by the <code>path_elements</code> method.","A segment of a Bézier path.","An iterator for path segments.","A 2D point.","A quadratic bezier segment.","A single quadratic Bézier segment.","An iterator for quadratic beziers.","A quadratic Bézier spline in B-spline format.","Draw a quadratic bezier using the current location and the …","A rectangle.","A rectangle with equally rounded corners.","Radii for each corner of a rounded rectangle.","An iterator that transforms path elements to path segments.","A generic trait for open and closed shapes.","A 2D size.","A single SVG arc segment.","An error which can be returned when parsing an SVG.","A transformation including scaling and translation.","The input string ended while still expecting input.","Encountered an unknown command letter.","A 2D vector.","A number was expected.","Zeroed insets.","The point (0, 0).","The empty rectangle at the origin.","A size with zero width or height.","The vector (0, 0).","Take absolute value of width and height.","Takes the absolute value of all corner radii.","","","In this context adding a <code>Vec2</code> applies the corresponding …","","","","","","","","","","","","","","","","","Find the angle in radians between this vector and the …","Create an iterator generating Bezier path elements.","Apply an affine transform to the path.","Return a <code>QuadSpline</code> approximating this cubic Bézier.","The arc length of the curve.","","Arclength of a cubic Bézier segment.","","","Arclength of a quadratic Bézier segment.","Return <code>true</code> iff all values are nonnegative.","Signed area.","","Note: shape isn’t closed so area is not well defined.","Signed area.","The area under the curve.","","","","Returning zero here is consistent with the contract (area …","","","The area of the rectangle.","","The area covered by this size.","If the shape is a circle, make it available.","If the shape is a circle, make it available.","","Get the coefficients of the transform.","If the shape is a line, make it available.","If the shape is a line, make it available.","","","Get the <code>PathEl</code> that is equivalent to discarding the …","If the shape is stored as a slice of path elements, make …","If the shape is stored as a slice of path elements, make …","","If the shape is a rectangle, make it available.","If the shape is a rectangle, make it available.","","If the shape is a rounded rectangle, make it available.","If the shape is a rounded rectangle, make it available.","","If all radii are equal, returns the value of the radii. …","Decompose transformation into translation and scale.","The aspect ratio of the <code>Rect</code>.","Returns the aspect ratio of a rectangle with the given …","Find the angle in radians between this vector and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The radius of the bottom-left corner.","The radius of the bottom-right corner.","The smallest rectangle that encloses the shape.","","The smallest rectangle that encloses the curve in the …","The smallest rectangle that encloses the curve in the …","","","","","","","","","","","Find a cusp or corner within the given range.","Returns a new <code>Point</code>, with <code>x</code> and <code>y</code> rounded up to the …","Returns a new <code>Rect</code>, with each coordinate value rounded up …","Returns a new <code>Size</code>, with <code>width</code> and <code>height</code> rounded up to …","Returns a new <code>Vec2</code>, with <code>x</code> and <code>y</code> rounded up to the nearest …","Returns the center of this ellipse.","The center point of the rectangle.","The center point of the rectangle.","The center.","The arc’s centre point.","The center.","For each corner, takes the min of that corner’s radius …","Returns a new size bounded by <code>min</code> and <code>max.</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Push a “close path” element onto the path.","Common mathematical operations","Returns the largest possible <code>Rect</code> that is fully contained …","Returns <code>true</code> if the <code>Point</code> is inside this shape.","Returns <code>true</code> if the <code>Point</code> is inside this shape.","Returns <code>true</code> if <code>point</code> lies within <code>self</code>.","","Cross product of two vectors.","Computes the point where two lines, if extended to …","Convert multiple cubic Bézier curves to quadratic splines.","Compute the signed curvature at parameter <code>t</code>.","Compute the signed curvature at parameter <code>t</code>.","","Push a “curve to” element onto the path.","","","","","","","","","","","","","The derivative of the curve.","","","","","Compute the determinant of this transform.","Euclidean distance.","The shortest distance between any two points on the two …","The square of the distance from the nearest position on …","Squared Euclidean distance.","","Note: division by a scalar is implemented by multiplying …","","","Dot product of two vectors.","Get the path elements.","Get the path elements (mut version).","The end point.","The end point.","","","","","","","","","","","","","","","","","","","","","","Evaluate the curve at parameter <code>t</code>.","","","","","","Returns a new <code>Point</code>, with <code>x</code> and <code>y</code> rounded away from zero …","Returns a new <code>Rect</code>, with each coordinate value rounded …","Returns a new <code>Size</code>, with <code>width</code> and <code>height</code> rounded away …","Returns a new <code>Vec2</code>, with <code>x</code> and <code>y</code> rounded away from zero to …","","Compute the extrema of the curve.","","","","","Return parameter ranges, each of which is monotonic within …","Return parameter ranges, each of which is monotonic within …","Generate a Bézier path that fits the source curve.","Generate a highly optimized Bézier path that fits the …","Fit a single cubic to a range of the source curve.","Flatten the path, invoking the callback repeatedly.","Flatten the path, invoking the callback repeatedly.","Returns a new <code>Point</code>, with <code>x</code> and <code>y</code> rounded down to the …","Returns a new <code>Rect</code>, with each coordinate value rounded …","Returns a new <code>Size</code>, with <code>width</code> and <code>height</code> rounded down to …","Returns a new <code>Vec2</code>, with <code>x</code> and <code>y</code> rounded down to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","The arc’s start point.","Create an ellipse from an affine transformation of the …","A unit vector of the given angle.","A new rectangle from center and size.","","A new rectangle from origin and size.","A new rectangle from origin and size.","Create a BezPath with segments corresponding to the …","A new rectangle from two points.","A new rectangle from two <code>Point</code>s.","Returns the largest ellipse that can be bounded by this …","A new rounded rectangle from a rectangle and corner radii.","Create a new RoundedRectRadii from a single radius. The …","Try to parse a bezier path from an SVG path element.","Creates an <code>Arc</code> from a <code>SvgArc</code>.","Create a path from a vector of path elements.","Estimate arclength using Gaussian quadrature.","Estimate arclength using Gaussian quadrature.","Get the segment at the given element index.","The height of the rectangle.","The height of the rectangle.","The height.","Magnitude of vector.","Magnitude squared of vector.","Expand a rectangle by a constant amount in both directions.","Determine the inflection points.","The inner radius.","Create a new <code>Rect</code> by applying the <code>Insets</code>.","The intersection of two rectangles.","Compute intersections against a line.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Convert into a Bézier path.","Convert into a Bézier path.","","Solve for the parameter that has the given arc length from …","Solve for the parameter that has the given arc length from …","","","","Compute the inverse transform.","Compute the inverse transform.","Returns <code>true</code> if the path contains no segments.","Whether this rectangle has zero area.","Whether this size has zero area.","Is this circle segment finite?","Is this map finite?","Is this path finite?","Is this path element finite?","Is this Bezier path finite?","Is this line intersection finite?","Is this circle finite?","Is this cubic Bezier curve finite?","Is this ellipse finite?","Are these insets finite?","Is this line finite?","Is this point finite?","Is this point finite?","Is this quadratic Bezier curve finite?","Is this rectangle finite?","Is this rounded rectangle finite?","Returns true if all radius values are finite.","Is this size finite?","Is this translate/scale finite?","Is this Vec2 finite?","Is this circle segment NaN?","Is this map NaN?","Is this path NaN?","Is this path element NaN?","Is this Bezier path NaN?","Is this line intersection NaN?","Is this circle NaN?","Is this cubic Bezier curve NaN?","Is this ellipse NaN?","Are these insets NaN?","Is this line NaN?","Is this point NaN?","Is this point NaN?","Is this quadratic Bezier curve NaN?","Is this rectangle NaN?","Is this rounded rectangle NaN?","Returns true if any corner radius value is NaN.","Is this size NaN?","Is this translate/scale NaN?","Is this Vec2 NaN?","Checks that arc is actually a straight line.","Returns an iterator over the path’s elements.","Does this arc sweep through more than π radians?","The length of the line.","Magnitude of vector.","Magnitude squared of vector.","Linearly interpolate between two points.","Linearly interpolate between two vectors.","The ‘time’ that the intersection occurs, on the line.","Push a “line to” element onto the path.","Creates an affine transformation that takes the unit …","Returns the max of <code>width</code> and <code>height</code>.","Returns the maximum value for the x-coordinate of the …","Returns the maximum value for the y-coordinate of the …","Determine the midpoint of two points.","Minimum distance between two PathSegs","Returns the min of <code>width</code> and <code>height</code>.","Returns the minimum value for the x-coordinate of the …","Returns the minimum value for the y-coordinate of the …","Compute moment integrals.","Compute moment integrals.","Push a “move to” element onto the path.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Find the position on the curve that is nearest to the …","","Find the nearest point, using subdivision.","","Find the nearest point, using analytical algorithm based …","","","Create a <code>CircleSegment</code> out of its constituent parts.","Construct an affine transform from coefficients.","Create a new <code>Arc</code>.","Create a new path.","A new circle from center and radius.","Create a new cubic Bézier segment.","Create A new ellipse with a given center, radii, and …","New insets. The ordering of the arguments is “left, top, …","Create a new line.","Create a new <code>Point</code> with the provided <code>x</code> and <code>y</code> coordinates.","Create a new quadratic Bézier segment.","Construct a new <code>QuadSpline</code> from an array of <code>Point</code>s.","A new rectangle from minimum and maximum coordinates.","A new rectangle from minimum and maximum coordinates.","Create a new RoundedRectRadii. This function takes radius …","Create a new <code>Size</code> with the provided <code>width</code> and <code>height</code>.","Create a new transformation from translation and scale.","Create a new vector.","","","","","Return new <code>Insets</code> with all negative values replaced with …","Returns a vector of magnitude 1.0 with the same angle as …","Computation of offset curves of cubic Béziers, based on a …","The origin of the rectangle.","The origin of the rectangle.","The outer radius.","A point on the curve at the sample location.","","The line’s start point.","","","The line’s end point.","","","","","Returns an iterator over this shape expressed as <code>PathEl</code>s; …","","","","","","","","","","","","Returns an iterator over this shape expressed as Bézier …","Returns an iterator over this shape expressed as Bézier …","Total length of perimeter.","","The perimeter of the ellipse.","","","","","","","","","","Return the spline’s control <code>Point</code>s.","Removes the last <code>PathEl</code> from the path and returns it, or …","A rotation by <code>th</code> followed by <code>self</code>.","A rotation by <code>th</code> about <code>center</code> followed by <code>self</code>.","A scale by <code>scale</code> followed by <code>self</code>.","A scale by <code>(scale_x, scale_y)</code> followed by <code>self</code>.","A translation of <code>trans</code> followed by <code>self</code>.","Push a generic path element onto the path.","Push a “quad to” element onto the path.","Returns the two radii of this ellipse.","Radii of the rounded corners.","The arc’s radii, where the vector’s x-component is the …","The arc’s radii, where the vector’s x-component is the …","Returns the radii and the rotation of this ellipse.","The radius.","Raise the order by 1.","The (non-rounded) rectangle.","Returns a new <code>PathSeg</code> describing the same path as <code>self</code>, …","An affine transform representing rotation.","An affine transform representing a rotation of <code>th</code> radians …","The ellipse’s rotation, in radians.","Returns a new <code>Point</code>, with <code>x</code> and <code>y</code> rounded to the nearest …","Returns a new <code>Rect</code>, with each coordinate value rounded to …","Returns a new <code>Size</code>, with <code>width</code> and <code>height</code> rounded to the …","Returns a new <code>Vec2</code>, with <code>x</code> and <code>y</code> rounded to the nearest …","Evaluate the point and derivative at parameter <code>t</code>.","Evaluate the curve and its tangent at parameter <code>t</code>.","An affine transform representing uniform scaling.","Create a new transformation with scale only.","Scales the <code>Rect</code> by <code>factor</code> with respect to the origin (the …","An affine transform representing non-uniform scaling with …","Create a <code>CircleSegment</code> by cutting out parts of this circle.","The ‘time’ that the intersection occurs, on the path …","Transform an iterator over path elements into one over path","Iterate over the path segments.","Compute the signed area under the curve.","","","","","Simplification of a Bézier path.","Returns the total delta represented by these insets as a …","The size of the rectangle.","An affine transformation representing a skew.","The start point.","The start point.","","","","The angle to start drawing the segment (in radians).","The start angle in radians.","","","In this context subtracting a <code>Vec2</code> applies the …","","","","","","","","","","","","","","","","","","Subdivide into (roughly) halves.","Subdivide into (roughly) halves.","Subdivide into halves, using de Casteljau.","Subdivide into halves, using de Casteljau.","Get a subsegment of the curve for the given parameter …","","","","","","Determines if the arc should begin moving at positive …","The arc length of the segment (in radians).","The angle between the start and end of the arc, in radians.","The position on the curve of the nearest point, as a …","The position of the nearest point on the first curve, as a …","The position of the nearest point on the second curve, as …","A vector tangent to the curve at the sample location.","<code>self</code> followed by a rotation of <code>th</code>.","<code>self</code> followed by a rotation of <code>th</code> about `center.","<code>self</code> followed by a scale of <code>scale</code>.","<code>self</code> followed by a scale of <code>(scale_x, scale_y)</code>.","<code>self</code> followed by a translation of <code>trans</code>.","The arc’s end point.","Convert this segment to a cubic bezier.","Converts an Arc into a series of cubic bezier segments.","Returns the <code>Ellipse</code> that is bounded by this <code>Rect</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Convert to a Bézier path.","Convert to a Bézier path.","","Convert this vector into a <code>Point</code>.","Convert to quadratic Béziers.","Return an iterator over the implied <code>QuadBez</code> sequence.","Convert this <code>Size</code> into a <code>Rect</code> with origin <code>(0.0, 0.0)</code>.","Creates a new <code>RoundedRect</code> from this <code>Rect</code> and the provided …","Convert this <code>Size</code> into a <code>RoundedRect</code> with origin <code>(0.0, 0.0)</code>…","Convert this vector into a <code>Size</code>.","","","","","","Convert the path to an SVG path string representation.","Convert this point into a <code>Vec2</code>.","Convert this size into a <code>Vec2</code>, with <code>width</code> mapped to <code>x</code> and …","The radius of the top-left corner.","The radius of the top-right corner.","Compute the bounding box of a transformed rectangle.","An affine transform representing translation.","Create a new transformation with translation only.","Returns the translation part of this affine map (…","Returns a new <code>Point</code>, with <code>x</code> and <code>y</code> rounded towards zero to …","Returns a new <code>Rect</code>, with each coordinate value rounded …","Returns a new <code>Size</code>, with <code>width</code> and <code>height</code> rounded down …","Returns a new <code>Vec2</code>, with <code>x</code> and <code>y</code> rounded towards zero to …","Shorten the path, keeping the first <code>len</code> elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","New uniform insets.","New insets with uniform values along each axis.","The smallest rectangle enclosing two rectangles.","Compute the union with one point.","The width of the rectangle.","The width of the rectangle.","The width.","The winding number of a point.","","Note: shape isn’t closed, so a point’s winding number …","Winding number of point.","","","","","Same consideration as <code>area</code>.","","Note: this function is carefully designed so that if the …","","Create a new <code>Ellipse</code> centered on the provided point.","Create a new <code>Rect</code> with the same size as <code>self</code> and a new …","Create a new <code>Ellipse</code> with the provided radii.","Create a new <code>Ellipse</code>, with the rotation replaced by …","Create a new <code>Rect</code> with the same origin as <code>self</code> and a new …","Replaces the translation portion of this affine map","Write the SVG representation of this path to the provided …","The x coordinate.","The x-coordinate.","The minimum x coordinate (left edge).","The minimum x coordinate (left edge).","The maximum x coordinate (right edge).","The maximum x coordinate (right edge).","How much the arc is rotated, in radians.","How much the arc is rotated, in radians.","The total delta on the x-axis represented by these insets.","The y coordinate.","The y-coordinate.","The minimum y coordinate (top edge in y-down spaces).","The minimum y coordinate (top edge in y-down spaces).","The maximum y coordinate (bottom edge in y-down spaces).","The maximum y coordinate (bottom edge in y-down spaces).","The total delta on the y-axis represented by these insets.","Adds convenience methods to <code>f32</code> and <code>f64</code>.","","","","","","","","","","","","","","","","Rounds to the nearest integer away from zero, unless the …","Factor a quartic into two quadratics.","Find real roots of cubic equation.","Solve an arbitrary function for a zero-crossing.","Find real roots of quadratic equation.","Find real roots of a quartic equation.","The offset curve of a cubic Bézier.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new curve from Bézier segment and offset.","","","","","","Optimize subdivision points.","A Bézier path which has been prepared for simplification.","Optimization level for simplification.","Options for simplifying paths.","Subdivide; faster but not as optimized results.","Set angle threshold.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Set up a new Bézier path for simplification.","Set optimization level.","","","Simplify a Bézier path.","","","","","","","","",""],"i":[0,0,0,0,0,25,0,20,0,0,0,25,0,62,0,16,16,16,0,0,20,0,25,0,0,25,0,9,0,0,0,0,0,0,0,0,0,63,0,0,0,20,0,0,0,25,0,0,0,0,0,0,0,0,0,42,42,0,42,7,9,1,11,4,1,2,3,5,6,7,8,9,9,1,1,10,11,12,4,4,9,9,11,12,4,4,14,15,17,64,20,17,8,21,22,7,63,3,14,15,20,5,17,6,8,22,1,1,10,11,63,63,5,16,63,63,20,8,20,63,63,15,63,63,1,63,63,10,2,12,1,11,4,46,47,3,48,52,49,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,42,12,4,46,47,3,48,52,49,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,42,12,4,2,2,63,3,65,65,14,15,20,5,17,6,8,22,1,10,38,9,1,11,4,6,1,10,3,14,5,2,11,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,12,4,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,12,4,15,0,1,63,63,1,1,4,8,0,66,66,8,15,16,15,5,6,7,9,1,10,2,11,12,4,62,17,8,21,22,16,9,46,32,9,11,4,11,4,4,15,15,67,67,17,8,22,16,14,15,25,20,5,17,6,7,8,9,22,18,1,10,2,11,4,67,20,17,8,21,22,9,1,11,4,15,65,20,17,8,22,65,65,0,0,0,0,15,9,1,11,4,16,14,15,25,20,28,5,17,6,7,8,21,32,9,9,22,18,1,1,10,2,11,11,33,42,42,12,4,4,46,47,3,48,52,49,16,16,14,15,25,20,20,20,20,28,31,5,17,6,6,7,7,7,7,8,21,32,9,9,22,18,1,1,1,10,2,2,2,11,11,33,42,12,4,4,33,6,4,1,15,1,10,15,1,10,6,10,2,15,14,15,62,62,15,1,10,11,4,4,1,17,3,1,1,20,46,47,3,48,52,49,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,42,12,4,47,48,49,15,15,31,63,63,15,64,64,20,8,21,16,12,15,1,11,3,16,15,25,20,28,5,17,6,7,8,21,9,22,1,10,2,11,12,4,3,16,15,25,20,28,5,17,6,7,8,21,9,22,1,10,2,11,12,4,33,15,33,8,4,4,9,4,28,15,16,11,1,1,9,20,11,1,1,38,38,15,16,16,16,16,16,16,16,16,16,16,16,16,11,12,12,12,12,12,12,12,12,12,12,12,12,12,4,16,11,12,4,68,20,17,8,22,7,4,3,16,14,15,5,17,6,7,8,9,22,18,1,10,2,11,12,4,47,48,49,31,7,4,0,1,10,3,52,17,8,22,17,8,22,17,22,17,63,3,14,15,20,5,17,6,8,22,1,10,63,63,63,3,14,15,20,5,17,6,8,22,1,10,18,15,16,16,16,16,16,15,15,6,10,14,33,6,5,22,10,20,16,16,6,9,1,11,4,38,38,16,12,1,16,5,28,0,15,69,20,17,8,22,0,7,1,16,67,67,17,8,22,3,14,3,5,6,7,8,9,9,9,1,1,1,10,11,12,4,9,9,11,12,4,67,67,17,22,67,20,17,8,21,22,33,3,14,32,46,46,52,16,16,16,16,16,33,20,14,1,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,12,4,63,63,15,4,17,18,11,1,11,4,9,1,11,42,4,15,9,11,2,2,16,16,12,16,9,1,11,4,15,46,47,3,48,52,49,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,42,12,4,46,47,3,48,52,49,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,42,12,4,46,47,3,48,52,49,16,14,15,25,20,28,31,5,17,6,7,8,21,32,9,22,18,1,10,2,11,33,42,12,4,7,7,1,1,1,10,11,63,3,14,15,20,5,17,6,8,22,1,10,6,1,6,6,1,16,15,9,4,7,1,7,1,14,33,7,9,4,7,1,7,1,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,61,0,0,0,61,59,60,59,61,60,59,61,60,59,60,59,61,60,59,61,60,60,59,60,60,0,60,59,61,60,59,61,60,59,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[[3,4],3],[[5,4],5],[[6,4],6],[[7,1],1],[[8,4],8],[9,9],[[9,4],9],[[1,7],1],[[1,4],1],[[10,4],10],[[11,11],11],[[12,4],12],[[4,12],12],[[4,4],4],[9],[[9,4]],[[11,11]],[[12,4]],[[4,4]],[4,13],0,[[15,16]],[[17,13],[[19,[18]]]],[13,13],[[20,13],13],[[17,13],13],[[8,13],13],[[21,13],13],[[22,13],13],[7,23],[[],13],[3,13],[14,13],[15,13],[20,13],[5,13],[17,13],[6,13],[8,13],[22,13],[1,13],[1,13],[10,13],[11,13],[[],[[19,[5]]]],[[],[[19,[5]]]],[5,[[19,[5]]]],[16,[[24,[13]]]],[[],[[19,[8]]]],[[],[[19,[8]]]],[20,[[19,[8]]]],[8,[[19,[8]]]],[20,25],[[],[[19,[[26,[25]]]]]],[[],[[19,[[26,[25]]]]]],[15,[[19,[[26,[25]]]]]],[[],[[19,[1]]]],[[],[[19,[1]]]],[1,[[19,[1]]]],[[],[[19,[10]]]],[[],[[19,[10]]]],[10,[[19,[10]]]],[2,[[19,[13]]]],[12],[1,13],[11,13],[4,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[3,1],[[],1],[[],1],[14,1],[15,1],[20,1],[5,1],[17,1],[6,1],[8,1],[22,1],[1,1],[10,1],[[[27,[13]]],[[19,[13]]]],[9,9],[1,1],[11,11],[4,4],[6,9],[1,9],[10,9],0,0,0,[[2,13],2],[[11,11,11],11],[16,16],[14,14],[15,15],[25,25],[20,20],[28,28],[[[31,[[0,[29,30]]]]],[[31,[[0,[29,30]]]]]],[5,5],[17,17],[6,6],[7,7],[8,8],[21,21],[32,32],[9,9],[22,22],[18,18],[1,1],[10,10],[2,2],[11,11],[33,33],[12,12],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],0,[[1,13],1],[9,23],[9,23],[[1,9],23],[[1,9],23],[[4,4],13],[[8,8],[[19,[9]]]],[[[26,[17]],13],[[19,[[34,[18]]]]]],[13,13],[13,13],[[8,13],13],[[15,[35,[9]],[35,[9]],[35,[9]]]],[[],16],[[],15],[[],5],[[],6],[[],7],[[],9],[[],1],[[],10],[[],2],[[],11],[[],12],[[],4],[[]],[17,22],[8,21],[21,21],[22,8],[16,13],[[9,9],13],0,0,[[9,9],13],[[11,13],11],[[4,13],4],[[11,13]],[[4,13]],[[4,4],13],[15,[[26,[25]]]],[15,[[26,[25]]]],[[],9],[[],9],[17,9],[8,9],[22,9],[[16,16],23],[[14,14],23],[[15,15],23],[[25,25],23],[[20,20],23],[[5,5],23],[[17,17],23],[[6,6],23],[[7,7],23],[[8,8],23],[[9,9],23],[[22,22],23],[[18,18],23],[[1,1],23],[[10,10],23],[[2,2],23],[[11,11],23],[[4,4],23],[13,9],[[20,13],9],[[17,13],9],[[8,13],9],[[21,13],9],[[22,13],9],[9,9],[1,1],[11,11],[4,4],[[15,36]],[[],[[37,[13]]]],[20,[[37,[13]]]],[17,[[37,[13]]]],[8,[[37,[13]]]],[22,[[37,[13]]]],[[],[[37,[[27,[13]]]]]],[[],[[37,[[27,[13]]]]]],[[38,13],15],[[38,13],15],[[38,[27,[13]],13],19],[[36,13,39]],[[15,13,39]],[9,9],[1,1],[11,11],[4,4],[[16,40],41],[[14,40],41],[[15,40],41],[[25,40],41],[[20,40],41],[[28,40],41],[[5,40],41],[[17,40],41],[[6,40],41],[[7,40],41],[[8,40],41],[[21,40],41],[[32,40],41],[[9,40],41],[[9,40],41],[[22,40],41],[[18,40],41],[[1,40],41],[[1,40],41],[[10,40],41],[[2,40],41],[[11,40],41],[[11,40],41],[[33,40],41],[[42,40],41],[[42,40],41],[[12,40],41],[[4,40],41],[[4,40],41],[[]],[[]],[[]],[[]],[[]],[[]],[12,16],[[]],[[]],[[]],[[]],[8,20],[22,20],[17,20],[[]],[[]],[[]],[[]],[[]],[[]],[5,6],[[]],[[],7],[13,7],[[],7],[[]],[[]],[[]],[[]],[[],9],[[]],[[]],[[],1],[[],1],[[]],[[]],[[]],[13,2],[[],2],[[]],[[],11],[[]],[[]],[[]],[[]],[[],4],0,[16,6],[13,4],[[[35,[9]],[35,[11]]],1],[36,15],[[[35,[9]],[35,[11]]],1],[[[35,[9]],[35,[11]],[35,[2]]],10],[30,15],[[[35,[9]],[35,[9]]],1],[[[35,[9]],[35,[9]],[35,[2]]],10],[1,6],[[1,[35,[2]]],10],[13,2],[43,[[44,[15,42]]]],[33,[[19,[14]]]],[[[34,[25]]],15],[26,13],[26,13],[[15,45],[[19,[20]]]],[1,13],[10,13],0,[4,13],[4,13],[[1,13,13],1],[17,[[37,[13]]]],0,[[1,[35,[7]]],1],[[1,1],1],[[20,8],[[37,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15],[15],[[]],[13,15],[13,15],[[15,13],15],[[13,13],13],[[13,13],13],[[20,13,13],13],[[8,13,13],13],[[21,13,13],13],[16,16],[12,12],[15,23],[1,23],[11,23],[3,23],[16,23],[15,23],[25,23],[20,23],[28,23],[5,23],[17,23],[6,23],[7,23],[8,23],[21,23],[9,23],[22,23],[1,23],[10,23],[2,23],[11,23],[12,23],[4,23],[3,23],[16,23],[15,23],[25,23],[20,23],[28,23],[5,23],[17,23],[6,23],[7,23],[8,23],[21,23],[9,23],[22,23],[1,23],[10,23],[2,23],[11,23],[12,23],[4,23],[33,23],[15,[[0,[30,29]]]],0,[8,13],[4,13],[4,13],[[9,9,13],9],[[4,4,13],4],0,[[15,[35,[9]]]],[1,16],[11,13],[1,13],[1,13],[[9,9],9],[[20,20,13],46],[11,13],[1,13],[1,13],[[[27,[13]]]],[[[27,[13]]]],[[15,[35,[9]]]],[[16,6]],[[16,9],9],[[16,15],15],[[16,15],15],[[16,5]],[[16,25],25],[[16,20],20],[[16,17],17],[[16,8],8],[[16,22],22],[[16,14]],[[16,16],16],[[11,13],11],[[12,20],20],[[12,17],17],[[12,2],2],[[12,12],12],[[12,8],8],[[12,9],9],[[12,15],15],[[12,1],1],[[12,22],22],[[12,15],15],[[12,25],25],[[12,5],5],[[12,10],10],[[4,13],4],[[16,16]],[[11,13]],[[12,12]],[[4,13]],[[9,13],32],[[20,9,13],32],[[17,9,13],32],[[8,9,13],32],[[22,9,13],32],[7,7],[4,4],[[[35,[9]],13,13,13,13],3],[[[24,[13]]],16],[[[35,[9]],[35,[4]],13,13,13],14],[[],15],[[[35,[9]],13],5],[[[35,[9]],[35,[9]],[35,[9]],[35,[9]]],17],[[[35,[9]],[35,[4]],13],6],[[13,13,13,13],7],[[[35,[9]],[35,[9]]],8],[[13,13],9],[[[35,[9]],[35,[9]],[35,[9]]],22],[[[34,[9]]],18],[[13,13,13,13],1],[[13,13,13,13,[35,[2]]],10],[[13,13,13,13],2],[[13,13],11],[[4,13],12],[[13,13],4],[47,[[19,[25]]]],[48,[[19,[25]]]],[49,[[19,[25]]]],[[[31,[30]]],[[19,[20]]]],[7,7],[4,4],0,[1,9],[10,9],0,0,0,0,0,0,0,0,0,0,0,[13],[[3,13],[[51,[[51,[[51,[[51,[[50,[25]],[50,[25]]]],0]],[50,[25]]]],0]]]],[[14,13]],[[15,13]],[[20,13],47],0,[[17,13],48],[[6,13]],0,[[22,13],49],0,0,[13,31],[13,31],[13,13],[[3,13],13],[[14,13],13],[[15,13],13],[[20,13],13],[[5,13],13],[[17,13],13],[[6,13],13],[[8,13],13],[[22,13],13],[[1,13],13],[[10,13],13],[18,[[26,[9]]]],[15,[[19,[25]]]],[[16,13],16],[[16,13,9],16],[[16,13],16],[[16,13,13],16],[[16,4],16],[[15,25]],[[15,[35,[9]],[35,[9]]]],[6,4],[10,2],0,0,[6],0,[22,17],[10,1],[20,20],[13,16],[[13,9],16],[6,13],[9,9],[1,1],[11,11],[4,4],[13],[[13,13],52],[13,16],[13,12],[[1,13],1],[[13,13],16],[[5,13,13,13],3],0,[36,31],[15,[[0,[30,29]]]],[[],13],[20,13],[17,13],[8,13],[22,13],0,[7,11],[1,11],[[13,13],16],[[],9],[[],9],[17,9],[8,9],[22,9],0,0,[[3,4],3],[[5,4],5],[[6,4],6],[[7,1],1],[[8,4],8],[[9,4],9],[[9,9],4],[9,9],[[1,1],7],[[1,7],1],[[1,4],1],[[10,4],10],[[11,11],11],[[12,4],12],[[4,4],4],[[9,4]],[9],[[11,11]],[[12,4]],[[4,4]],[[]],[[]],[17],[22],[[[27,[13]]]],[[20,[27,[13]]],20],[[17,[27,[13]]],17],[[8,[27,[13]]],8],[[21,[27,[13]]],21],[[22,[27,[13]]],22],0,0,0,0,0,0,0,[[16,13],16],[[16,13,9],16],[[16,13],16],[[16,13,13],16],[[16,4],16],0,[20,17],[[14,13,39]],[1,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,15],[13,15],[[15,13],15],[4,9],[[17,13],30],[18,30],[11,1],[[1,[35,[2]]],10],[[11,[35,[2]]],10],[4,11],[[],53],[[],53],[[],53],[[],53],[[],53],[15,53],[9,4],[11,4],0,0,[[16,1],1],[[[35,[4]]],16],[4,12],[16,4],[9,9],[1,1],[11,11],[4,4],[[15,45]],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[[],54],[13,7],[[13,13],7],[[1,1],1],[[1,9],1],[1,13],[10,13],0,[9,55],[[3,9],55],[[14,9],55],[[15,9],55],[[20,9],55],[[5,9],55],[[17,9],55],[[6,9],55],[[8,9],55],[[22,9],55],[[1,9],55],[[10,9],55],[[6,9],6],[[1,[35,[9]]],1],[[6,4],6],[[6,13],6],[[1,[35,[11]]],1],[[16,4],16],[[15,56],57],0,0,0,0,0,0,0,0,[7,13],0,0,0,0,0,0,[7,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[13,13,13,13,23],[[19,[37]]]],[[13,13,13,13],[[37,[13]]]],[[39,13,13,13,45,13,13,13],13],[[13,13,13],[[37,[13]]]],[[13,13,13,13,13],[[37,[13]]]],0,[[]],[[]],[[58,[27,[13]]],[[19,[13]]]],[[]],[[]],[[17,13],58],[[58,13]],[[58,13,13],52],[[],44],[[],44],[[],54],0,0,0,0,0,[[59,13],59],[[]],[[]],[[]],[[]],[[]],[[]],[[60,[27,[13]]],[[19,[13]]]],[[],59],[[]],[[]],[[]],[[]],[[]],[[]],[[60,[27,[13]]]],[36,60],[[59,61],59],[[60,13]],[[60,13,13],52],[[36,13,59],15],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],54],[[],54],[[],54]],"c":[],"p":[[3,"Rect",0],[3,"RoundedRectRadii",0],[3,"CircleSegment",0],[3,"Vec2",0],[3,"Circle",0],[3,"Ellipse",0],[3,"Insets",0],[3,"Line",0],[3,"Point",0],[3,"RoundedRect",0],[3,"Size",0],[3,"TranslateScale",0],[15,"f64"],[3,"Arc",0],[3,"BezPath",0],[3,"Affine",0],[3,"CubicBez",0],[3,"QuadSpline",0],[4,"Option",1038],[4,"PathSeg",0],[3,"ConstPoint",0],[3,"QuadBez",0],[15,"bool"],[15,"array"],[4,"PathEl",0],[15,"slice"],[3,"Range",1039],[3,"LineIntersection",0],[8,"Clone",1040],[8,"Iterator",1041],[3,"Segments",0],[3,"Nearest",0],[3,"SvgArc",0],[3,"Vec",1042],[8,"Into",1043],[8,"IntoIterator",1044],[3,"ArrayVec",1045],[8,"ParamCurveFit",0],[8,"FnMut",1046],[3,"Formatter",1047],[6,"Result",1047],[4,"SvgParseError",0],[15,"str"],[4,"Result",1048],[15,"usize"],[3,"MinDistance",0],[3,"PathSegIter",0],[3,"CubicBezIter",0],[3,"QuadBezIter",0],[3,"Once",1049],[3,"Chain",1050],[3,"CurveFitSample",0],[3,"String",1051],[3,"TypeId",1052],[15,"i32"],[8,"Write",1053],[6,"Result",1054],[3,"CubicOffset",991],[3,"SimplifyOptions",1003],[3,"SimplifyBezPath",1003],[4,"SimplifyOptLevel",1003],[8,"ParamCurveDeriv",0],[8,"Shape",0],[8,"ParamCurveArclen",0],[8,"ParamCurveExtrema",0],[8,"ParamCurveCurvature",0],[8,"ParamCurve",0],[8,"ParamCurveNearest",0],[8,"ParamCurveArea",0],[8,"FloatExt",969]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":"IFO","n":["LazyStatic","initialize","lazy_static"],"q":[[0,"lazy_static"]],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[1],0],"c":[],"p":[[8,"LazyStatic",0]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":"RRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGFGRRRRRRRRRRRRRRRRFFFFFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRERRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFRFRRRERRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFNNNNNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFRFFFFFRRRFFRRRRRRRRRRRRRRRRRRRFFRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFRRRRRRMDDDDFMMMMMMMGGMMMMMMGGMMFFFFFMMFFFFFMMMMMMDFMMMMMMMMMMMFFMFMMMFMFMFFDFMMMMMFFFDMFFFFFFFMMGDDDFFFFFFFMMMMFMGGMGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFFMMMMMMGGGMGMMGGMMGGGGGGGEMFMGFFFFFFMFFFFFMMFFFFGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFMMMMMMMMMDMMMMMMMMFFFMMMFGGMMMMMMGMMMMGMMMMMMMMMMFFFMDMMMMMMMMMMMMMMMMMMGFMMDFFFMMFFFMMMMFFMMMMMMMMMMDFFFFMMFFFFFMMMMFFFFFFFFMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFMMMMFFFFFFFFFFMDFFFFMMFFFFFFMMFMMMMMMMMMMMMMMMMMFDFFFLFFMMFFEFFFMFFFMMMMFFFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFFFFFFGDMMMMMFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMGMMMFDFFFMMMMFDMMMMMMMMMMMMMGGGFFFGDFFFFGGMMGDDFMFDDMDFFMMMMDMMMDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDDMMMMMMMMMMMMMDMMMMMMMMMMDDDGDGMMMMFMMGGGGGMMMMMMMMGMMGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFMMDDDDDMMMMMDMMMMFFFFFFFFFFFFFMMDMMFRRRRRRRRRRRRRGDFFDGFFFMMMMMMMMMMFFFDGGDFFFFFMMDGFFFFFDFMMMMFFFFFMMDDFGGDGGFHFDFGGFGGMFMMFFFFFFFDFFFFFFFFFFDFDMMMMMGGFFFFFGGFFFFFMFFFFFFFFFFFFFFFMGMMMMMFFFMMMMMMMDDFFFFFMMMMFMGMMMFGFGFGMMMFMMFFDMMGMMFFFFFFFDFGFGFFFGGGFFFDGFFMMMMMMMMMMMMMMDFFMMMMMMMMMMMMMMMMMMMMFMMFGFMMMMGFDFMFFFFFFFFFGFFFFFFFFFFFFFFGFMFFMMMFMMDFFFFFFFFFFFFFFFFFDDDDDGGMMDGGGGGDGGDGGDFRRRRRMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFDFFFFFDFFFFFFDFFFFFFFFFFFFFFGFGFFFFFFFGFFFFFFDFFFFFFFDFFFDFFFFFFFFDFFFFFFFGFMMMMMMMMMMMMMMMMMMMFGFMMMMMMMMFFFFFMMMMMMMMMMMMFFEFFFMMDFFMMMMFFFFFFFFFFFFFDFFDGMFFFFFFFMMMMMMMFFMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGDMMFMMMMMMMMMMMMDDDMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDGDDDDDMMMMMMMDMGMMMMGGMMMMMFMMMMMFFFDMFMMMMMMMMMFFDDMMFMFMMMMMFMMMMMFGFFFDFFDFTFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDMMMMMMMMFMMFFGFFFDFLMMMLMMLMLMLDFFFFFMMMMDFGDFFFFGDFMMMMMMMMMMMMMMMMMMMMMMGMMFMMMMMMMFDDDDDDDDDDFFGMMMMGFFFMMMMMMFGMMMMMMMMMMMMMMMMMMMMMMMDDFDFMDFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMMMGMMMMMMMMMMMMMFFFFFFFFFEEGFFMFMMMMMMMMMFGFFGGFGFDGGFFGFFFFFFFFFDMGGDGGDGGDGGMMDGGDGGGMMMMDGGFGGDGGGMMGFFGDGGDGGGDGGGMMDGGMMFMMGDFFMMDDDDEDMMMMMMMMMMMFFDMMMMMFMMFMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDMMMGGGGGGGFFFFFFFFGFMMMMMMFMMMMMMMDFFFDFDMGMMMMMMMMMDMMMMGFGGGHGDGDDGGGGMMMMDDDDGMMMMMMMMMMMMMMMMMMMMMMMFFFFGFFDMMMMFFFMMMMMMMMMDDMMMM","n":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ACCOUNTING","AF_APPLETALK","AF_CCITT","AF_CHAOS","AF_CNT","AF_COIP","AF_DATAKIT","AF_DECnet","AF_DLI","AF_E164","AF_ECMA","AF_HYLINK","AF_IEEE80211","AF_IMPLINK","AF_INET","AF_INET6","AF_IPX","AF_ISDN","AF_ISO","AF_LAT","AF_LINK","AF_LOCAL","AF_NATM","AF_NDRV","AF_NETBIOS","AF_NS","AF_OSI","AF_PPP","AF_PUP","AF_ROUTE","AF_SIP","AF_SNA","AF_SYSTEM","AF_SYS_CONTROL","AF_UNIX","AF_UNSPEC","AF_UTUN","AF_VSOCK","AIO_ALLDONE","AIO_CANCELED","AIO_LISTIO_MAX","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_DEFAULT","AI_MASK","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_UNUSABLE","AI_V4MAPPED","AI_V4MAPPED_CFG","ALTWERASE","ALT_DIGITS","AM_STR","ARPOP_REPLY","ARPOP_REQUEST","ATF_COM","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","ATTR_BIT_MAP_COUNT","ATTR_CMNEXT_CLONEID","ATTR_CMNEXT_EXT_FLAGS","ATTR_CMNEXT_LINKID","ATTR_CMNEXT_NOFIRMLINKPATH","ATTR_CMNEXT_PRIVATESIZE","ATTR_CMNEXT_REALDEVID","ATTR_CMNEXT_REALFSID","ATTR_CMNEXT_RECURSIVE_GENCOUNT","ATTR_CMNEXT_RELPATH","ATTR_CMN_ACCESSMASK","ATTR_CMN_ACCTIME","ATTR_CMN_ADDEDTIME","ATTR_CMN_BKUPTIME","ATTR_CMN_CHGTIME","ATTR_CMN_CRTIME","ATTR_CMN_DATA_PROTECT_FLAGS","ATTR_CMN_DEVID","ATTR_CMN_DOCUMENT_ID","ATTR_CMN_EXTENDED_SECURITY","ATTR_CMN_FILEID","ATTR_CMN_FLAGS","ATTR_CMN_FNDRINFO","ATTR_CMN_FSID","ATTR_CMN_FULLPATH","ATTR_CMN_GEN_COUNT","ATTR_CMN_GRPID","ATTR_CMN_GRPUUID","ATTR_CMN_MODTIME","ATTR_CMN_NAME","ATTR_CMN_OBJID","ATTR_CMN_OBJPERMANENTID","ATTR_CMN_OBJTAG","ATTR_CMN_OBJTYPE","ATTR_CMN_OWNERID","ATTR_CMN_PARENTID","ATTR_CMN_PAROBJID","ATTR_CMN_RETURNED_ATTRS","ATTR_CMN_SCRIPT","ATTR_CMN_USERACCESS","ATTR_CMN_UUID","ATTR_DIR_ALLOCSIZE","ATTR_DIR_DATALENGTH","ATTR_DIR_ENTRYCOUNT","ATTR_DIR_IOBLOCKSIZE","ATTR_DIR_LINKCOUNT","ATTR_DIR_MOUNTSTATUS","ATTR_FILE_ALLOCSIZE","ATTR_FILE_DATAALLOCSIZE","ATTR_FILE_DATALENGTH","ATTR_FILE_DEVTYPE","ATTR_FILE_FORKCOUNT","ATTR_FILE_FORKLIST","ATTR_FILE_IOBLOCKSIZE","ATTR_FILE_LINKCOUNT","ATTR_FILE_RSRCALLOCSIZE","ATTR_FILE_RSRCLENGTH","ATTR_FILE_TOTALSIZE","ATTR_VOL_ALLOCATIONCLUMP","ATTR_VOL_ATTRIBUTES","ATTR_VOL_CAPABILITIES","ATTR_VOL_DIRCOUNT","ATTR_VOL_ENCODINGSUSED","ATTR_VOL_FILECOUNT","ATTR_VOL_FSTYPE","ATTR_VOL_INFO","ATTR_VOL_IOBLOCKSIZE","ATTR_VOL_MAXOBJCOUNT","ATTR_VOL_MINALLOCATION","ATTR_VOL_MOUNTEDDEVICE","ATTR_VOL_MOUNTFLAGS","ATTR_VOL_MOUNTPOINT","ATTR_VOL_NAME","ATTR_VOL_OBJCOUNT","ATTR_VOL_QUOTA_SIZE","ATTR_VOL_RESERVED_SIZE","ATTR_VOL_SIGNATURE","ATTR_VOL_SIZE","ATTR_VOL_SPACEAVAIL","ATTR_VOL_SPACEFREE","ATTR_VOL_SPACEUSED","ATTR_VOL_UUID","AT_EACCESS","AT_FDCWD","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","B0","B110","B115200","B1200","B134","B14400","B150","B1800","B19200","B200","B230400","B2400","B28800","B300","B38400","B4800","B50","B57600","B600","B7200","B75","B76800","B9600","BIOCFLUSH","BIOCGBLEN","BIOCGDLT","BIOCGDLTLIST","BIOCGETIF","BIOCGHDRCMPLT","BIOCGRSIG","BIOCGRTIMEOUT","BIOCGSEESENT","BIOCGSTATS","BIOCIMMEDIATE","BIOCPROMISC","BIOCSBLEN","BIOCSDLT","BIOCSETF","BIOCSETFNR","BIOCSETIF","BIOCSHDRCMPLT","BIOCSRSIG","BIOCSRTIMEOUT","BIOCSSEESENT","BIOCVERSION","BOOT_TIME","BPF_ALIGNMENT","BRKINT","BS0","BS1","BSDLY","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_OBJERR","CCCryptorStatus","CCRNGStatus","CCRandomGenerateBytes","CCStatus","CIGNORE","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_MONOTONIC","CLOCK_MONOTONIC_RAW","CLOCK_MONOTONIC_RAW_APPROX","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_THREAD_CPUTIME_ID","CLOCK_UPTIME_RAW","CLOCK_UPTIME_RAW_APPROX","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CODESET","CONNECT_DATA_AUTHENTICATED","CONNECT_DATA_IDEMPOTENT","CONNECT_RESUME_ON_READ_WRITE","COPYFILE_ACL","COPYFILE_CHECK","COPYFILE_CLONE","COPYFILE_CLONE_FORCE","COPYFILE_CONTINUE","COPYFILE_COPY_DATA","COPYFILE_COPY_XATTR","COPYFILE_DATA","COPYFILE_DATA_SPARSE","COPYFILE_ERR","COPYFILE_EXCL","COPYFILE_FINISH","COPYFILE_METADATA","COPYFILE_MOVE","COPYFILE_NOFOLLOW","COPYFILE_NOFOLLOW_DST","COPYFILE_NOFOLLOW_SRC","COPYFILE_PACK","COPYFILE_PRESERVE_DST_TRACKED","COPYFILE_PROGRESS","COPYFILE_QUIT","COPYFILE_RECURSE_DIR","COPYFILE_RECURSE_DIR_CLEANUP","COPYFILE_RECURSE_ERROR","COPYFILE_RECURSE_FILE","COPYFILE_RECURSIVE","COPYFILE_RUN_IN_PLACE","COPYFILE_SECURITY","COPYFILE_SKIP","COPYFILE_START","COPYFILE_STAT","COPYFILE_UNLINK","COPYFILE_UNPACK","COPYFILE_VERBOSE","COPYFILE_XATTR","CPU_STATE_IDLE","CPU_STATE_MAX","CPU_STATE_NICE","CPU_STATE_SYSTEM","CPU_STATE_USER","CR0","CR1","CR2","CR3","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTLFLAG_ANYBODY","CTLFLAG_KERN","CTLFLAG_LOCKED","CTLFLAG_MASKED","CTLFLAG_NOAUTO","CTLFLAG_NOLOCK","CTLFLAG_OID2","CTLFLAG_RD","CTLFLAG_RW","CTLFLAG_SECURE","CTLFLAG_WR","CTLIOCGINFO","CTLTYPE","CTLTYPE_INT","CTLTYPE_NODE","CTLTYPE_OPAQUE","CTLTYPE_QUAD","CTLTYPE_STRING","CTLTYPE_STRUCT","CTL_DEBUG","CTL_DEBUG_MAXID","CTL_DEBUG_NAME","CTL_DEBUG_VALUE","CTL_HW","CTL_KERN","CTL_MACHDEP","CTL_MAXID","CTL_NET","CTL_UNSPEC","CTL_USER","CTL_VFS","CTL_VM","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DEAD_PROCESS","DIR","DIR_MNTSTATUS_MNTPOINT","DLT_ARCNET","DLT_ATM_RFC1483","DLT_AX25","DLT_CHAOS","DLT_EN10MB","DLT_EN3MB","DLT_FDDI","DLT_IEEE802","DLT_LOOP","DLT_NULL","DLT_PPP","DLT_PRONET","DLT_RAW","DLT_SLIP","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_MD_ORDER","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EAUTH","EBADARCH","EBADEXEC","EBADF","EBADMACHO","EBADMSG","EBADRPC","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDESTADDRREQ","EDEVERR","EDOM","EDQUOT","EEXIST","EFAULT","EFBIG","EFTYPE","EHOSTDOWN","EHOSTUNREACH","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","ELAST","ELOOP","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENEEDAUTH","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOATTR","ENOBUFS","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOLCK","ENOLINK","ENOMEM","ENOMSG","ENOPOLICY","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROCLIM","EPROCUNAVAIL","EPROGMISMATCH","EPROGUNAVAIL","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","EPWROFF","EQFULL","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMOTE","EROFS","ERPCMISMATCH","ESHLIBVERS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESTALE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUSERS","EVFILT_AIO","EVFILT_FS","EVFILT_MACHPORT","EVFILT_PROC","EVFILT_READ","EVFILT_SIGNAL","EVFILT_TIMER","EVFILT_USER","EVFILT_VM","EVFILT_VNODE","EVFILT_WRITE","EV_ADD","EV_CLEAR","EV_DELETE","EV_DISABLE","EV_DISPATCH","EV_ENABLE","EV_EOF","EV_ERROR","EV_FLAG0","EV_FLAG1","EV_ONESHOT","EV_OOBAND","EV_POLL","EV_RECEIPT","EV_SYSFLAGS","EWOULDBLOCK","EXDEV","EXIT_FAILURE","EXIT_SUCCESS","EXTA","EXTB","EXTPROC","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIODTYPE","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOSETOWN","FLUSHO","FOPEN_MAX","FSOPT_ATTR_CMN_EXTENDED","FSOPT_NOFOLLOW","FSOPT_NOFOLLOW_ANY","FSOPT_PACK_INVAL_ATTRS","FSOPT_REPORT_FULLSIZE","FSOPT_RETURN_REALDEV","F_ALLOCATEALL","F_ALLOCATECONTIG","F_BARRIERFSYNC","F_DUPFD","F_DUPFD_CLOEXEC","F_FREEZE_FS","F_FULLFSYNC","F_GETFD","F_GETFL","F_GETLK","F_GETOWN","F_GETPATH","F_GETPATH_NOFIRMLINK","F_GLOBAL_NOCACHE","F_LOCK","F_LOG2PHYS","F_LOG2PHYS_EXT","F_NOCACHE","F_NODIRECT","F_OK","F_PEOFPOSMODE","F_PREALLOCATE","F_RDADVISE","F_RDAHEAD","F_RDLCK","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETOWN","F_TEST","F_THAW_FS","F_TLOCK","F_ULOCK","F_UNLCK","F_VOLPOSMODE","F_WRLCK","GETALL","GETNCNT","GETPID","GETVAL","GETZCNT","GLOB_ABORTED","GLOB_APPEND","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GRPQUOTA","HOST_CPU_LOAD_INFO","HOST_CPU_LOAD_INFO_COUNT","HOST_EXPIRED_TASK_INFO","HOST_EXTMOD_INFO64","HOST_LOAD_INFO","HOST_VM_INFO","HOST_VM_INFO64","HOST_VM_INFO64_COUNT","HUPCL","HW_AVAILCPU","HW_BUS_FREQ","HW_BYTEORDER","HW_CACHELINE","HW_CPU_FREQ","HW_DISKNAMES","HW_DISKSTATS","HW_EPOCH","HW_FLOATINGPT","HW_L1DCACHESIZE","HW_L1ICACHESIZE","HW_L2CACHESIZE","HW_L2SETTINGS","HW_L3CACHESIZE","HW_L3SETTINGS","HW_MACHINE","HW_MACHINE_ARCH","HW_MAXID","HW_MEMSIZE","HW_MODEL","HW_NCPU","HW_PAGESIZE","HW_PHYSMEM","HW_PRODUCT","HW_TARGET","HW_TB_FREQ","HW_USERMEM","HW_VECTORUNIT","ICANON","ICRNL","IEXTEN","IFF_ALLMULTI","IFF_ALTPHYS","IFF_BROADCAST","IFF_DEBUG","IFF_LINK0","IFF_LINK1","IFF_LINK2","IFF_LOOPBACK","IFF_MULTICAST","IFF_NOARP","IFF_NOTRAILERS","IFF_OACTIVE","IFF_POINTOPOINT","IFF_PROMISC","IFF_RUNNING","IFF_SIMPLEX","IFF_UP","IFNAMSIZ","IF_NAMESIZE","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INT_MAX","INT_MIN","IOV_MAX","IPC_CREAT","IPC_EXCL","IPC_M","IPC_NOWAIT","IPC_PRIVATE","IPC_R","IPC_RMID","IPC_SET","IPC_STAT","IPC_W","IPPROTO_3PC","IPPROTO_ADFS","IPPROTO_AH","IPPROTO_AHIP","IPPROTO_APES","IPPROTO_ARGUS","IPPROTO_AX25","IPPROTO_BHA","IPPROTO_BLT","IPPROTO_BRSATMON","IPPROTO_CFTP","IPPROTO_CHAOS","IPPROTO_CMTP","IPPROTO_CPHB","IPPROTO_CPNX","IPPROTO_DDP","IPPROTO_DGP","IPPROTO_DIVERT","IPPROTO_DONE","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_EMCON","IPPROTO_ENCAP","IPPROTO_EON","IPPROTO_ESP","IPPROTO_ETHERIP","IPPROTO_FRAGMENT","IPPROTO_GGP","IPPROTO_GMTP","IPPROTO_GRE","IPPROTO_HELLO","IPPROTO_HMP","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IDPR","IPPROTO_IDRP","IPPROTO_IGMP","IPPROTO_IGP","IPPROTO_IGRP","IPPROTO_IL","IPPROTO_INLSP","IPPROTO_INP","IPPROTO_IP","IPPROTO_IPCOMP","IPPROTO_IPCV","IPPROTO_IPEIP","IPPROTO_IPIP","IPPROTO_IPPC","IPPROTO_IPV6","IPPROTO_IRTP","IPPROTO_KRYPTOLAN","IPPROTO_LARP","IPPROTO_LEAF1","IPPROTO_LEAF2","IPPROTO_MAX","IPPROTO_MEAS","IPPROTO_MHRP","IPPROTO_MICP","IPPROTO_MTP","IPPROTO_MUX","IPPROTO_ND","IPPROTO_NHRP","IPPROTO_NONE","IPPROTO_NSP","IPPROTO_NVPII","IPPROTO_OSPFIGP","IPPROTO_PGM","IPPROTO_PIGP","IPPROTO_PIM","IPPROTO_PRM","IPPROTO_PUP","IPPROTO_PVP","IPPROTO_RAW","IPPROTO_RCCMON","IPPROTO_RDP","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_RVD","IPPROTO_SATEXPAK","IPPROTO_SATMON","IPPROTO_SCCSP","IPPROTO_SCTP","IPPROTO_SDRP","IPPROTO_SEP","IPPROTO_SRPC","IPPROTO_ST","IPPROTO_SVMTP","IPPROTO_SWIPE","IPPROTO_TCF","IPPROTO_TCP","IPPROTO_TP","IPPROTO_TPXX","IPPROTO_TRUNK1","IPPROTO_TRUNK2","IPPROTO_TTP","IPPROTO_UDP","IPPROTO_VINES","IPPROTO_VISA","IPPROTO_VMTP","IPPROTO_WBEXPAK","IPPROTO_WBMON","IPPROTO_WSN","IPPROTO_XNET","IPPROTO_XTP","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOTECT","IPV6_BOUND_IF","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_HOPLIMIT","IPV6_JOIN_GROUP","IPV6_LEAVE_GROUP","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_PKTINFO","IPV6_RECVPKTINFO","IPV6_RECVTCLASS","IPV6_TCLASS","IPV6_UNICAST_HOPS","IPV6_V6ONLY","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BLOCK_SOURCE","IP_BOUND_IF","IP_DONTFRAG","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_HDRINCL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_PKTINFO","IP_RECVDSTADDR","IP_RECVIF","IP_RECVTOS","IP_TOS","IP_TTL","IP_UNBLOCK_SOURCE","ISIG","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","KERN_ABORTED","KERN_AFFINITY","KERN_AIOMAX","KERN_AIOPROCMAX","KERN_AIOTHREADS","KERN_ALREADY_IN_SET","KERN_ALREADY_WAITING","KERN_ARGMAX","KERN_BOOTFILE","KERN_BOOTTIME","KERN_CHECKOPENEVT","KERN_CLASSIC","KERN_CLASSICHANDLER","KERN_CLOCKRATE","KERN_CODESIGN_ERROR","KERN_COREDUMP","KERN_COREFILE","KERN_DEFAULT_SET","KERN_DOMAINNAME","KERN_DUMMY","KERN_DUMPDEV","KERN_EXCEPTION_PROTECTED","KERN_EXEC","KERN_FAILURE","KERN_FILE","KERN_HOSTID","KERN_HOSTNAME","KERN_INSUFFICIENT_BUFFER_SIZE","KERN_INVALID_ADDRESS","KERN_INVALID_ARGUMENT","KERN_INVALID_CAPABILITY","KERN_INVALID_HOST","KERN_INVALID_LEDGER","KERN_INVALID_MEMORY_CONTROL","KERN_INVALID_NAME","KERN_INVALID_OBJECT","KERN_INVALID_POLICY","KERN_INVALID_PROCESSOR_SET","KERN_INVALID_RIGHT","KERN_INVALID_SECURITY","KERN_INVALID_TASK","KERN_INVALID_VALUE","KERN_IPC","KERN_JOB_CONTROL","KERN_KDBUFWAIT","KERN_KDCPUMAP","KERN_KDDFLAGS","KERN_KDEBUG","KERN_KDEFLAGS","KERN_KDENABLE","KERN_KDGETBUF","KERN_KDGETENTROPY","KERN_KDGETREG","KERN_KDPIDEX","KERN_KDPIDTR","KERN_KDREADCURTHRMAP","KERN_KDREADTR","KERN_KDREMOVE","KERN_KDSETBUF","KERN_KDSETREG","KERN_KDSETRTCDEC","KERN_KDSETUP","KERN_KDSET_TYPEFILTER","KERN_KDTHRMAP","KERN_KDWRITEMAP","KERN_KDWRITETR","KERN_LOCK_OWNED","KERN_LOCK_OWNED_SELF","KERN_LOCK_SET_DESTROYED","KERN_LOCK_UNSTABLE","KERN_LOGSIGEXIT","KERN_LOW_PRI_DELAY","KERN_LOW_PRI_WINDOW","KERN_MAXFILES","KERN_MAXFILESPERPROC","KERN_MAXID","KERN_MAXPARTITIONS","KERN_MAXPROC","KERN_MAXPROCPERUID","KERN_MAXVNODES","KERN_MEMORY_DATA_MOVED","KERN_MEMORY_ERROR","KERN_MEMORY_FAILURE","KERN_MEMORY_PRESENT","KERN_MEMORY_RESTART_COPY","KERN_NAME_EXISTS","KERN_NETBOOT","KERN_NGROUPS","KERN_NISDOMAINNAME","KERN_NODE_DOWN","KERN_NOT_DEPRESSED","KERN_NOT_IN_SET","KERN_NOT_RECEIVER","KERN_NOT_SUPPORTED","KERN_NOT_WAITING","KERN_NO_ACCESS","KERN_NO_SPACE","KERN_NTP_PLL","KERN_NX_PROTECTION","KERN_OPENEVT_PROC","KERN_OPERATION_TIMED_OUT","KERN_OSRELDATE","KERN_OSRELEASE","KERN_OSREV","KERN_OSTYPE","KERN_OSVERSION","KERN_POLICY_LIMIT","KERN_POLICY_STATIC","KERN_POSIX","KERN_POSIX1","KERN_PROC","KERN_PROCARGS","KERN_PROCARGS2","KERN_PROCDELAYTERM","KERN_PROCNAME","KERN_PROC_ALL","KERN_PROC_LCID","KERN_PROC_PGRP","KERN_PROC_PID","KERN_PROC_RUID","KERN_PROC_SESSION","KERN_PROC_TTY","KERN_PROC_UID","KERN_PROF","KERN_PROTECTION_FAILURE","KERN_PS_STRINGS","KERN_RAGEVNODE","KERN_RAGE_PROC","KERN_RAGE_THREAD","KERN_RESOURCE_SHORTAGE","KERN_RIGHT_EXISTS","KERN_RPC_CONTINUE_ORPHAN","KERN_RPC_SERVER_TERMINATED","KERN_RPC_TERMINATE_ORPHAN","KERN_SAFEBOOT","KERN_SAVED_IDS","KERN_SECURELVL","KERN_SEMAPHORE_DESTROYED","KERN_SHREG_PRIVATIZABLE","KERN_SPECULATIVE_READS","KERN_SUCCESS","KERN_SUGID_COREDUMP","KERN_SYMFILE","KERN_SYSV","KERN_TERMINATED","KERN_TFP","KERN_TFP_POLICY","KERN_TFP_POLICY_DEFAULT","KERN_TFP_POLICY_DENY","KERN_THALTSTACK","KERN_THREADNAME","KERN_TRANSLATE","KERN_TTY","KERN_UNOPENEVT_PROC","KERN_UNRAGE_PROC","KERN_UNRAGE_THREAD","KERN_UPDATEINTERVAL","KERN_UREFS_OVERFLOW","KERN_USRSTACK32","KERN_USRSTACK64","KERN_VERSION","KERN_VNODE","KIPC_MAXSOCKBUF","KIPC_MAX_DATALEN","KIPC_MAX_HDR","KIPC_MAX_LINKHDR","KIPC_MAX_PROTOHDR","KIPC_MBSTAT","KIPC_NMBCLUSTERS","KIPC_SOCKBUF_WASTE","KIPC_SOMAXCONN","KIPC_SOQLIMITCOMPAT","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_SEGMENT","LC_SEGMENT_64","LC_TIME","LC_TIME_MASK","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LOCAL_PEERCRED","LOCAL_PEEREPID","LOCAL_PEEREUUID","LOCAL_PEERPID","LOCAL_PEERUUID","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_INSTALL","LOG_KERN","LOG_LAUNCHD","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NETINFO","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_RAS","LOG_REMOTEAUTH","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","MACH_PORT_NULL","MACH_TASK_BASIC_INFO","MACH_TASK_BASIC_INFO_COUNT","MADV_CAN_REUSE","MADV_DONTNEED","MADV_FREE","MADV_FREE_REUSABLE","MADV_FREE_REUSE","MADV_NORMAL","MADV_RANDOM","MADV_SEQUENTIAL","MADV_WILLNEED","MADV_ZERO_WIRED_PAGES","MAP_ANON","MAP_ANONYMOUS","MAP_COPY","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_HASSEMAPHORE","MAP_JIT","MAP_NOCACHE","MAP_NOEXTEND","MAP_NORESERVE","MAP_PRIVATE","MAP_RENAME","MAP_SHARED","MAXCOMLEN","MAXFREQ","MAXPATHLEN","MAXPHASE","MAXSEC","MAXTC","MAXTHREADNAMESIZE","MAX_KCTL_NAME","MCL_CURRENT","MCL_FUTURE","MDMBUF","MEMORY_OBJECT_NULL","MH_MAGIC","MH_MAGIC_64","MINCORE_INCORE","MINCORE_MODIFIED","MINCORE_MODIFIED_OTHER","MINCORE_REFERENCED","MINCORE_REFERENCED_OTHER","MINSEC","MINSIGSTKSZ","MNT_ASYNC","MNT_AUTOMOUNTED","MNT_CPROTECT","MNT_DEFWRITE","MNT_DONTBROWSE","MNT_DOVOLFS","MNT_EXPORTED","MNT_FORCE","MNT_IGNORE_OWNERSHIP","MNT_JOURNALED","MNT_LOCAL","MNT_MULTILABEL","MNT_NOATIME","MNT_NOBLOCK","MNT_NODEV","MNT_NOEXEC","MNT_NOSUID","MNT_NOUSERXATTR","MNT_NOWAIT","MNT_QUARANTINE","MNT_QUOTA","MNT_RDONLY","MNT_RELOAD","MNT_ROOTFS","MNT_SNAPSHOT","MNT_SYNCHRONOUS","MNT_UNION","MNT_UPDATE","MNT_WAIT","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_PPSMAX","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOF","MSG_EOR","MSG_FLUSH","MSG_HAVEMORE","MSG_HOLD","MSG_NEEDSA","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_RCVMORE","MSG_SEND","MSG_TRUNC","MSG_WAITALL","MS_ASYNC","MS_DEACTIVATE","MS_INVALIDATE","MS_KILLPAGES","MS_SYNC","NANOSECOND","NCCS","NET_RT_DUMP","NET_RT_FLAGS","NET_RT_IFLIST","NET_RT_IFLIST2","NEW_TIME","NI_DGRAM","NI_MAXHOST","NI_MAXSERV","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSCOPE","NI_NUMERICSERV","NL0","NL1","NLDLY","NOEXPR","NOFLSH","NOKERNINFO","NOSTR","NOTE_ABSOLUTE","NOTE_ATTRIB","NOTE_BACKGROUND","NOTE_CHILD","NOTE_CRITICAL","NOTE_DELETE","NOTE_EXEC","NOTE_EXIT","NOTE_EXITSTATUS","NOTE_EXIT_CSERROR","NOTE_EXIT_DECRYPTFAIL","NOTE_EXIT_DETAIL","NOTE_EXIT_DETAIL_MASK","NOTE_EXIT_MEMORY","NOTE_EXTEND","NOTE_FFAND","NOTE_FFCOPY","NOTE_FFCTRLMASK","NOTE_FFLAGSMASK","NOTE_FFNOP","NOTE_FFOR","NOTE_FORK","NOTE_LEEWAY","NOTE_LINK","NOTE_LOWAT","NOTE_NONE","NOTE_NSECONDS","NOTE_PCTRLMASK","NOTE_PDATAMASK","NOTE_RENAME","NOTE_REVOKE","NOTE_SECONDS","NOTE_SIGNAL","NOTE_TRACK","NOTE_TRACKERR","NOTE_TRIGGER","NOTE_USECONDS","NOTE_VM_ERROR","NOTE_VM_PRESSURE","NOTE_VM_PRESSURE_SUDDEN_TERMINATE","NOTE_VM_PRESSURE_TERMINATE","NOTE_WRITE","NTP_API","None","OCRNL","OFDEL","OFILL","OLD_TIME","ONLCR","ONLRET","ONOCR","ONOEOT","OPOST","OS_LOG_TYPE_DEBUG","OS_LOG_TYPE_DEFAULT","OS_LOG_TYPE_ERROR","OS_LOG_TYPE_FAULT","OS_LOG_TYPE_INFO","OS_SIGNPOST_EVENT","OS_SIGNPOST_INTERVAL_BEGIN","OS_SIGNPOST_INTERVAL_END","OS_UNFAIR_LOCK_INIT","OXTABS","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECTORY","O_DSYNC","O_EVTONLY","O_EXCL","O_EXLOCK","O_FSYNC","O_NDELAY","O_NOCTTY","O_NOFOLLOW","O_NOFOLLOW_ANY","O_NONBLOCK","O_RDONLY","O_RDWR","O_SHLOCK","O_SYMLINK","O_SYNC","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_APPLETALK","PF_CCITT","PF_CHAOS","PF_CNT","PF_COIP","PF_DATAKIT","PF_DECnet","PF_DLI","PF_ECMA","PF_HYLINK","PF_IMPLINK","PF_INET","PF_INET6","PF_IPX","PF_ISDN","PF_ISO","PF_KEY","PF_LAT","PF_LINK","PF_LOCAL","PF_NATM","PF_NDRV","PF_NETBIOS","PF_NS","PF_OSI","PF_PIP","PF_PPP","PF_PUP","PF_ROUTE","PF_RTIP","PF_SIP","PF_SNA","PF_SYSTEM","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_XTP","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_CLOEXEC_DEFAULT","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETEXEC","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_START_SUSPENDED","PRIO_DARWIN_BG","PRIO_DARWIN_NONUI","PRIO_DARWIN_PROCESS","PRIO_DARWIN_THREAD","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROCESSOR_BASIC_INFO","PROCESSOR_CPU_LOAD_INFO","PROCESSOR_PM_REGS_INFO","PROCESSOR_SET_BASIC_INFO","PROCESSOR_SET_LOAD_INFO","PROCESSOR_TEMPERATURE","PROC_CSM_ALL","PROC_CSM_NOSMT","PROC_CSM_TECS","PROC_PIDPATHINFO_MAXSIZE","PROC_PIDTASKALLINFO","PROC_PIDTASKINFO","PROC_PIDTBSDINFO","PROC_PIDTHREADINFO","PROC_PIDVNODEPATHINFO","PROT_EXEC","PROT_NONE","PROT_READ","PROT_WRITE","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_INTROSPECTION_THREAD_CREATE","PTHREAD_INTROSPECTION_THREAD_DESTROY","PTHREAD_INTROSPECTION_THREAD_START","PTHREAD_INTROSPECTION_THREAD_TERMINATE","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PT_ATTACH","PT_ATTACHEXC","PT_CONTINUE","PT_DENY_ATTACH","PT_DETACH","PT_FIRSTMACH","PT_FORCEQUOTA","PT_KILL","PT_READ_D","PT_READ_I","PT_READ_U","PT_SIGEXC","PT_STEP","PT_THUPDATE","PT_TRACE_ME","PT_WRITE_D","PT_WRITE_I","PT_WRITE_U","P_ALL","P_PGID","P_PID","QCMD","QOS_CLASS_BACKGROUND","QOS_CLASS_DEFAULT","QOS_CLASS_UNSPECIFIED","QOS_CLASS_USER_INITIATED","QOS_CLASS_USER_INTERACTIVE","QOS_CLASS_UTILITY","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETQUOTA","Q_SYNC","RADIXCHAR","RAND_MAX","REG_ASSERT","REG_ATOI","REG_BACKR","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_BASIC","REG_DUMP","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EESCAPE","REG_EMPTY","REG_EPAREN","REG_ERANGE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_INVARG","REG_ITOA","REG_LARGE","REG_NEWLINE","REG_NOMATCH","REG_NOSPEC","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_PEND","REG_STARTEND","REG_TRACE","RENAME_EXCL","RENAME_SWAP","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_MEMLOCK","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RTAX_AUTHOR","RTAX_BRD","RTAX_DST","RTAX_GATEWAY","RTAX_GENMASK","RTAX_IFA","RTAX_IFP","RTAX_MAX","RTAX_NETMASK","RTA_AUTHOR","RTA_BRD","RTA_DST","RTA_GATEWAY","RTA_GENMASK","RTA_IFA","RTA_IFP","RTA_NETMASK","RTF_BLACKHOLE","RTF_BROADCAST","RTF_CLONING","RTF_CONDEMNED","RTF_DEAD","RTF_DELCLONE","RTF_DONE","RTF_DYNAMIC","RTF_GATEWAY","RTF_GLOBAL","RTF_HOST","RTF_IFREF","RTF_IFSCOPE","RTF_LLINFO","RTF_LOCAL","RTF_MODIFIED","RTF_MULTICAST","RTF_NOIFREF","RTF_PINNED","RTF_PRCLONING","RTF_PROTO1","RTF_PROTO2","RTF_PROTO3","RTF_PROXY","RTF_REJECT","RTF_ROUTER","RTF_STATIC","RTF_UP","RTF_WASCLONED","RTF_XRESOLVE","RTLD_DEFAULT","RTLD_FIRST","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_MAIN_ONLY","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTLD_SELF","RTM_ADD","RTM_CHANGE","RTM_DELADDR","RTM_DELETE","RTM_DELMADDR","RTM_GET","RTM_GET2","RTM_IFINFO","RTM_IFINFO2","RTM_LOCK","RTM_LOSING","RTM_MISS","RTM_NEWADDR","RTM_NEWMADDR","RTM_NEWMADDR2","RTM_OLDADD","RTM_OLDDEL","RTM_REDIRECT","RTM_RESOLVE","RTM_VERSION","RTV_EXPIRE","RTV_HOPCOUNT","RTV_MTU","RTV_RPIPE","RTV_RTT","RTV_RTTVAR","RTV_SPIPE","RTV_SSTHRESH","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_INFO_V0","RUSAGE_INFO_V1","RUSAGE_INFO_V2","RUSAGE_INFO_V3","RUSAGE_INFO_V4","RUSAGE_SELF","R_OK","SAE_ASSOCID_ALL","SAE_ASSOCID_ANY","SAE_CONNID_ALL","SAE_CONNID_ANY","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCALE_PPM","SCHED_FIFO","SCHED_OTHER","SCHED_RR","SCM_CREDS","SCM_RIGHTS","SCM_TIMESTAMP","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SEM_FAILED","SEM_UNDO","SETALL","SETVAL","SF_APPEND","SF_ARCHIVED","SF_IMMUTABLE","SF_SETTABLE","SHMLBA","SHM_R","SHM_RDONLY","SHM_RND","SHM_W","SHUTDOWN_TIME","SHUT_RD","SHUT_RDWR","SHUT_WR","SIDL","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEMT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGFPE","SIGHUP","SIGILL","SIGINFO","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGNATURE","SIGPIPE","SIGPROF","SIGQUIT","SIGSEGV","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCGIFADDR","SOCK_DGRAM","SOCK_MAXADDRLEN","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOL_LOCAL","SOL_SOCKET","SOMAXCONN","SO_ACCEPTCONN","SO_BROADCAST","SO_DEBUG","SO_DONTROUTE","SO_DONTTRUNC","SO_ERROR","SO_KEEPALIVE","SO_LABEL","SO_LINGER","SO_LINGER_SEC","SO_NKE","SO_NOADDRERR","SO_NOSIGPIPE","SO_NOTIFYCONFLICT","SO_NP_EXTENSIONS","SO_NREAD","SO_NWRITE","SO_OOBINLINE","SO_PEERLABEL","SO_RANDOMPORT","SO_RCVBUF","SO_RCVLOWAT","SO_RCVTIMEO","SO_REUSEADDR","SO_REUSEPORT","SO_REUSESHAREUID","SO_SNDBUF","SO_SNDLOWAT","SO_SNDTIMEO","SO_TIMESTAMP","SO_TIMESTAMP_MONOTONIC","SO_TYPE","SO_USELOOPBACK","SO_WANTMORE","SO_WANTOOBFLAG","SRUN","SSLEEP","SSTOP","SS_DISABLE","SS_ONSTACK","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","ST_NOSUID","ST_RDONLY","SUPERPAGE_NONE","SUPERPAGE_SIZE_2MB","SUPERPAGE_SIZE_ANY","SYSDIR_DIRECTORY_ADMIN_APPLICATION","SYSDIR_DIRECTORY_ALL_APPLICATIONS","SYSDIR_DIRECTORY_ALL_LIBRARIES","SYSDIR_DIRECTORY_APPLICATION","SYSDIR_DIRECTORY_APPLICATION_SUPPORT","SYSDIR_DIRECTORY_AUTOSAVED_INFORMATION","SYSDIR_DIRECTORY_CACHES","SYSDIR_DIRECTORY_CORESERVICE","SYSDIR_DIRECTORY_DEMO_APPLICATION","SYSDIR_DIRECTORY_DESKTOP","SYSDIR_DIRECTORY_DEVELOPER","SYSDIR_DIRECTORY_DEVELOPER_APPLICATION","SYSDIR_DIRECTORY_DOCUMENT","SYSDIR_DIRECTORY_DOCUMENTATION","SYSDIR_DIRECTORY_DOWNLOADS","SYSDIR_DIRECTORY_INPUT_METHODS","SYSDIR_DIRECTORY_LIBRARY","SYSDIR_DIRECTORY_MOVIES","SYSDIR_DIRECTORY_MUSIC","SYSDIR_DIRECTORY_PICTURES","SYSDIR_DIRECTORY_PREFERENCE_PANES","SYSDIR_DIRECTORY_PRINTER_DESCRIPTION","SYSDIR_DIRECTORY_SHARED_PUBLIC","SYSDIR_DIRECTORY_USER","SYSDIR_DOMAIN_MASK_ALL","SYSDIR_DOMAIN_MASK_LOCAL","SYSDIR_DOMAIN_MASK_NETWORK","SYSDIR_DOMAIN_MASK_SYSTEM","SYSDIR_DOMAIN_MASK_USER","SYSPROTO_CONTROL","SYSPROTO_EVENT","SZOMB","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","Some","TAB0","TAB1","TAB2","TAB3","TABDLY","TASK_THREAD_TIMES_INFO","TASK_THREAD_TIMES_INFO_COUNT","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_FASTOPEN","TCP_KEEPALIVE","TCP_KEEPCNT","TCP_KEEPINTVL","TCP_MAXSEG","TCP_NODELAY","TCP_NOOPT","TCP_NOPUSH","TCSADRAIN","TCSAFLUSH","TCSANOW","THOUSEP","THREAD_AFFINITY_POLICY","THREAD_AFFINITY_POLICY_COUNT","THREAD_AFFINITY_TAG_NULL","THREAD_BACKGROUND_POLICY","THREAD_BACKGROUND_POLICY_COUNT","THREAD_BACKGROUND_POLICY_DARWIN_BG","THREAD_BASIC_INFO","THREAD_BASIC_INFO_COUNT","THREAD_EXTENDED_INFO","THREAD_EXTENDED_INFO_COUNT","THREAD_EXTENDED_POLICY","THREAD_EXTENDED_POLICY_COUNT","THREAD_IDENTIFIER_INFO","THREAD_IDENTIFIER_INFO_COUNT","THREAD_LATENCY_QOS_POLICY","THREAD_LATENCY_QOS_POLICY_COUNT","THREAD_PRECEDENCE_POLICY","THREAD_PRECEDENCE_POLICY_COUNT","THREAD_STANDARD_POLICY","THREAD_STANDARD_POLICY_COUNT","THREAD_THROUGHPUT_QOS_POLICY","THREAD_THROUGHPUT_QOS_POLICY_COUNT","THREAD_TIME_CONSTRAINT_POLICY","THREAD_TIME_CONSTRAINT_POLICY_COUNT","TH_FLAGS_GLOBAL_FORCED_IDLE","TH_FLAGS_IDLE","TH_FLAGS_SWAPPED","TH_STATE_HALTED","TH_STATE_RUNNING","TH_STATE_STOPPED","TH_STATE_UNINTERRUPTIBLE","TH_STATE_WAITING","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCDTR","TIOCCONS","TIOCDCDTIMESTAMP","TIOCDRAIN","TIOCDSIMICROCODE","TIOCEXCL","TIOCEXT","TIOCFLUSH","TIOCGDRAINWAIT","TIOCGETD","TIOCGPGRP","TIOCGWINSZ","TIOCIXOFF","TIOCIXON","TIOCMBIC","TIOCMBIS","TIOCMGDTRWAIT","TIOCMGET","TIOCMODG","TIOCMODS","TIOCMSDTRWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCPTYGNAME","TIOCPTYGRANT","TIOCPTYUNLK","TIOCREMOTE","TIOCSBRK","TIOCSCONS","TIOCSCTTY","TIOCSDRAINWAIT","TIOCSDTR","TIOCSETD","TIOCSIG","TIOCSPGRP","TIOCSTART","TIOCSTAT","TIOCSTI","TIOCSTOP","TIOCSWINSZ","TIOCTIMESTAMP","TIOCUCNTL","TMP_MAX","TOSTOP","T_FMT","T_FMT_AMPM","UF_APPEND","UF_COMPRESSED","UF_HIDDEN","UF_IMMUTABLE","UF_NODUMP","UF_OPAQUE","UF_SETTABLE","UF_TRACKED","USER_BC_BASE_MAX","USER_BC_DIM_MAX","USER_BC_SCALE_MAX","USER_BC_STRING_MAX","USER_COLL_WEIGHTS_MAX","USER_CS_PATH","USER_EXPR_NEST_MAX","USER_LINE_MAX","USER_MAXID","USER_POSIX2_CHAR_TERM","USER_POSIX2_C_BIND","USER_POSIX2_C_DEV","USER_POSIX2_FORT_DEV","USER_POSIX2_FORT_RUN","USER_POSIX2_LOCALEDEF","USER_POSIX2_SW_DEV","USER_POSIX2_UPE","USER_POSIX2_VERSION","USER_PROCESS","USER_RE_DUP_MAX","USER_STREAM_MAX","USER_TZNAME_MAX","USRQUOTA","UTIME_NOW","UTIME_OMIT","UTUN_OPT_FLAGS","UTUN_OPT_IFNAME","VDISCARD","VDSUSP","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VM_FLAGS_ALIAS_MASK","VM_FLAGS_ANYWHERE","VM_FLAGS_FIXED","VM_FLAGS_NO_CACHE","VM_FLAGS_OVERWRITE","VM_FLAGS_PURGABLE","VM_FLAGS_RANDOM_ADDR","VM_FLAGS_RESILIENT_CODESIGN","VM_FLAGS_RESILIENT_MEDIA","VM_FLAGS_RETURN_4K_DATA_ADDR","VM_FLAGS_RETURN_DATA_ADDR","VM_FLAGS_SUPERPAGE_MASK","VM_FLAGS_SUPERPAGE_NONE","VM_FLAGS_SUPERPAGE_SHIFT","VM_FLAGS_SUPERPAGE_SIZE_2MB","VM_FLAGS_SUPERPAGE_SIZE_ANY","VM_FLAGS_USER_ALLOCATE","VM_FLAGS_USER_MAP","VM_FLAGS_USER_REMAP","VM_LOADAVG","VM_MACHFACTOR","VM_MAKE_TAG","VM_MAXID","VM_MEMORY_ACCELERATE","VM_MEMORY_ANALYSIS_TOOL","VM_MEMORY_APPKIT","VM_MEMORY_APPLICATION_SPECIFIC_1","VM_MEMORY_APPLICATION_SPECIFIC_16","VM_MEMORY_ASL","VM_MEMORY_ASSETSD","VM_MEMORY_ATS","VM_MEMORY_CARBON","VM_MEMORY_CGIMAGE","VM_MEMORY_COREDATA","VM_MEMORY_COREDATA_OBJECTIDS","VM_MEMORY_COREGRAPHICS","VM_MEMORY_COREGRAPHICS_BACKINGSTORES","VM_MEMORY_COREGRAPHICS_DATA","VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","VM_MEMORY_COREGRAPHICS_MISC","VM_MEMORY_COREGRAPHICS_SHARED","VM_MEMORY_COREGRAPHICS_XALLOC","VM_MEMORY_COREIMAGE","VM_MEMORY_COREPROFILE","VM_MEMORY_CORESERVICES","VM_MEMORY_COREUI","VM_MEMORY_COREUIFILE","VM_MEMORY_CORPSEINFO","VM_MEMORY_DHMM","VM_MEMORY_DYLD","VM_MEMORY_DYLD_MALLOC","VM_MEMORY_DYLIB","VM_MEMORY_FOUNDATION","VM_MEMORY_GENEALOGY","VM_MEMORY_GLSL","VM_MEMORY_GUARD","VM_MEMORY_IMAGEIO","VM_MEMORY_IOKIT","VM_MEMORY_JAVA","VM_MEMORY_JAVASCRIPT_CORE","VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","VM_MEMORY_LAYERKIT","VM_MEMORY_LIBDISPATCH","VM_MEMORY_MACH_MSG","VM_MEMORY_MALLOC","VM_MEMORY_MALLOC_HUGE","VM_MEMORY_MALLOC_LARGE","VM_MEMORY_MALLOC_LARGE_REUSABLE","VM_MEMORY_MALLOC_LARGE_REUSED","VM_MEMORY_MALLOC_NANO","VM_MEMORY_MALLOC_SMALL","VM_MEMORY_MALLOC_TINY","VM_MEMORY_OBJC_DISPATCHERS","VM_MEMORY_OPENCL","VM_MEMORY_OS_ALLOC_ONCE","VM_MEMORY_RAWCAMERA","VM_MEMORY_REALLOC","VM_MEMORY_SBRK","VM_MEMORY_SCENEKIT","VM_MEMORY_SHARED_PMAP","VM_MEMORY_SKYWALK","VM_MEMORY_SQLITE","VM_MEMORY_STACK","VM_MEMORY_SWIFT_METADATA","VM_MEMORY_SWIFT_RUNTIME","VM_MEMORY_TCMALLOC","VM_MEMORY_UNSHARED_PMAP","VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","VM_METER","VM_PAGE_QUERY_PAGE_COPIED","VM_PAGE_QUERY_PAGE_CS_NX","VM_PAGE_QUERY_PAGE_CS_TAINTED","VM_PAGE_QUERY_PAGE_CS_VALIDATED","VM_PAGE_QUERY_PAGE_DIRTY","VM_PAGE_QUERY_PAGE_EXTERNAL","VM_PAGE_QUERY_PAGE_FICTITIOUS","VM_PAGE_QUERY_PAGE_PAGED_OUT","VM_PAGE_QUERY_PAGE_PRESENT","VM_PAGE_QUERY_PAGE_REF","VM_PAGE_QUERY_PAGE_SPECULATIVE","VM_PROT_EXECUTE","VM_PROT_NONE","VM_PROT_READ","VM_PROT_WRITE","VM_SWAPUSAGE","VOL_CAPABILITIES_FORMAT","VOL_CAPABILITIES_INTERFACES","VOL_CAP_FMT_2TB_FILESIZE","VOL_CAP_FMT_64BIT_OBJECT_IDS","VOL_CAP_FMT_CASE_PRESERVING","VOL_CAP_FMT_CASE_SENSITIVE","VOL_CAP_FMT_DECMPFS_COMPRESSION","VOL_CAP_FMT_DIR_HARDLINKS","VOL_CAP_FMT_DOCUMENT_ID","VOL_CAP_FMT_FAST_STATFS","VOL_CAP_FMT_HARDLINKS","VOL_CAP_FMT_HIDDEN_FILES","VOL_CAP_FMT_JOURNAL","VOL_CAP_FMT_JOURNAL_ACTIVE","VOL_CAP_FMT_NO_IMMUTABLE_FILES","VOL_CAP_FMT_NO_PERMISSIONS","VOL_CAP_FMT_NO_ROOT_TIMES","VOL_CAP_FMT_NO_VOLUME_SIZES","VOL_CAP_FMT_OPENDENYMODES","VOL_CAP_FMT_PATH_FROM_ID","VOL_CAP_FMT_PERSISTENTOBJECTIDS","VOL_CAP_FMT_SEALED","VOL_CAP_FMT_SHARED_SPACE","VOL_CAP_FMT_SPARSE_FILES","VOL_CAP_FMT_SYMBOLICLINKS","VOL_CAP_FMT_VOL_GROUPS","VOL_CAP_FMT_WRITE_GENERATION_COUNT","VOL_CAP_FMT_ZERO_RUNS","VOL_CAP_INT_ADVLOCK","VOL_CAP_INT_ALLOCATE","VOL_CAP_INT_ATTRLIST","VOL_CAP_INT_CLONE","VOL_CAP_INT_COPYFILE","VOL_CAP_INT_EXCHANGEDATA","VOL_CAP_INT_EXTENDED_ATTR","VOL_CAP_INT_EXTENDED_SECURITY","VOL_CAP_INT_FLOCK","VOL_CAP_INT_MANLOCK","VOL_CAP_INT_NAMEDSTREAMS","VOL_CAP_INT_NFSEXPORT","VOL_CAP_INT_READDIRATTR","VOL_CAP_INT_RENAME_EXCL","VOL_CAP_INT_RENAME_OPENFAIL","VOL_CAP_INT_RENAME_SWAP","VOL_CAP_INT_SEARCHFS","VOL_CAP_INT_SNAPSHOT","VOL_CAP_INT_USERACCESS","VOL_CAP_INT_VOL_RENAME","VQUIT","VREPRINT","VSTART","VSTATUS","VSTOP","VSUSP","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_OK","XATTR_CREATE","XATTR_NODEFAULT","XATTR_NOFOLLOW","XATTR_NOSECURITY","XATTR_REPLACE","XATTR_SHOWCOMPRESSION","XUCRED_VERSION","X_OK","YESEXPR","YESSTR","_CS_DARWIN_USER_CACHE_DIR","_CS_DARWIN_USER_DIR","_CS_DARWIN_USER_TEMP_DIR","_CS_PATH","_IOFBF","_IOLBF","_IONBF","_NSGetEnviron","_NSGetExecutablePath","_PC_CHOWN_RESTRICTED","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_VDISABLE","_POSIX_VDISABLE","_PTHREAD_COND_SIG_init","_PTHREAD_MUTEX_SIG_init","_PTHREAD_RWLOCK_SIG_init","_RLIMIT_POSIX_FLAG","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_BARRIERS","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_DELAYTIMER_MAX","_SC_EXPR_NEST_MAX","_SC_FILE_LOCKING","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_MAPPED_FILES","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_NGROUPS_MAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SIGQUEUE_MAX","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SS_REPL_MAX","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_VERSION","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_UTX_HOSTSIZE","_UTX_IDSIZE","_UTX_LINESIZE","_UTX_USERSIZE","_WSTATUS","_WSTOPPED","__PTHREAD_CONDATTR_SIZE__","__PTHREAD_COND_SIZE__","__PTHREAD_MUTEX_SIZE__","__PTHREAD_RWLOCKATTR_SIZE__","__PTHREAD_RWLOCK_SIZE__","__cpsr","__darwin_arm_exception_state64","__darwin_arm_neon_state64","__darwin_arm_thread_state64","__darwin_mcontext64","__error","__es","__esr","__exception","__far","__fp","__fpcr","__fpsr","__int128","__int128_t","__lr","__ns","__pad","__pc","__sp","__ss","__uint128","__uint128_t","__v","__x","_dyld_get_image_header","_dyld_get_image_name","_dyld_get_image_vmaddr_slide","_dyld_image_count","_exit","_key","_seq","abort","abs","accept","access","acct","actime","active_count","active_count","active_count","active_count","address","addrinfo","adjtime","affinity_tag","affinity_tag","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arc4random","arc4random_buf","arc4random_uniform","arphdr","array","asctime","asctime_r","atexit","atof","atoi","atol","atoll","attr_dataoffset","attr_length","attrgroup_t","attribute_set_t","attrlist","attrreference_t","backtrace","backtrace_async","backtrace_from_fp","backtrace_image_offsets","backtrace_symbols","backtrace_symbols_fd","basename","bh_caplen","bh_datalen","bh_hdrlen","bh_tstamp","bind","bitmapcount","blkcnt_t","blksize_t","blocks_in_use","boolean_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpf_hdr","brk","bsearch","buf","bytes_free","bytes_total","bytes_used","c_cc","c_cflag","c_char","c_double","c_float","c_iflag","c_int","c_ispeed","c_lflag","c_long","c_longlong","c_oflag","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","capabilities","cc_t","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","chdir","chflags","chmod","chown","chroot","chunks_free","chunks_used","clearerr","clock_getres","clock_gettime","clock_settime","clock_t","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clonefile","clonefileat","close","closedir","closelog","cmd","cmd","cmd","cmdsize","cmdsize","cmdsize","cmsg_len","cmsg_level","cmsg_type","cmsghdr","commonattr","commonattr","compressions","compressions","compressor_page_count","compressor_page_count","computation","computation","confstr","connect","connectx","constant","constraint","constraint","copyfile","copyfile_flags_t","copyfile_state_t","cow_faults","cow_faults","cow_faults","cow_faults","cpu_subtype","cpu_subtype","cpu_subtype_t","cpu_ticks","cpu_ticks","cpu_type","cpu_type","cpu_type_t","cpu_usage","cpu_usage","cpusubtype","cpusubtype","cputype","cputype","cr_groups","cr_ngroups","cr_uid","cr_version","creat","ctime","ctime_r","ctl_id","ctl_info","ctl_name","cuid","currency_symbol","d_ino","d_name","d_namlen","d_reclen","d_seekoff","d_type","data","data","decimal_point","decompressions","decompressions","default_policy","default_policy","denom","denom","dev_t","difftime","dirattr","dirattr","dirent","dirfd","dirname","disconnectx","dispatch_qaddr","dispatch_qaddr","dladdr","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlopen","dlsym","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curbytes","dqb_curinodes","dqb_id","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_spare","dqblk","drand48","dup","dup2","duplocale","e_tdev","e_tpgid","endgrent","endpwent","endservent","endutxent","erand48","errcnt","esterror","esterror","events","exchangedata","execl","execle","execlp","execv","execve","execvp","exit","ext","external_page_count","external_page_count","f_bavail","f_bavail","f_bfree","f_bfree","f_blocks","f_blocks","f_bsize","f_bsize","f_favail","f_ffree","f_ffree","f_files","f_files","f_flag","f_flags","f_flags_ext","f_frsize","f_fsid","f_fsid","f_fssubtype","f_fstypename","f_iosize","f_mntfromname","f_mntonname","f_namemax","f_owner","f_reserved","f_type","faccessat","faults","faults","faults","faults","fchdir","fchflags","fchmod","fchmodat","fchown","fchownat","fclonefileat","fclose","fcntl","fcopyfile","fd","fd_set","fdopen","fdopendir","feof","ferror","fflags","fflags","fflush","fgetattrlist","fgetc","fgetpos","fgets","fgetxattr","fileattr","fileattr","fileno","fileoff","fileoff","filesize","filesize","filetype","filetype","filter","filter","flag","flags","flags","flags","flags","flags","flags","flags","flags","flistxattr","flock","flock","fmemopen","fmount","fmt","fopen","fork","forkattr","forkattr","forkpty","fpathconf","fpos_t","fprintf","fputc","fputs","frac_digits","fread","freadlink","free","free_count","free_count","free_count","free_count","freeaddrinfo","freeifaddrs","freelocale","fremovexattr","freopen","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsblkcnt_t","fscanf","fseek","fseeko","fsetattrlist","fsetpos","fsetxattr","fsfilcnt_t","fsid_t","fst_bytesalloc","fst_flags","fst_length","fst_offset","fst_posmode","fstat","fstatat","fstatfs","fstatvfs","fstore_t","fsync","ftell","ftello","ftok","ftruncate","futimens","futimes","fwrite","gai_strerror","getaddrinfo","getattrlist","getattrlistat","getattrlistbulk","getchar","getchar_unlocked","getcwd","getdate","getdomainname","getdtablesize","getegid","getenv","geteuid","getfsstat","getgid","getgrent","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","gethostuuid","getifaddrs","getitimer","getline","getloadavg","getlogin","getmntinfo","getnameinfo","getopt","getopt_long","getpeereid","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprogname","getprotobyname","getprotobynumber","getpwent","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrlimit","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid_t","gl_offs","gl_pathc","gl_pathv","glob","glob_t","globfree","gmtime","gmtime_r","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","group","grouping","h_addr_list","h_addrtype","h_aliases","h_length","h_name","has_arg","hdr_cnt","headers","hits","hits","hits","hits","host_flavor_t","host_info64_t","host_info_t","host_processor_info","host_statistics","host_statistics64","host_t","hostent","hstrerror","iconv","iconv_close","iconv_open","iconv_t","id_t","ident","ident","idtype_t","if_data","if_data64","if_freenameindex","if_index","if_indextoname","if_msghdr","if_msghdr2","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_dstaddr","ifa_flags","ifa_msghdr","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifam_addrs","ifam_flags","ifam_index","ifam_metric","ifam_msglen","ifam_type","ifam_version","ifi_addrlen","ifi_addrlen","ifi_baudrate","ifi_baudrate","ifi_collisions","ifi_collisions","ifi_hdrlen","ifi_hdrlen","ifi_hwassist","ifi_ibytes","ifi_ibytes","ifi_ierrors","ifi_ierrors","ifi_imcasts","ifi_imcasts","ifi_ipackets","ifi_ipackets","ifi_iqdrops","ifi_iqdrops","ifi_lastchange","ifi_lastchange","ifi_metric","ifi_metric","ifi_mtu","ifi_mtu","ifi_noproto","ifi_noproto","ifi_obytes","ifi_obytes","ifi_oerrors","ifi_oerrors","ifi_omcasts","ifi_omcasts","ifi_opackets","ifi_opackets","ifi_physical","ifi_physical","ifi_recvquota","ifi_recvquota","ifi_recvtiming","ifi_recvtiming","ifi_reserved1","ifi_reserved2","ifi_type","ifi_type","ifi_typelen","ifi_typelen","ifi_unused1","ifi_unused1","ifi_unused2","ifi_xmitquota","ifi_xmitquota","ifi_xmittiming","ifi_xmittiming","ifm_addrs","ifm_addrs","ifm_data","ifm_data","ifm_flags","ifm_flags","ifm_index","ifm_index","ifm_msglen","ifm_msglen","ifm_snd_drops","ifm_snd_len","ifm_snd_maxlen","ifm_timer","ifm_type","ifm_type","ifm_version","ifm_version","ifma_msghdr","ifma_msghdr2","ifmam_addrs","ifmam_addrs","ifmam_flags","ifmam_flags","ifmam_index","ifmam_index","ifmam_msglen","ifmam_msglen","ifmam_refcount","ifmam_type","ifmam_type","ifmam_version","ifmam_version","image_offset","importance","importance","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_pktinfo","in_addr","in_addr_t","in_pktinfo","in_port_t","inactive_count","inactive_count","inactive_count","inactive_count","initgroups","initprot","initprot","ino_t","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","integer_t","internal_page_count","internal_page_count","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","iov_base","iov_len","iovec","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","is_master","is_master","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_value","itimerval","jitcnt","jitter","jrand48","kCCAlignmentError","kCCBufferTooSmall","kCCCallSequenceError","kCCDecodeError","kCCInvalidKey","kCCKeySizeError","kCCMemoryFailure","kCCOverflow","kCCParamError","kCCRNGFailure","kCCSuccess","kCCUnimplemented","kCCUnspecifiedError","kern_return_t","kevent","kevent","kevent64","kevent64_s","key_t","kill","killpg","kqueue","l2p_contigbytes","l2p_devoffset","l2p_flags","l_len","l_linger","l_onoff","l_pid","l_start","l_type","l_whence","labs","lchown","lcong48","lconv","ledger_array_t","ledger_t","linger","link","linkat","lio_listio","listen","listxattr","load_average","load_average","load_command","locale_t","localeconv","localeconv_l","localtime","localtime_r","lockf","log2phys","login_tty","lookups","lookups","lookups","lookups","lrand48","lseek","lstat","lutimes","mach_absolute_time","mach_factor","mach_factor","mach_header","mach_header_64","mach_host_self","mach_msg_type_number_t","mach_port_t","mach_task_basic_info","mach_task_basic_info_data_t","mach_task_basic_info_t","mach_task_self","mach_task_self_","mach_thread_self","mach_timebase_info","mach_timebase_info","mach_timebase_info_data_t","mach_vm_address_t","mach_vm_map","mach_vm_offset_t","mach_vm_size_t","machine","madvise","magic","magic","major","makedev","malloc","malloc_default_zone","malloc_good_size","malloc_printf","malloc_size","malloc_statistics_t","malloc_zone_calloc","malloc_zone_check","malloc_zone_free","malloc_zone_from_ptr","malloc_zone_log","malloc_zone_malloc","malloc_zone_print","malloc_zone_print_ptr_info","malloc_zone_realloc","malloc_zone_statistics","malloc_zone_t","malloc_zone_valloc","max_align_t","max_size_in_use","maxerror","maxerror","maxprot","maxprot","mcontext_t","mem_entry_name_port_t","memchr","memcmp","memcpy","memmem","memmove","memory_object_offset_t","memory_object_t","memset","memset_pattern16","memset_pattern4","memset_pattern8","memset_s","microseconds","mincore","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkstemp","mkstemps","mktime","mlock","mlockall","mmap","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mrand48","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","mstats","mstats","msync","munlock","munlockall","munmap","n_cs_precedes","n_sep_by_space","n_sign_posn","name","nanosleep","nativeattr","natural_t","ncmds","ncmds","negative_sign","newlocale","nfds_t","nice","nl_item","nl_langinfo","nlink_t","no_data","no_data","nodename","nrand48","nsects","nsects","ntp_adjtime","ntp_gettime","ntptimeval","numer","numer","off_t","offset","offset","open","open_memstream","open_wmemstream","openat","opendir","openlog","openpty","option","os_log_create","os_log_t","os_log_type_enabled","os_log_type_t","os_signpost_enabled","os_signpost_id_generate","os_signpost_id_make_with_pointer","os_signpost_id_t","os_signpost_type_t","os_unfair_lock","os_unfair_lock_assert_not_owner","os_unfair_lock_assert_owner","os_unfair_lock_lock","os_unfair_lock_s","os_unfair_lock_t","os_unfair_lock_trylock","os_unfair_lock_unlock","p_aliases","p_cs_precedes","p_name","p_proto","p_sep_by_space","p_sign_posn","pageins","pageins","pageins","pageins","pageouts","pageouts","pageouts","pageouts","passwd","pathconf","pause","pbi_comm","pbi_flags","pbi_gid","pbi_name","pbi_nfiles","pbi_nice","pbi_pgid","pbi_pid","pbi_pjobc","pbi_ppid","pbi_rgid","pbi_ruid","pbi_start_tvsec","pbi_start_tvusec","pbi_status","pbi_svgid","pbi_svuid","pbi_uid","pbi_xstatus","pbsd","pclose","period","period","perror","pid_t","pipe","policy","policy","policy","policy","policy_t","poll","pollfd","popen","positive_sign","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addclose","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addopen","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_get_qos_class_np","posix_spawnattr_getarchpref_np","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_set_qos_class_np","posix_spawnattr_setarchpref_np","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppsfreq","pread","preadv","precision","preemptible","preemptible","printf","priority","priority","proc_bsdinfo","proc_kmsgbuf","proc_libversion","proc_listallpids","proc_listchildpids","proc_listpgrppids","proc_listpids","proc_name","proc_pid_rusage","proc_pidfdinfo","proc_pidfileportinfo","proc_pidinfo","proc_pidpath","proc_regionfilename","proc_set_csm","proc_set_no_smt","proc_setthread_csm","proc_setthread_no_smt","proc_taskallinfo","proc_taskinfo","proc_threadinfo","proc_vnodepathinfo","processor_basic_info","processor_basic_info_data_t","processor_basic_info_t","processor_count","processor_count","processor_cpu_load_info","processor_cpu_load_info_data_t","processor_cpu_load_info_t","processor_flavor_t","processor_info_array_t","processor_info_t","processor_set_basic_info","processor_set_basic_info_data_t","processor_set_basic_info_t","processor_set_load_info","processor_set_load_info_data_t","processor_set_load_info_t","protoent","pselect","pseudo_AF_HDRCMPLT","pseudo_AF_KEY","pseudo_AF_PIP","pseudo_AF_RTIP","pseudo_AF_XTP","pth_cpu_usage","pth_cpu_usage","pth_cpu_usage","pth_curpri","pth_curpri","pth_curpri","pth_flags","pth_flags","pth_flags","pth_maxpriority","pth_maxpriority","pth_maxpriority","pth_name","pth_name","pth_name","pth_policy","pth_policy","pth_policy","pth_priority","pth_priority","pth_priority","pth_run_state","pth_run_state","pth_run_state","pth_sleep_time","pth_sleep_time","pth_sleep_time","pth_system_time","pth_system_time","pth_system_time","pth_user_time","pth_user_time","pth_user_time","pthread_atfork","pthread_attr_destroy","pthread_attr_get_qos_class_np","pthread_attr_getschedparam","pthread_attr_init","pthread_attr_set_qos_class_np","pthread_attr_setdetachstate","pthread_attr_setschedparam","pthread_attr_setstacksize","pthread_attr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setpshared","pthread_condattr_t","pthread_cpu_number_np","pthread_create","pthread_create_from_mach_thread","pthread_detach","pthread_exit","pthread_from_mach_thread_np","pthread_get_qos_class_np","pthread_get_stackaddr_np","pthread_get_stacksize_np","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_introspection_getspecific_np","pthread_introspection_hook_install","pthread_introspection_hook_t","pthread_introspection_setspecific_np","pthread_jit_write_callback_t","pthread_jit_write_freeze_callbacks_np","pthread_jit_write_protect_np","pthread_jit_write_protect_supported_np","pthread_jit_write_with_callback_np","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mach_thread_np","pthread_main_np","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getpshared","pthread_mutexattr_init","pthread_mutexattr_setpshared","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_set_qos_class_self_np","pthread_setname_np","pthread_setschedparam","pthread_setspecific","pthread_sigmask","pthread_stack_frame_decode_np","pthread_t","pthread_threadid_np","pti_cow_faults","pti_csw","pti_faults","pti_messages_received","pti_messages_sent","pti_numrunning","pti_pageins","pti_policy","pti_priority","pti_resident_size","pti_syscalls_mach","pti_syscalls_unix","pti_threadnum","pti_threads_system","pti_threads_user","pti_total_system","pti_total_user","pti_virtual_size","ptinfo","ptrace","ptrdiff_t","ptsname","purgeable_count","purgeable_count","purgeable_count","purgeable_count","purges","purges","purges","purges","putchar","putchar_unlocked","putenv","puts","pututxline","pvi_cdir","pvi_rdir","pw_change","pw_class","pw_dir","pw_expire","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwritev","qos_class_t","qsort","querylocale","quotactl","ra_count","ra_offset","radvisory","raise","rand","reactivations","reactivations","reactivations","reactivations","read","readdir","readdir_r","readlink","readlinkat","readv","realloc","realpath","recv","recvfrom","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","release","remove","removexattr","rename","renameat","renameatx_np","renamex_np","res_init","reserved","reserved","resident_size","resident_size","resident_size_max","resident_size_max","revents","rewind","rewinddir","rfu_1","ri_billed_energy","ri_billed_system_time","ri_billed_system_time","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_elapsed_abstime","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_interrupt_wkups","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pageins","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_pkg_idle_wkups","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_system_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_child_user_time","ri_cpu_time_qos_background","ri_cpu_time_qos_background","ri_cpu_time_qos_default","ri_cpu_time_qos_default","ri_cpu_time_qos_legacy","ri_cpu_time_qos_legacy","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_maintenance","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_initiated","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_user_interactive","ri_cpu_time_qos_utility","ri_cpu_time_qos_utility","ri_cycles","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_bytesread","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_diskio_byteswritten","ri_instructions","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interrupt_wkups","ri_interval_max_phys_footprint","ri_lifetime_max_phys_footprint","ri_logical_writes","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_pageins","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_phys_footprint","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_pkg_idle_wkups","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_exit_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_proc_start_abstime","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_resident_size","ri_runnable_time","ri_serviced_energy","ri_serviced_system_time","ri_serviced_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_system_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_user_time","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_uuid","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","ri_wired_size","rlim_cur","rlim_max","rlim_t","rlimit","rm_eo","rm_so","rmdir","rmx_expire","rmx_filler","rmx_hopcount","rmx_locks","rmx_mtu","rmx_pksent","rmx_recvpipe","rmx_rtt","rmx_rttvar","rmx_sendpipe","rmx_ssthresh","rmx_state","rt_metrics","rt_msghdr","rt_msghdr2","rtm_addrs","rtm_addrs","rtm_errno","rtm_flags","rtm_flags","rtm_index","rtm_index","rtm_inits","rtm_inits","rtm_msglen","rtm_msglen","rtm_parentflags","rtm_pid","rtm_refcnt","rtm_reserved","rtm_rmx","rtm_rmx","rtm_seq","rtm_type","rtm_type","rtm_use","rtm_use","rtm_version","rtm_version","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","run_state","run_state","running","running","rusage","rusage_info_t","rusage_info_v0","rusage_info_v1","rusage_info_v2","rusage_info_v3","rusage_info_v4","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_endpoints_t","sa_family","sa_family_t","sa_flags","sa_len","sa_mask","sa_sigaction","sae_associd_t","sae_connid_t","sae_dstaddr","sae_dstaddrlen","sae_srcaddr","sae_srcaddrlen","sae_srcif","sbrk","sc_family","sc_id","sc_len","sc_reserved","sc_unit","scanf","sched_get_priority_max","sched_get_priority_min","sched_param","sched_priority","sched_yield","sdl_alen","sdl_data","sdl_family","sdl_index","sdl_len","sdl_nlen","sdl_slen","sdl_type","seconds","seed48","seekdir","segment_command","segment_command_64","segname","segname","select","sem_base","sem_close","sem_ctime","sem_flg","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_pad1","sem_pad2","sem_pad3","sem_perm","sem_post","sem_t","sem_trywait","sem_unlink","sem_wait","sembuf","semctl","semget","semid_ds","semop","semun","send","sendfile","sendmsg","sendto","servent","setattrlist","setattrlistat","setbuf","setdomainname","setegid","setenv","seteuid","setgid","setgrent","setgroups","sethostid","sethostname","setitimer","setlocale","setlogin","setlogmask","setpgid","setpriority","setprogname","setpwent","setregid","setreuid","setrlimit","setservent","setsid","setsockopt","settimeofday","setuid","setutxent","setvbuf","setxattr","sf_hdtr","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_internal","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_addr","si_code","si_errno","si_pid","si_pid","si_signo","si_status","si_status","si_uid","si_uid","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_attributes","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","sigpending","sigprocmask","sigset_t","sigval","sigwait","sin6_addr","sin6_family","sin6_flowinfo","sin6_len","sin6_port","sin6_scope_id","sin_addr","sin_addr","sin_family","sin_family","sin_len","sin_len","sin_other","sin_port","sin_port","sin_srcaddr","sin_tos","sin_zero","sival_ptr","size","size_allocated","size_in_use","size_t","sizeofcmds","sizeofcmds","sleep","sleep_time","sleep_time","slot_num","slot_num","snd_family","snd_len","snd_name","snprintf","sockaddr","sockaddr_ctl","sockaddr_dl","sockaddr_in","sockaddr_in6","sockaddr_inarp","sockaddr_ndrv","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","speculative_count","speculative_count","speculative_count","speculative_count","speed_t","sprintf","srand","srand48","ss_family","ss_flags","ss_len","ss_size","ss_sp","ss_sysaddr","sscanf","ssize_t","st_atime","st_atime_nsec","st_birthtime","st_birthtime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_flags","st_gen","st_gid","st_ino","st_lspare","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_qspare","st_rdev","st_size","st_uid","stabil","stack_t","stat","stat","statfs","statfs","status","statvfs","statvfs","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtonum","strtoul","strtoull","strxfrm","sun_family","sun_len","sun_path","suseconds_t","suspend_count","suspend_count","suspend_count","suspend_count","svm_cid","svm_family","svm_len","svm_port","svm_reserved1","swapins","swapins","swapouts","swapouts","symlink","symlinkat","sync","syscall","sysconf","sysctl","sysctlbyname","sysctlnametomib","sysdir_get_next_search_path_enumeration","sysdir_search_path_directory_t","sysdir_search_path_domain_mask_t","sysdir_search_path_enumeration_state","sysdir_start_search_path_enumeration","syslog","sysname","system","system_time","system_time","system_time","system_time","system_time","system_time","tai","task_count","task_count","task_create","task_flavor_t","task_for_pid","task_info","task_info_t","task_inspect_t","task_set_info","task_t","task_terminate","task_thread_times_info","task_thread_times_info_data_t","task_thread_times_info_t","task_threads","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","telldir","termios","thousands_sep","thread_act_array_t","thread_act_t","thread_affinity_policy","thread_affinity_policy_data_t","thread_affinity_policy_t","thread_background_policy","thread_background_policy_data_t","thread_background_policy_t","thread_basic_info","thread_basic_info_data_t","thread_basic_info_t","thread_count","thread_count","thread_extended_info","thread_extended_info_data_t","thread_extended_info_t","thread_extended_policy","thread_extended_policy_data_t","thread_extended_policy_t","thread_flavor_t","thread_handle","thread_handle","thread_id","thread_id","thread_identifier_info","thread_identifier_info_data_t","thread_identifier_info_t","thread_info","thread_info_t","thread_inspect_t","thread_latency_qos_policy","thread_latency_qos_policy_data_t","thread_latency_qos_policy_t","thread_latency_qos_t","thread_latency_qos_tier","thread_latency_qos_tier","thread_policy_flavor_t","thread_policy_get","thread_policy_set","thread_policy_t","thread_precedence_policy","thread_precedence_policy_data_t","thread_precedence_policy_t","thread_standard_policy","thread_standard_policy_data_t","thread_standard_policy_t","thread_t","thread_throughput_qos_policy","thread_throughput_qos_policy_data_t","thread_throughput_qos_policy_t","thread_throughput_qos_t","thread_throughput_qos_tier","thread_throughput_qos_tier","thread_time_constraint_policy","thread_time_constraint_policy_data_t","thread_time_constraint_policy_t","throttled_count","throttled_count","time","time","time_state","time_t","time_value_t","timegm","times","timeshare","timeshare","timespec","timeval","timeval32","timex","timezone","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","total_uncompressed_pages_in_compressor","total_uncompressed_pages_in_compressor","toupper","trailers","trl_cnt","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uc_link","uc_mcontext","uc_mcsize","uc_onstack","uc_sigmask","uc_stack","ucontext_t","udata","udata","uid","uid_t","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","uname","ungetc","unlink","unlinkat","unlockpt","unmount","unsetenv","useconds_t","uselocale","user_time","user_time","user_time","user_time","user_time","user_time","usleep","ut_host","ut_id","ut_line","ut_pid","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpx","utmpxname","utsname","uuid","uuid_t","val","val","valid","validattr","version","vi_fsid","vi_pad","vi_stat","vi_type","vinfo_stat","vip_path","vip_vi","virtual_size","virtual_size","vm_address_t","vm_deallocate","vm_inherit_t","vm_map_t","vm_offset_t","vm_page_size","vm_prot_t","vm_range_t","vm_size_t","vm_statistics","vm_statistics64","vm_statistics64_data_t","vm_statistics64_t","vm_statistics_data_t","vm_statistics_t","vmaddr","vmaddr","vmsize","vmsize","vnode_info","vnode_info_path","vol_attributes_attr_t","vol_capabilities_attr_t","vol_capabilities_set_t","volattr","volattr","vst_atime","vst_atimensec","vst_birthtime","vst_birthtimensec","vst_blksize","vst_blocks","vst_ctime","vst_ctimensec","vst_dev","vst_flags","vst_gen","vst_gid","vst_ino","vst_mode","vst_mtime","vst_mtimensec","vst_nlink","vst_qspare","vst_rdev","vst_size","vst_uid","wait","wait4","waitid","waitpid","wchar_t","wcslen","wcstombs","winsize","wire_count","wire_count","wire_count","wire_count","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xsu_avail","xsu_encrypted","xsu_pagesize","xsu_total","xsu_used","xsw_usage","xucred","zero_fill_count","zero_fill_count","zero_fill_count","zero_fill_count"],"q":[[0,"libc"],[5787,"core::fmt"],[5788,"core::fmt"],[5789,"core::any"]],"ddata includes security that replaces the TFO-cookie","data is idempotent","resume connect() on read/writehird Party Connect","Any distributed FS","IP6 Auth Header","any host internal protocol","any private encr. scheme","Argus","AX.25 Frames","BHA","Bulk Data Transfer","BackRoom SATNET Monitoring","CFTP","Chaos","Control Message Transport","Comp. Prot. HeartBeat","Comp. Prot. Net. Executive","Datagram Delivery","dissimilar gateway prot.","divert pseudo-protocol","last return value of *_input(), meaning “all job for …","IP6 destination option","exterior gateway protocol","EMCON","encapsulation header","ISO cnlp","IP6 Encap Sec. Payload","Ethernet IP encapsulation","IP6 fragmentation header","gateway2 (deprecated)","GMTP","General Routing Encap.","“hello” routing protocol","Host Monitoring","IP6 hop-by-hop options","","","xns idp","InterDomain Policy Routing","InterDomain Routing","group mgmt protocol","NSFNET-IGP","Cisco/GXS IGRP","IL transport protocol","Integ. Net Layer Security","Merit Internodal","","payload compression (IPComp)","Packet Core Utility","IP encapsulated in IP","for compatibility","Pluribus Packet Core","","Reliable Transaction","Kryptolan","Locus Address Resoloution","Leaf-1","Leaf-2","","DCN Measurement Subsystems","Mobile Host Routing","Mobile Int.ing control","Multicast Transport","Multiplexing","Sun net disk proto (temp.)","Next Hop Resolution","IP6 no next header","Network Services","network voice protocol","OSPFIGP","PGM","private interior gateway","Protocol Independent Mcast","Packet Radio Measurement","pup","Packet Video Protocol","raw IP packet","BBN RCC Monitoring","Reliable Data","IP6 routing header","resource reservation","Remote Virtual Disk","SATNET/Backroom EXPAK","Satnet Monitoring","Semaphore Comm. security","SCTP","Source Demand Routing","Sequential Exchange","Strite RPC protocol","Stream protocol II.","Secure VMTP","IP with encryption","TCF","","tp-4 w/ class negotiation","TP++ Transport","Trunk-1","Trunk-2","TTP","","Banyon VINES","VISA Protocol","VMTP","WIDEBAND EXPAK","WIDEBAND Monitoring","Wang Span Network","Cross Net Debuggero valuesae_associd_t)(-1ULL))","","((sae_connid_t)(-1ULL))","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Process being created by fork.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Currently runnable.","Sleeping on an address.","Process debugging or suspension.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Awaiting collection by parent.","","","","","","","","","","","","","","","","","","","","","","","","","","","Some value of type <code>T</code>.","","","","","","","","","","","","","","","Enable/Disable TCP Fastopen on this socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C <code>__int128</code> (a GCC extension that’s part of many ABIs)","C __int128_t (alternate name for __int128)","","","","","","","C <code>unsigned __int128</code> (a GCC extension that’s part of many …","C __uint128_t (alternate name for __uintquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Notesalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,1],[4,4],[[3,1],1],[4,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,6]],[[5,6],7],[[5,6]],0,[6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,5],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,7],0,[5,5],[5,7],[5,7],[5,7],[5,7],0,0,0,[5,5],[5,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[6,6],[34,34],[3,3],[1,1],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[171,172],[[174,[173]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],175],0,0,0,0,0,0,0,0,0,0,0,0,0,[176,177],[[177,177],176],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[176,177],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[57,171],0,0,0,[57,178],0,0,[57,5],0,[57,179],0,[57,25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],[[],174],0,0,0,0,0,0,0,0,[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],[[],180],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[59,1519,1771,1772,1773,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2394,2395,2396,2397,3072,3073,3074,3075,3101,3102,3223,3224,3230,3231,3707,3708,3709,3710,3989,3992,3993,4003,4004,4005,4012,4013,4101,4102,4119,4120,4488,4867,4868,5657,5658,5659,5660],"p":[[3,"cmsghdr",0],[6,"c_uchar",0],[3,"msghdr",0],[6,"c_uint",0],[6,"c_int",0],[3,"fd_set",0],[15,"bool"],[15,"u8"],[15,"u32"],[4,"DIR",0],[4,"FILE",0],[4,"fpos_t",0],[3,"group",0],[3,"utimbuf",0],[3,"timeval",0],[3,"timespec",0],[3,"rlimit",0],[3,"rusage",0],[3,"ipv6_mreq",0],[3,"hostent",0],[3,"iovec",0],[3,"pollfd",0],[3,"winsize",0],[3,"linger",0],[3,"sigval",0],[3,"itimerval",0],[3,"tms",0],[3,"servent",0],[3,"protoent",0],[3,"sockaddr",0],[3,"sockaddr_in6",0],[3,"passwd",0],[3,"ifaddrs",0],[3,"tm",0],[3,"fsid_t",0],[3,"if_nameindex",0],[3,"regex_t",0],[3,"regmatch_t",0],[3,"option",0],[3,"sockaddr_un",0],[3,"utsname",0],[4,"timezone",0],[4,"qos_class_t",0],[4,"sysdir_search_path_directory_t",0],[4,"sysdir_search_path_domain_mask_t",0],[3,"ip_mreq",0],[3,"ip_mreqn",0],[3,"ip_mreq_source",0],[3,"aiocb",0],[3,"glob_t",0],[3,"addrinfo",0],[3,"mach_timebase_info",0],[3,"stat",0],[3,"pthread_mutexattr_t",0],[3,"pthread_condattr_t",0],[3,"pthread_rwlockattr_t",0],[3,"siginfo_t",0],[3,"sigaction",0],[3,"stack_t",0],[3,"fstore_t",0],[3,"radvisory",0],[3,"statvfs",0],[3,"Dl_info",0],[3,"sockaddr_in",0],[3,"kevent64_s",0],[3,"dqblk",0],[3,"if_msghdr",0],[3,"ifa_msghdr",0],[3,"ifma_msghdr",0],[3,"ifma_msghdr2",0],[3,"rt_metrics",0],[3,"rt_msghdr",0],[3,"rt_msghdr2",0],[3,"termios",0],[3,"flock",0],[3,"sf_hdtr",0],[3,"lconv",0],[3,"proc_taskinfo",0],[3,"proc_bsdinfo",0],[3,"proc_taskallinfo",0],[3,"xsw_usage",0],[3,"xucred",0],[3,"mach_header",0],[3,"mach_header_64",0],[3,"segment_command",0],[3,"segment_command_64",0],[3,"load_command",0],[3,"sockaddr_dl",0],[3,"sockaddr_inarp",0],[3,"sockaddr_ctl",0],[3,"in_pktinfo",0],[3,"in6_pktinfo",0],[3,"ipc_perm",0],[3,"sembuf",0],[3,"arphdr",0],[3,"in_addr",0],[3,"sockaddr_ndrv",0],[3,"sa_endpoints_t",0],[3,"timex",0],[3,"ntptimeval",0],[3,"thread_standard_policy",0],[3,"thread_extended_policy",0],[3,"thread_time_constraint_policy",0],[3,"thread_precedence_policy",0],[3,"thread_affinity_policy",0],[3,"thread_background_policy",0],[3,"thread_latency_qos_policy",0],[3,"thread_throughput_qos_policy",0],[3,"malloc_statistics_t",0],[3,"mstats",0],[3,"vm_range_t",0],[3,"sched_param",0],[3,"vinfo_stat",0],[3,"vnode_info",0],[3,"vnode_info_path",0],[3,"proc_vnodepathinfo",0],[3,"vm_statistics",0],[3,"task_thread_times_info",0],[3,"rusage_info_v0",0],[3,"rusage_info_v1",0],[3,"rusage_info_v2",0],[3,"rusage_info_v3",0],[3,"rusage_info_v4",0],[3,"image_offset",0],[3,"attrlist",0],[3,"attrreference_t",0],[3,"vol_capabilities_attr_t",0],[3,"attribute_set_t",0],[3,"vol_attributes_attr_t",0],[3,"kevent",0],[3,"semid_ds",0],[3,"shmid_ds",0],[3,"proc_threadinfo",0],[3,"statfs",0],[3,"dirent",0],[3,"pthread_rwlock_t",0],[3,"pthread_mutex_t",0],[3,"pthread_cond_t",0],[3,"sockaddr_storage",0],[3,"utmpx",0],[3,"sigevent",0],[3,"processor_cpu_load_info",0],[3,"processor_basic_info",0],[3,"processor_set_basic_info",0],[3,"processor_set_load_info",0],[3,"time_value_t",0],[3,"thread_basic_info",0],[3,"thread_identifier_info",0],[3,"thread_extended_info",0],[3,"if_data64",0],[3,"if_msghdr2",0],[3,"vm_statistics64",0],[3,"mach_task_basic_info",0],[3,"log2phys",0],[3,"os_unfair_lock_s",0],[3,"sockaddr_vm",0],[19,"semun",0],[3,"timeval32",0],[3,"if_data",0],[3,"bpf_hdr",0],[3,"pthread_attr_t",0],[3,"malloc_zone_t",0],[3,"max_align_t",0],[3,"ucontext_t",0],[3,"__darwin_mcontext64",0],[3,"__darwin_arm_exception_state64",0],[3,"__darwin_arm_thread_state64",0],[3,"__darwin_arm_neon_state64",0],[3,"ctl_info",0],[3,"in6_addr",0],[4,"c_void",0],[3,"Formatter",5787],[3,"Error",5787],[4,"Result",5788],[6,"mach_port_t",0],[6,"dev_t",0],[15,"i32"],[6,"pid_t",0],[6,"uid_t",0],[3,"TypeId",5789],[6,"pthread_jit_write_callback_t",0],[6,"vm_statistics_data_t",0],[6,"vm_statistics64_data_t",0],[6,"thread_affinity_policy_data_t",0],[6,"thread_time_constraint_policy_data_t",0],[6,"processor_basic_info_data_t",0],[6,"processor_cpu_load_info_data_t",0],[6,"thread_basic_info_data_t",0],[6,"processor_set_basic_info_data_t",0],[6,"mach_timebase_info_data_t",0],[6,"thread_identifier_info_data_t",0],[6,"thread_precedence_policy_data_t",0],[6,"processor_set_load_info_data_t",0],[6,"thread_standard_policy_data_t",0],[6,"mach_task_basic_info_data_t",0],[6,"thread_background_policy_data_t",0],[6,"thread_extended_info_data_t",0],[6,"task_thread_times_info_data_t",0],[6,"thread_latency_qos_policy_data_t",0],[6,"thread_throughput_qos_policy_data_t",0],[6,"thread_extended_policy_data_t",0]],"a":{"__errno_location":[2374],"errno":[2374]}},\
"libloading":{"doc":"Bindings around the platform’s dynamic library loading …","t":"NNNNNNNNENNNNNNNDNNDLLLLLLALLLLLLLLLLLLLLLLLLFLLALLLLLLLLLLLLMMMMMMMMMAAAAAAAAAAAAAAAAAAAAAAAAAADRRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CreateCString","CreateCStringWithTrailing","DlClose","DlCloseUnknown","DlOpen","DlOpenUnknown","DlSym","DlSymUnknown","Error","FreeLibrary","FreeLibraryUnknown","GetModuleHandleExW","GetModuleHandleExWUnknown","GetProcAddress","GetProcAddressUnknown","IncompatibleSize","Library","LoadLibraryExW","LoadLibraryExWUnknown","Symbol","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","changelog","clone","clone_into","close","deref","fmt","fmt","fmt","fmt","from","from","from","from","from_raw","get","into","into","into","into_raw","library_filename","lift_option","new","os","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","desc","desc","desc","source","source","source","source","source","source","r0_3_0","r0_3_1","r0_3_2","r0_3_3","r0_3_4","r0_4_0","r0_4_1","r0_4_2","r0_4_3","r0_5_0","r0_5_1","r0_5_2","r0_6_0","r0_6_1","r0_6_2","r0_6_3","r0_6_4","r0_6_5","r0_6_6","r0_6_7","r0_7_0","r0_7_1","r0_7_2","r0_7_3","r0_7_4","unix","Library","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NOW","Symbol","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","deref","drop","fmt","fmt","from","from","from","from_raw","get","get_singlethreaded","into","into","into_raw","into_raw","lift_option","new","open","this","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"libloading"],[61,"libloading::Error"],[70,"libloading::changelog"],[95,"libloading::os"],[96,"libloading::os::unix"],[134,"core::result"],[135,"core::fmt"],[136,"core::fmt"],[137,"core::convert"],[138,"std::ffi::os_str"],[139,"core::error"],[140,"alloc::string"],[141,"core::any"],[142,"std::os::raw"],[143,"std::os::raw"]],"d":["Could not create a new CString.","Could not create a new CString from bytes with trailing …","The <code>dlclose</code> call failed.","The <code>dlclose</code> call failed and system did not report an error.","The <code>dlopen</code> call failed.","The <code>dlopen</code> call failed and system did not report an error.","The <code>dlsym</code> call failed.","The <code>dlsym</code> call failed and system did not report an error.","Errors.","The <code>FreeLibrary</code> call failed.","The <code>FreeLibrary</code> call failed and system did not report an …","The <code>GetModuleHandleExW</code> call failed.","The <code>GetModuleHandleExW</code> call failed and system did not …","The <code>GetProcAddress</code> call failed.","The <code>GetProcAddressUnknown</code> call failed and system did not …","The requested type cannot possibly work.","A loaded dynamic library.","The <code>LoadLibraryW</code> call failed.","The <code>LoadLibraryW</code> call failed and system did not report an …","Symbol from a library.","","","","","","","The change log.","","","Unload the library.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wrap the <code>os::platform::Symbol</code> into this safe wrapper.","Get a pointer to a function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Extract the wrapped <code>os::platform::Symbol</code>.","Converts a library name to a filename generally …","Lift Option out of the symbol.","Find and load a dynamic library.","Unsafe but flexible platform-specific bindings to dynamic …","","","","","","","","","","","","","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","The source error.","Release 0.3.0 (2016-07-27)","Release 0.3.1 (2016-10-01)","Release 0.3.2 (2017-02-10)","Release 0.3.3 (2017-03-25)","Release 0.3.4 (2017-03-25)","Release 0.4.0 (2017-05-01)","Release 0.4.1 (2017-08-29)","Release 0.4.2 (2017-09-24)","Release 0.4.3 (2017-12-07)","Release 0.5.0 (2018-01-11)","Release 0.5.1 (2019-06-01)","Release 0.5.2 (2019-07-07)","Release 0.6.0 (2020-04-05)","Release 0.6.1 (2020-04-15)","Release 0.6.2 (2020-05-06)","Release 0.6.3 (2020-08-22)","Release 0.6.4 (2020-10-10)","Release 0.6.5 (2020-10-23)","Release 0.6.6 (2020-12-03)","Release 0.6.7 (2021-01-14)","Release 0.7.0 (2021-02-06)","Release 0.7.1 (2021-10-09)","Release 0.7.2 (2021-11-14)","Release 0.7.3 (2022-01-15)","Release 0.7.4 (2022-11-07)","UNIX implementation of dynamic library loading.","A platform-specific counterpart of the cross-platform …","Make loaded symbols available for resolution globally.","Perform lazy binding.","Load symbols into an isolated namespace.","Perform eager binding.","Symbol from a library.","","","","","","","Unload the library.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert a raw handle returned by <code>dlopen</code>-family of calls to …","Get a pointer to a function or static variable by symbol …","Get a pointer to function or static variable by symbol …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the <code>Library</code> to a raw handle.","Convert the loaded <code>Symbol</code> into a raw pointer.","Lift Option out of the symbol.","Find and eagerly load a shared library (module).","Find and load an executable object file (shared library).","Load the <code>Library</code> representing the current executable.","","","","","","",""],"i":[3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,3,3,0,2,1,3,2,1,3,0,1,1,2,1,2,1,3,3,2,2,1,3,1,2,2,1,3,1,0,1,2,0,3,1,3,2,1,3,2,1,3,2,1,3,20,21,22,23,24,25,26,27,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,8,8,8,7,8,7,7,8,7,7,8,7,7,7,7,8,7,8,8,7,7,7,8,7,8,7,8,7,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[[]],[2,[[4,[3]]]],[1],[[2,5],6],[[1,5],6],[[3,5],6],[[3,5],6],[7,2],[[]],[[]],[[]],[8,1],[[2,[10,[9]]],[[4,[1,3]]]],[[]],[[]],[[]],[1,8],[[[12,[11]]],13],[[[1,[14]]],[[14,[1]]]],[[[12,[11]]],[[4,[2,3]]]],0,[3,[[14,[15]]]],[[]],[[],16],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],17],[[],17],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[8,8],[[]],[7,[[4,[3]]]],[8],[7],[[7,5],6],[[8,5],6],[[]],[2,7],[[]],[18,7],[[7,[10,[9]]],[[4,[8,3]]]],[[7,[10,[9]]],[[4,[8,3]]]],[[]],[[]],[7,18],[8,18],[[[8,[14]]],[[14,[8]]]],[[[12,[11]]],[[4,[7,3]]]],[[[14,[[12,[11]]]],19],[[4,[7,3]]]],[[],7],[[]],[[],4],[[],4],[[],4],[[],4],[[],17],[[],17]],"c":[],"p":[[3,"Symbol",0],[3,"Library",0],[4,"Error",0],[4,"Result",134],[3,"Formatter",135],[6,"Result",135],[3,"Library",96],[3,"Symbol",96],[15,"u8"],[15,"slice"],[3,"OsStr",136],[8,"AsRef",137],[3,"OsString",136],[4,"Option",138],[8,"Error",139],[3,"String",140],[3,"TypeId",141],[6,"c_void",142],[6,"c_int",142],[13,"DlOpen",61],[13,"DlSym",61],[13,"DlClose",61],[13,"LoadLibraryExW",61],[13,"GetModuleHandleExW",61],[13,"GetProcAddress",61],[13,"FreeLibrary",61],[13,"CreateCString",61],[13,"CreateCStringWithTrailing",61]]},\
"log":{"doc":"A lightweight logging facade.","t":"NNNNNNEEIDDNDDDRDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLKLLLLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLKOOFLLFLLLLLLLLLLLLLLFFFFLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLO","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"],[170,"core::fmt"],[171,"core::cmp"],[172,"core::option"],[173,"core::fmt"],[174,"core::hash"],[175,"core::iter::traits::iterator"],[176,"core::any"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,20,4,4,6,6,8,7,11,0,1,3,1,3,20,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,1,3,20,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[8,10],[[4,6],10],[[4,4],10],[[6,4],10],[[6,6],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,17]],[[6,17]],[[8,17]],[[7,17]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[19]]]],[[3,[12,[19]]],3],[1],0,0,[[],20],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,6],[[12,[9]]]],[[4,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[6,4],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[20,[[16,[15]]]],[20,[[16,[15]]]],[6],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0],"c":[],"p":[[3,"Record",0],[3,"Arguments",170],[3,"RecordBuilder",0],[4,"Level",0],[15,"str"],[4,"LevelFilter",0],[3,"MetadataBuilder",0],[3,"Metadata",0],[4,"Ordering",171],[15,"bool"],[3,"ParseLevelError",0],[4,"Option",172],[3,"Formatter",170],[6,"Result",170],[3,"SetLoggerError",0],[4,"Result",173],[8,"Hasher",174],[8,"Iterator",175],[15,"u32"],[8,"Log",0],[3,"TypeId",176]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":"CCCCCCCCCCCNCCCECCQCNCCIIIICIICDCCICCCCCCCCCCCCCCCCCLLLLAACCFFFALLLLLKAALLMCAACAACLLLLLLLCIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIIKKLKLKKKLKLKKKKKKKKKKLKKLKKKLKKKKLKLKKKKKKLKLKLKLKLKLLLKKKKKKLKKKLKKKKKKKKKKKKKLKLKLKLKKKKKKKLKLKLIILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAAQQIIIKKLKKLIIIIIIIIKKKKKKKKIIKKKKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKIIFKFKKKFK","n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","Float","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","real","sign","signum","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","is_subnormal","is_subnormal","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num_traits"],[90,"num_traits::bounds"],[97,"num_traits::cast"],[132,"num_traits::float"],[243,"num_traits::identities"],[253,"num_traits::int"],[273,"num_traits::ops"],[281,"num_traits::ops::bytes"],[292,"num_traits::ops::checked"],[308,"num_traits::ops::euclid"],[314,"num_traits::ops::inv"],[317,"num_traits::ops::mul_add"],[322,"num_traits::ops::overflowing"],[328,"num_traits::ops::saturating"],[337,"num_traits::ops::wrapping"],[349,"num_traits::pow"],[354,"num_traits::real"],[402,"num_traits::sign"],[412,"core::cmp"],[413,"core::fmt"],[414,"core::fmt"],[415,"alloc::string"],[416,"core::any"],[417,"core::option"],[418,"core::marker"],[419,"core::ops::arith"],[420,"core::ops::arith"],[421,"core::cmp"],[422,"core::ops::arith"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns <code>true</code> if the number is subnormal.","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,39,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,39,0,0,2,5,5,0,0,0,0,0,0,0,5,2,5,2,5,2,5,0,0,0,0,40,41,40,42,0,0,0,0,43,0,11,44,44,44,44,44,44,44,44,44,44,44,44,44,44,13,13,13,13,13,13,13,13,13,13,13,13,13,13,45,45,45,45,45,45,45,45,45,45,0,0,0,45,45,45,45,45,45,45,45,45,46,47,46,46,46,46,46,46,46,46,46,46,47,47,46,46,46,46,47,46,46,46,46,46,47,46,47,46,47,46,47,46,46,47,46,47,46,47,46,47,46,47,46,47,47,46,46,46,46,46,46,46,47,47,46,46,47,47,46,47,46,46,47,46,47,46,47,46,46,46,47,46,47,46,47,46,47,46,46,46,46,46,46,47,46,47,46,46,47,0,0,33,34,0,33,33,34,0,34,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,49,50,0,0,0,50,50,50,49,49,49,0,0,0,0,0,0,0,0,51,52,36,53,54,55,56,57,0,0,58,58,59,59,0,60,60,0,0,61,61,62,0,0,0,63,64,65,0,0,0,0,66,67,68,66,69,0,0,0,0,0,0,70,71,72,73,74,75,76,0,0,0,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,38,0,38,38,38,0,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[1,1,1],1],[[1,1],1],[[1,1],1],0,[[2,3],4],[[5,3],4],[[5,3],4],[[]],[[]],[[6,7],8],0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],9],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[11,[[12,[11]]]],[13,12],[14,12],[15,12],[16,12],[17,12],[18,12],[19,12],[20,12],[21,12],[22,12],[23,12],[7,12],[24,12],[25,12],[26,12],[[],[[12,[14]]]],[[],[[12,[15]]]],[[],[[12,[16]]]],[[],[[12,[17]]]],[[],[[12,[18]]]],[[],[[12,[19]]]],[[],[[12,[20]]]],[[],[[12,[21]]]],[[],[[12,[22]]]],[[],[[12,[23]]]],[[],[[12,[7]]]],[[],[[12,[24]]]],[[],[[12,[25]]]],[[],[[12,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[],[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,29]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[32,31],[[],31],[[],33],[[]],[[]],[[]],[[],34],[[]],0,[[],7],[[],7],[[]],[[]],[[],7],[[],7],[7],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[],7],[[],7],[7],[7],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[7,12],[7,12],[[],12],0,0,[[],12],[[],12],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[7],[7],[[]],0,0,[[[0,[35,33,36]],26],[[12,[[0,[35,33,36]]]]]],[[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,37]]]]]]]]]]]]]]]]]],26],[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,37]]]]]]]]]]]]]]]]]]]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[38,38],[[]],[[38,38],38],[[]],[[],31],[[],31],[38,38],[[]]],"c":[],"p":[[8,"PartialOrd",412],[4,"FloatErrorKind",0],[3,"Formatter",413],[6,"Result",413],[3,"ParseFloatError",0],[15,"str"],[15,"u32"],[4,"Result",414],[3,"String",415],[3,"TypeId",416],[8,"NumCast",97],[4,"Option",417],[8,"ToPrimitive",97],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Sized",418],[8,"Div",419],[8,"Add",419],[4,"FpCategory",420],[15,"bool"],[8,"PartialEq",412],[8,"One",243],[8,"Zero",243],[8,"Clone",421],[8,"CheckedMul",292],[8,"Mul",419],[8,"Signed",402],[8,"Num",0],[8,"Bounded",90],[8,"UpperBounded",90],[8,"LowerBounded",90],[8,"AsPrimitive",97],[8,"FromPrimitive",97],[8,"FloatConst",132],[8,"Float",132],[8,"FloatCore",132],[8,"PrimInt",253],[8,"ToBytes",281],[8,"FromBytes",281],[8,"CheckedAdd",292],[8,"CheckedDiv",292],[8,"CheckedNeg",292],[8,"CheckedRem",292],[8,"CheckedShl",292],[8,"CheckedShr",292],[8,"CheckedSub",292],[8,"CheckedEuclid",308],[8,"Euclid",308],[8,"Inv",314],[8,"MulAdd",317],[8,"MulAddAssign",317],[8,"OverflowingAdd",322],[8,"OverflowingMul",322],[8,"OverflowingSub",322],[8,"Saturating",328],[8,"SaturatingAdd",328],[8,"SaturatingMul",328],[8,"SaturatingSub",328],[8,"WrappingAdd",337],[8,"WrappingMul",337],[8,"WrappingNeg",337],[8,"WrappingShl",337],[8,"WrappingShr",337],[8,"WrappingSub",337],[8,"Pow",349],[8,"Real",354]]},\
"objc2":{"doc":"Objective-C interface and runtime bindings","t":"ICCCIIISCQKKKOAOCAOOCAOOOOAAOLLLLQQDIDDIISQDQQLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLNGDDDNQDDDGDEIDDDDGGDIDCLDDIDDDDRDDGDDGDGDDGCDDDQQQNSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMMMDDIIDQDIQDIIDLLKLLKKLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDGDDRSDDDRSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ClassType","Encode","EncodeArguments","Encoding","Message","MessageArguments","MessageReceiver","NAME","RefEncode","Super","as_super","as_super_mut","class","class","declare","declare_class","encode","exception","extern_class","extern_methods","ffi","foundation","msg_send","msg_send_bool","msg_send_id","ns_string","rc","runtime","sel","send_message","send_message","send_super_message","send_super_message","Args","Callee","ClassBuilder","InnerIvarType","Ivar","IvarDrop","IvarType","MethodImplementation","NAME","Output","ProtocolBuilder","Ret","Type","add_class_method","add_class_method_description","add_ivar","add_method","add_method_description","add_protocol","add_protocol","add_static_ivar","as_mut","as_mut_ptr","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmp","consume","deref","deref_mut","drop","drop","eq","equivalent","fill_buf","finish","flush","fmt","fmt","fmt","fmt","fmt","from","from","from","from","ge","gt","hash","into","into","into","into","into_future","into_iter","le","len","lt","ne","new","new","next","next_back","nth_back","partial_cmp","poll","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","register","register","root","seek","size_hint","source","stream_position","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","write","write","write","write_all","write_fmt","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","write_vectored","Exception","as_ref","borrow","borrow_mut","deref","fmt","fmt","from","into","to_string","try_from","try_into","type_id","Ascending","CGFloat","CGPoint","CGRect","CGSize","Descending","Item","MainThreadMarker","NSArray","NSAttributedString","NSAttributedStringKey","NSBundle","NSComparisonResult","NSCopying","NSData","NSDictionary","NSEnumerator","NSError","NSErrorDomain","NSErrorUserInfoKey","NSException","NSFastEnumeration","NSFastEnumerator","NSInteger","NSLocalizedDescriptionKey","NSMutableArray","NSMutableAttributedString","NSMutableCopying","NSMutableData","NSMutableDictionary","NSMutableSet","NSMutableString","NSNotFound","NSNumber","NSObject","NSPoint","NSProcessInfo","NSRange","NSRect","NSSet","NSSize","NSString","NSThread","NSTimeInterval","NSUInteger","NSUUID","NSValue","NSZone","Output","Output","Ownership","Same","ZERO","ZERO","ZERO","__from_inner","__from_inner","__from_inner","__from_inner","__from_inner","__into_inner","__into_inner","__into_inner","__into_inner","__into_inner","__to_mut","__to_mut","__to_mut","__to_mut","__to_mut","__to_ptr","__to_ptr","__to_ptr","__to_ptr","__to_ptr","__to_ref","__to_ref","__to_ref","__to_ref","__to_ref","abs","add_assign","as_bool","as_bytes","as_cgfloat","as_f32","as_f64","as_i16","as_i32","as_i64","as_i8","as_isize","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_super_mut","as_u16","as_u32","as_u64","as_u8","as_usize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes_mut","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","class","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","code","concat","contains","contains","contains_encoding","copy","copy","current","default","default","default","default","default","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","default_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain","encoding","encoding","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend_from_slice","first","first_mut","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_attributed_nsstring","from_bytes","from_data","from_exception","from_keys_and_objects","from_keys_and_objects","from_nsstring","from_nsstring","from_nsstring","from_ptr","from_slice","from_slice","from_slice","from_slice","from_str","from_str","from_string","from_vec","from_vec","from_vec","from_vec","get","get","get","get","get_any","get_mut","get_mut","get_point","get_range","get_rect","get_retained","get_size","has_prefix","has_suffix","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","info","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_exception","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_values_array","into_values_array","into_vec","into_vec","into_vec","is_disjoint","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_kind_of","is_main","is_main_thread","is_multi_threaded","is_subset","is_superset","iter","iter","iter_fast","iter_fast","iter_keys","iter_values","join_path","keys","keys_and_objects","keys_array","last","last_mut","len","len","len","len","len","len_utf16","len_utf16","length","localized_description","location","main","main","max","mid","min","mutable_copy","mutable_copy","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_bool","new_cgfloat","new_f32","new_f64","new_i16","new_i32","new_i64","new_i8","new_isize","new_u16","new_u32","new_u64","new_u8","new_unchecked","new_usize","new_v4","new_with_attributes","next","next","nil","objects_in_range","origin","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pop","process_info","process_name","push","push","push_nsstring","raise","reason","remove","remove","remove","replace","replace","replace","replace_range","set_bytes","set_len","size","size","sort_by","standardize","string","string","to_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_shared_vec","to_string","to_string","to_string","to_string","to_string","to_vec","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_info","user_info","values","values_mut","width","width","with_bytes","with_bytes","with_capacity","with_capacity","write","write_all","write_str","x","x","y","y","Allocated","AutoreleasePool","AutoreleaseSafe","DefaultId","Id","Item","Owned","Ownership","Ownership","Shared","SliceId","SliceIdMut","WeakId","as_mut","as_mut_ptr","as_mut_slice_mut","as_ptr","as_ref","as_slice_mut","as_slice_ref","autorelease","autorelease","autorelease_return","autoreleasepool","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","consume","default","default","default_id","deref","deref_mut","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fill_buf","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_shared","ge","gt","hash","hash","hash","into","into","into","into","into","into","into_future","into_iter","into_shared","into_super","le","len","load","lt","ne","new","new","next","next_back","nth","nth_back","partial_cmp","partial_cmp","partial_cmp","poll","ptr_as_mut","ptr_as_ref","read","read_exact","read_line","read_to_end","read_to_string","read_until","read_vectored","retain","retain_autoreleased","seek","size_hint","source","stream_position","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write","write_all","write_fmt","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","write_vectored","BOOL","Bool","Class","Imp","Ivar","Method","NO","NO","Object","Protocol","Sel","YES","YES","__from_inner","__from_inner","__into_inner","__into_inner","__to_mut","__to_mut","__to_ptr","__to_ptr","__to_ref","__to_ref","arguments_count","as_bool","as_ptr","as_raw","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","classes_count","clone","clone","clone_into","clone_into","conforms_to","conforms_to","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","get","get","get_ivar","get_mut_ivar","hash","hash","hash","hash","implementation","instance_method","instance_size","instance_variable","into","into","into","into","into","into","into","is_false","is_true","ivar","ivar_mut","ivar_ptr","metaclass","name","name","name","name","name","new","offset","register","responds_to","set_ivar","superclass","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_encoding","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"objc2"],[33,"objc2::declare"],[151,"objc2::exception"],[164,"objc2::foundation"],[1217,"objc2::rc"],[1389,"objc2::runtime"],[1524,"objc2_encode::encode"],[1525,"core::cmp"],[1526,"std::io::error"],[1527,"core::fmt"],[1528,"core::fmt"],[1529,"core::option"],[1530,"core::pin"],[1531,"core::task::wake"],[1532,"core::task::poll"],[1533,"alloc::string"],[1534,"alloc::vec"],[1535,"std::io"],[1536,"std::io"],[1537,"core::result"],[1538,"core::any"],[1539,"core::fmt"],[1540,"objc_sys::types"],[1541,"core::cmp"],[1542,"core::iter::traits::collect"],[1543,"core::fmt"],[1544,"core::marker"],[1545,"objc2_encode::encode"],[1546,"core::marker"],[1547,"core::fmt"],[1548,"core::iter::traits::iterator"],[1549,"core::iter::traits::double_ended"],[1550,"core::future::future"],[1551,"core::marker"]],"d":["Marks types that represent specific classes.","","","","Types that can be sent Objective-C messages.","Types that may be used as the arguments of an Objective-C …","Types that can directly be used as the receiver of …","The name of the Objective-C class that this type …","","The superclass of this class.","Get an immutable reference to the superclass.","Get a mutable reference to the superclass.","Get a reference to the Objective-C class that this type …","Gets a reference to a <code>Class</code> from the given name.","Functionality for dynamically declaring Objective-C …","Declare a new Objective-C class.","","Objective-C’s @throw and @try/@catch.","Create a new type to represent an Objective-C class.","Define methods on an external class.","","Bindings to the <code>Foundation</code> framework.","Send a message to an object or class.","Deprecated. Use <code>msg_send!</code> instead.","<code>msg_send!</code> for methods returning <code>id</code>, <code>NSObject*</code>, or similar …","Creates an <code>NSString</code> from a static string.","Utilities for reference counting Objective-C objects.","A Rust interface for the functionality of the Objective-C …","Register a selector with the Objective-C runtime.","Sends a message to self with the given selector and …","Sends a message to self with the given selector and …","Sends a message to a specific superclass with the given …","Sends a message to a specific superclass with the given …","The argument types of the method.","The callee type of the method.","A type for declaring a new class and adding new methods …","Types that may be used in ivars.","A wrapper type over a custom instance variable.","A helper type to allow putting certain types that may drop …","Helper trait for defining instance variables.","Types that can be used as the implementation of an …","The name of the instance variable.","The type that an <code>Ivar</code> containing this will dereference to.","A type for declaring a new protocol and adding new methods …","The return type of the method.","The type of the instance variable.","Adds a class method with the given name and implementation.","Adds a class method declaration with a given description.","Adds an ivar with type <code>T</code> and the provided name.","Adds a method with the given name and implementation.","Adds an instance method declaration with a given …","Adds the given protocol to self.","Adds a requirement on another protocol.","Adds an instance variable from an <code>IvarType</code>.","","Get a mutable pointer to the instance variable.","Get a pointer to the instance variable.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Constructs a <code>ClassBuilder</code> with the given name and …","Constructs a <code>ProtocolBuilder</code> with the given name.","","","","","","","","","","","","","Registers the <code>ClassBuilder</code>, consuming it, and returns a …","Registers the <code>ProtocolBuilder</code>, consuming it and returning …","Constructs a <code>ClassBuilder</code> declaring a new root class with …","","","","","","","","","","","","","","","","","","Sets the value of the instance variable.","","","","","","","","","","","","","","","","","","An Objective-C exception.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","The left operand is smaller than the right operand.","The basic type for all floating-point values.","A point in a two-dimensional coordinate system.","The location and dimensions of a rectangle.","A two-dimensional size.","The left operand is greater than the right operand.","","A marker type taken by functions that can only be executed …","An immutable ordered collection of objects.","A string that has associated attributes for portions of …","Attributes that you can apply to text in an attributed …","A representation of the code and resources stored in a …","Constants that indicate sort order.","","A static byte buffer in memory.","","","Information about an error condition including a domain, a …","","","A special condition that interrupts the normal flow of …","","","","","A growable ordered collection of objects.","A mutable string that has associated attributes.","TODO","A dynamic byte buffer in memory.","A mutable collection of objects associated with unique …","A growable unordered collection of unique objects.","A dynamic plain-text Unicode string object.","A value indicating that a requested item couldn’t be …","An object wrapper for primitive scalars.","","A point in a Cartesian coordinate system.","A collection of information about the current process.","TODO.","A rectangle.","An immutable unordered collection of unique objects.","A two-dimensional size.","An immutable, plain-text Unicode string object.","A thread of execution.","A number of seconds.","","A universally unique value.","A container wrapping any encodable type as an Obective-C …","A type used to identify and manage memory zones.","The output type.","TODO","Indicates whether the type is mutable or immutable.","The two operands are equal.","A point with both coordinates set to <code>0.0</code>.","A size that is 0.0 in both dimensions.","A rectangle with origin (0.0, 0.0) and zero width and …","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the size to a non-negative size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>str</code> representation of thislears the dictionary, removing all key-value pairs.","Clears the set, removing all values.","","","","","","","","","","","","","","","","","","","Create a new string by appending the given string to self.","Returns <code>true</code> if the index is within the range.","Returns <code>true</code> if the set contains a value.","","","","Returns the <code>NSThread</code> object representing the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Objective-C encoding of this <code>NSNumber</code>.","","Returns the upper bound of the range (exclusive).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","You should use <code>extend_from_slice</code> whenever possible, it is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Create this from an <code>Exception</code> object.","","Creates an <code>NSMutableDictionary</code> from a slice of keys and a …","Creates a new attributed string without any attributes.","","Creates a new <code>NSMutableString</code> from the given <code>NSString</code>.","TODO","","","Creates an <code>NSMutableSet</code> from a slice.","Creates an <code>NSSet</code> from a slice.","Creates a new <code>NSMutableString</code> by copying the given string …","Creates an immutable <code>NSString</code> by copying the given string …","","","","Creates an <code>NSMutableSet</code> from a vector.","Creates an <code>NSSet</code> from a vector.","","","Returns a reference to the value in the set, if any, that …","Retrieve the data contained in the <code>NSValue</code>.","Returns a reference to one of the objects in the set, or …","","Returns a mutable reference to the value corresponding to …","","","","","","Whether the given string matches the beginning characters …","Whether the given string matches the ending characters of …","","","","","","","","","","","","","","","","","","","","","","","","","The dimensions along the y-axis.","The dimensions along the y-axis.","","","","","","","","","","","","","Inserts a key-value pair into the dictionary.","Adds a value to the set. Returns whether the value was …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this into an <code>Exception</code> object.","","","","","","","","","","","Returns an <code>NSArray</code> containing the dictionary’s values, …","","Returns a <code>Vec</code> containing the set’s elements, consuming …","Returns a <code>Vec</code> containing the set’s elements, consuming …","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.","","","","Returns whether a rectangle has zero width or height.","Returns <code>true</code> if the range contains no items.","Returns <code>true</code> if the set contains no elements.","","Check if the object is an instance of the class, or one of …","Returns <code>true</code> if the thread is the main thread.","Whether the current thread is the main thread.","Whether the application is multithreaded according to …","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>","Returns <code>true</code> if the set is a superset of another, i.e., …","","An iterator visiting all elements in arbitrary order.","","","","","Create a new string by appending the given string, …","","","","","","","","","Returns the number of elements in the set.","The number of UTF-8 code units in <code>self</code>.","Alias for <code>self.string().len_utf16()</code>.","The number of UTF-16 code units in the string.","The number of items in the range, starting from <code>location</code>.","","The lower bound of the range (inclusive).","","Returns the <code>NSThread</code> object representing the main thread.","The largest coordinate of the rectangle.","The center point of the rectangle.","The smallest coordinate of the rectangle.","","","","A that uniquely identifies the type of exception.","The name of the thread.","Get an empty array.","Construct an empty attributed string.","","","Construct a new <code>NSError</code> with the given code in the given …","Create a new <code>NSException</code> object.","Create a new point with the given coordinates.","Create a new size with the given dimensions.","Create a new rectangle with the given origin and …","","Construct an empty mutable attributed string.","","Creates an empty <code>NSMutableDictionary</code>.","Creates an empty <code>NSMutableSet</code>.","Construct an empty <code>NSMutableString</code>.","","Create a new range with the given values.","Creates an empty <code>NSSet</code>.","Construct an empty NSString.","Construct a new <code>MainThreadMarker</code>.","Create a new <code>NSValue</code> containing the given type.","","","","","","","","","","","","","","Construct a new <code>MainThreadMarker</code> without first checking …","","","Creates a new attributed string from the given string and …","","","The ‘nil UUID’.","","The coordinates of the rectangle’s origin.","The coordinates of the rectangle’s origin.","","","","","","","","","","","","","","Appends the given <code>NSString</code> onto the end of this.","Raises the exception, causing program flow to jump to the …","A human-readable message summarizing the reason for the …","","Removes a key from the dictionary, returning the value at …","Removes a value from the set. Returns whether the value …","","Replaces the entire attributed string.","Replaces the entire string.","","","Expands with zeroes, or truncates the buffer.","The dimensions of the rectangle.","The dimensions of the rectangle.","","Returns a rectangle with a positive width and height.","","","Returns an <code>NSArray</code> containing the set’s elements, or an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Application-specific data pertaining to the exception.","","Returns a vector of mutable references to the values in …","The dimensions along the x-axis.","The dimensions along the x-axis.","","","","","","","","The x-coordinate of the point.","The x-coordinate of the point.","The y-coordinate of the point.","The y-coordinate of the point.","A marker type that can be used within <code>Id</code> to indicate that …","An Objective-C autorelease pool.","Marks types that are safe to pass across the closure in an …","Helper trait to implement <code>Default</code> on types whoose default …","An pointer for Objective-C reference counted objects.","The type of the items in the slice.","A type used to mark that a struct owns the object(s) it …","A type that marks what type of ownership a struct has over …","Indicates whether the default value is mutable or …","A type used to mark that the object(s) a struct contains …","Helper trait for functionality on slices containing <code>Id</code>s.","Helper trait for functionality on slices containing owned …","A pointer type for a weak reference to an Objective-C …","","Returns a raw mutable pointer to the object.","Convert a mutable slice of mutable <code>Id</code>s into a mutable …","Returns a raw pointer to the object.","","Convert a mutable slice of <code>Id</code>s into a mutable slice of …","Convert a slice of <code>Id</code>s into a slice of references.","Autoreleases the shared <code>Id</code>, returning an aliased reference …","Autoreleases the owned <code>Id</code>, returning a mutable reference …","Autoreleases and prepares the <code>Id</code> to be returned to …","Execute <code>f</code> in the context of a new autorelease pool. The …","","","","","","","","","","","","","","","Convert the type of the given object to another.","Makes a clone of the shared object.","Makes a clone of the <code>WeakId</code> that points to the same object.","","","","","","","","","","","","Constructs a new <code>WeakId&lt;T&gt;</code> that doesn’t reference any …","The default <code>Id</code> for a type.","Obtain an immutable reference to the object.","Obtain a mutable reference to the object.","Releases the retained object.","Drops the <code>WeakId</code> pointer.","Drains the autoreleasepool.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Convert an owned to a shared <code>Id</code>, allowing it to be cloned.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Promote a shared <code>Id</code> to an owned one, allowing it to be …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert an owned to a shared <code>Id</code>, allowing it to be cloned.","Convert the object into it’s superclass.","","","Load a shared (and retained) <code>Id</code> if the object still exists.","","","Constructs an <code>Id</code> to an object that already has +1 retain …","Construct a new <code>WeakId</code> referencing the given shared <code>Id</code>.","","","","","","","","","Returns a unique reference to the given autoreleased …","Returns a shared reference to the given autoreleased …","","","","","","","","Retains the given object pointer.","Retains a previously autoreleased object pointer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use <code>Bool</code> or <code>ffi::BOOL</code> instead.","The Objective-C <code>BOOL</code> type.","A type that represents an Objective-C class.","A pointer to the start of a method implementation.","A type that represents an instance variable.","A type that represents a method in a class definition.","Use <code>Bool::NO</code> or <code>ffi::NO</code> instead.","The equivalent of <code>false</code> for Objective-C’s <code>BOOL</code> type.","An Objective-C object.","A type that represents an Objective-C protocol.","A method selector.","Use <code>Bool::YES</code> or <code>ffi::YES</code> instead.","The equivalent of <code>true</code> for Objective-C’s <code>BOOL</code> type.","","","","","","","","","","","Returns the number of arguments accepted by self.","Converts this into the <code>bool</code> equivalent.","Get a pointer to the raw selector.","Retrieves the inner <code>objc_sys::BOOL</code> boolean type, to be …","","","","","","","","","","","","","","","Dynamically find the class of this object.","Returns the total number of registered classes.","","","","","Checks whether this class conforms to the specified …","Checks whether this protocol conforms to the specified …","","","","","Check whether the protocols are equal, or conform to each …","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates this from a boolean value received from a raw …","Returns the class definition of a specified class, or <code>None</code> …","Returns the protocol definition of a specified protocol, …","Use <code>Object::ivar</code> instead.","Use <code>Object::ivar_mut</code> instead.","","","","","Returns the implementation of self.","Returns a specified instance method for self, or <code>None</code> if …","Returns the size of instances of self.","Returns the ivar for a specified instance variable of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>self</code> is <code>NO</code>.","Returns <code>true</code> if <code>self</code> is not <code>NO</code>.","Returns a reference to the instance variable with the …","Returns a mutable reference to the ivar with the given …","Returns a pointer to the instance variable / ivar with the …","Returns the metaclass of self.","Returns the name of self.","Returns the name of self.","Returns the name of the class.","Returns the name of self.","Returns the string representation of the selector.","Creates an Objective-C boolean from a Rust boolean.","Returns the offset of self.","Registers a selector with the Objective-C runtime.","Check whether instances of this class respond to the given …","Sets the value of the ivar with the given name.","Returns the superclass of self, or <code>None</code> if self is a root …","","","","","","","","","","","","","","","","","Returns the <code>Encoding</code> of self.","","","","","","",""],"i":[0,0,0,0,0,0,0,118,0,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,131,131,131,6,6,0,0,0,0,0,0,11,132,0,6,11,5,7,5,5,7,5,7,5,12,12,12,12,12,133,5,7,12,133,5,7,12,12,12,12,12,5,12,12,12,12,12,12,12,12,5,7,12,133,5,7,12,12,12,12,133,5,7,12,12,12,12,12,12,5,7,12,12,12,12,12,12,12,12,12,12,12,12,5,7,5,12,12,12,12,12,12,133,5,7,12,133,5,7,12,133,5,7,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,44,44,44,44,44,44,44,44,44,44,44,44,77,0,0,0,0,77,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,134,92,77,78,48,79,77,78,48,79,80,77,78,48,79,80,77,78,48,79,80,77,78,48,79,80,77,78,48,79,80,48,49,51,52,51,51,51,51,51,51,51,51,59,59,59,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,67,68,68,68,68,69,69,69,69,69,70,70,70,70,71,71,71,71,49,49,49,49,51,51,51,51,60,60,74,74,74,72,72,72,50,50,50,75,75,75,52,52,52,73,73,73,59,59,59,61,61,61,62,62,62,63,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,67,68,68,68,68,69,69,69,69,69,70,70,70,70,71,71,71,71,49,49,49,49,51,51,51,51,60,60,74,74,74,72,72,72,50,50,50,75,75,75,52,52,52,73,73,73,50,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,51,51,51,51,51,93,101,89,59,59,59,61,61,61,62,62,62,77,63,63,63,64,64,64,65,65,65,66,66,66,78,48,79,67,67,67,67,68,68,68,68,69,69,69,69,70,70,70,70,71,71,71,71,49,49,49,49,51,51,51,51,60,60,74,74,74,80,72,72,72,50,50,50,75,75,75,81,52,52,52,73,73,73,93,101,89,59,59,59,61,61,61,62,62,62,77,63,63,63,64,64,64,65,65,65,66,66,66,78,48,79,67,67,67,67,68,68,68,68,69,69,69,69,70,70,70,70,71,71,71,71,49,49,49,49,51,51,51,51,60,60,74,74,74,80,72,72,72,50,50,50,75,75,75,81,52,52,52,73,73,73,63,69,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,67,70,71,77,78,48,79,80,81,77,78,48,79,80,81,77,49,80,50,81,65,50,80,72,73,92,92,75,77,78,48,79,80,59,61,63,64,67,68,69,70,71,49,60,72,50,52,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,59,61,62,63,64,65,66,67,68,69,70,71,49,51,60,74,72,50,75,52,73,65,51,73,80,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,49,51,60,74,80,72,50,50,75,81,52,73,59,61,62,77,63,64,65,66,67,68,69,70,71,49,60,74,80,72,50,75,81,52,67,69,69,71,69,59,59,69,89,59,61,62,77,63,64,65,65,66,78,48,79,67,68,69,70,71,49,49,51,51,60,74,80,72,50,50,75,81,52,52,73,93,101,89,59,61,62,77,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,80,72,50,75,81,52,73,68,52,69,66,64,70,61,68,49,93,59,67,71,72,49,50,52,59,67,71,72,59,64,72,73,72,59,70,73,73,73,59,73,50,50,59,61,62,77,63,64,65,66,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,98,48,59,63,64,67,69,70,59,67,69,70,62,67,70,71,93,101,89,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,66,93,101,59,63,67,69,69,71,72,64,70,59,71,72,72,59,63,64,79,80,72,50,60,75,0,0,72,72,59,72,103,103,64,64,50,64,64,64,59,59,59,63,64,72,50,61,50,80,65,80,62,75,79,79,79,134,134,62,66,75,59,61,63,64,65,66,78,48,79,67,68,69,70,71,49,60,80,72,50,81,73,51,51,51,51,51,51,51,51,51,51,51,51,51,81,51,52,61,93,101,52,59,97,79,77,49,49,51,80,50,50,81,67,74,74,67,69,49,66,66,67,70,71,67,68,49,69,69,69,97,79,67,79,61,52,72,59,61,77,63,66,78,48,79,67,68,69,71,49,51,80,72,50,81,52,73,59,65,49,51,50,52,59,93,101,89,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,93,101,89,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,93,101,89,59,61,62,77,63,64,65,66,78,48,79,67,68,69,70,71,49,51,60,74,80,72,50,75,81,52,73,65,66,64,70,98,48,63,69,69,49,69,69,49,96,78,96,78,0,0,0,0,0,135,0,0,113,0,0,0,0,84,84,136,84,84,135,135,84,84,84,0,84,84,110,116,76,88,83,84,84,110,116,76,88,83,84,84,110,88,83,84,110,88,83,84,88,83,84,84,110,113,84,84,84,110,76,84,88,83,84,88,83,84,84,84,84,84,84,110,116,76,76,88,83,84,84,110,110,116,76,88,83,84,84,84,84,88,83,84,110,116,76,88,83,84,84,84,84,84,84,110,84,84,84,110,84,84,84,84,84,88,83,84,76,76,84,84,84,84,84,84,84,84,84,84,84,84,84,84,110,88,83,84,84,84,110,116,76,88,83,84,110,116,76,88,83,84,110,116,76,88,83,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,0,0,0,0,0,0,127,0,0,0,0,127,127,2,127,2,127,2,127,2,127,2,126,127,2,127,127,129,126,1,10,45,2,127,129,126,1,10,45,2,45,1,127,2,127,2,1,10,127,129,126,1,10,2,129,126,1,10,2,127,1,10,45,2,2,127,127,129,126,1,10,45,2,127,1,10,45,45,129,126,1,2,126,1,1,1,127,129,126,1,10,45,2,127,127,45,45,45,1,129,126,1,10,2,127,129,2,1,45,1,127,2,127,129,126,1,10,45,2,127,129,126,1,10,45,2,129,127,129,126,1,10,45,2],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,3],4],[[2,3],4],[[1,2,3],4],[[1,2,3],4],0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,2,6]],[[7,2,8]],[[5,9]],[[5,2,6]],[[7,2,8]],[[5,10]],[[7,10]],[5],[[[12,[11]]]],[[[12,[11]]]],[[[12,[11]]]],[[[12,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[11]],[12,[11]]],13],[[[12,[11]],14]],[[[12,[11]]]],[[[12,[11]]]],[[[12,[11]]]],[5],[[[12,[11]],[12,[11]]],8],[[],8],[[[12,[11]]],[[17,[[16,[15]]]]]],[[[12,[11]]],18],[[[12,[11]]],17],[[[12,[11]],19],20],[[[12,[11]],19],20],[[[12,[11]],19],20],[[5,19],20],[[7,19],20],[[]],[[]],[[]],[[]],[[[12,[11]],[12,[11]]],8],[[[12,[11]],[12,[11]]],8],[[[12,[11]],21]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[11]],[12,[11]]],8],[[[12,[11]]],14],[[[12,[11]],[12,[11]]],8],[[[12,[11]],[12,[11]]],8],[[9,1],[[22,[5]]]],[9,[[22,[7]]]],[[[12,[11]]],22],[[[12,[11]]],22],[[[12,[11]],14],22],[[[12,[11]],[12,[11]]],[[22,[13]]]],[[[23,[[12,[11]]]],24],25],[[[12,[11]],[16,[15]]],[[17,[14]]]],[[[12,[11]],[16,[15]]],17],[[[12,[11]],26],[[17,[14]]]],[[[12,[11]],[27,[15]]],[[17,[14]]]],[[[12,[11]],26],[[17,[14]]]],[[[12,[11]],15,[27,[15]]],[[17,[14]]]],[[[12,[11]],[16,[28]]],[[17,[14]]]],[5,1],[7,10],[[9,6],[[22,[5]]]],[[[12,[11]],29],[[17,[18]]]],[[[12,[11]]]],[[[12,[11]]],[[22,[30]]]],[[[12,[11]]],[[17,[18]]]],[[],26],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[[12,[11]]]],[[[12,[11]],[16,[15]]],[[17,[14]]]],[[[12,[11]],[16,[15]]]],[[[12,[11]],[16,[15]]],17],[[[12,[11]],33],17],[[[12,[11]],34]],[[[12,[11]],35]],[[[12,[11]],36]],[[[12,[11]],37]],[[[12,[11]],38]],[[[12,[11]],39]],[[[12,[11]],40]],[[[12,[11]],41]],[[[12,[11]],42]],[[[12,[11]],18]],[[[12,[11]],15]],[[[12,[11]],14]],[[[12,[11]],[16,[43]]],[[17,[14]]]],0,[44,45],[[]],[[]],[44,45],[[44,19],20],[[44,19],20],[[]],[[]],[[],26],[[],31],[[],31],[[],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],46],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[47,47],[47,47],[47,47],[47,47],[[]],[[]],[[]],[[]],[[]],[48,48],[[49,50]],[51,8],[52,[[53,[15]]]],[51,54],[51,55],[51,56],[51,35],[51,36],[51,37],[51,38],[51,39],[[[59,[57,58]]],[[59,[57,58]]]],[[[59,[57,58]]],45],[[[59,[57,58]]],60],[61,60],[61,45],[61,61],[62,62],[62,60],[62,45],[63,63],[63,45],[63,60],[[[64,[57,57]]],45],[[[64,[57,57]]],[[64,[57,57]]]],[[[64,[57,57]]],60],[65,45],[65,65],[65,60],[66,66],[66,60],[66,45],[[[67,[57,58]]],[[67,[57,58]]]],[[[67,[57,58]]],60],[[[67,[57,58]]],[[59,[57,58]]]],[[[67,[57,58]]],45],[68,45],[68,61],[68,68],[68,60],[69,45],[69,60],[69,69],[69,[[16,[15]]]],[69,63],[[[70,[57,57]]],45],[[[70,[57,57]]],60],[[[70,[57,57]]],[[70,[57,57]]]],[[[70,[57,57]]],[[64,[57,57]]]],[[[71,[57,58]]],[[71,[57,58]]]],[[[71,[57,58]]],[[72,[57,58]]]],[[[71,[57,58]]],60],[[[71,[57,58]]],45],[49,49],[49,50],[49,45],[49,60],[51,45],[51,60],[51,73],[51,51],[60,60],[60,45],[74,74],[74,60],[74,45],[[[72,[57,58]]],[[72,[57,58]]]],[[[72,[57,58]]],60],[[[72,[57,58]]],45],[50,50],[50,60],[50,45],[75,45],[75,75],[75,60],[52,45],[52,52],[52,60],[73,45],[73,73],[73,60],[[[59,[57,58]]],60],[[[59,[57,58]]],45],[[[59,[57,58]]],[[59,[57,58]]]],[61,60],[61,61],[61,45],[62,45],[62,62],[62,60],[63,60],[63,63],[63,45],[63,[[16,[15]]]],[[[64,[57,57]]],60],[[[64,[57,57]]],45],[[[64,[57,57]]],[[64,[57,57]]]],[65,60],[65,45],[65,65],[66,45],[66,66],[66,60],[[[67,[57,58]]],[[67,[57,58]]]],[[[67,[57,58]]],[[59,[57,58]]]],[[[67,[57,58]]],60],[[[67,[57,58]]],45],[68,61],[68,68],[68,45],[68,60],[69,63],[69,45],[69,[[16,[15]]]],[69,60],[69,69],[[[70,[57,57]]],[[70,[57,57]]]],[[[70,[57,57]]],45],[[[70,[57,57]]],[[64,[57,57]]]],[[[70,[57,57]]],60],[[[71,[57,58]]],60],[[[71,[57,58]]],[[72,[57,58]]]],[[[71,[57,58]]],45],[[[71,[57,58]]],[[71,[57,58]]]],[49,60],[49,49],[49,45],[49,50],[51,51],[51,73],[51,45],[51,60],[60,60],[60,45],[74,60],[74,45],[74,74],[[[72,[57,58]]],60],[[[72,[57,58]]],[[72,[57,58]]]],[[[72,[57,58]]],45],[50,50],[50,45],[50,60],[75,45],[75,75],[75,60],[52,60],[52,52],[52,45],[73,73],[73,45],[73,60],[[50,76],9],[[[59,[57,58]]]],[61],[62],[63],[[[64,[57,57]]]],[65],[66],[[[67,[57,58]]]],[68],[69],[[[70,[57,57]]]],[[[71,[57,58]]]],[49],[51],[60],[74],[[[72,[57,58]]]],[50],[75],[52],[73],[[[59,[57,58]]]],[61],[62],[63],[[[64,[57,57]]]],[65],[66],[[[67,[57,58]]]],[68],[69],[[[70,[57,57]]]],[[[71,[57,58]]]],[49],[51],[60],[74],[[[72,[57,58]]]],[50],[75],[52],[73],[51,41],[51,42],[51,18],[51,15],[51,14],[[]],[[]],[[]],[[[59,[57,58]]],60],[[[59,[57,58]]],45],[[]],[61,60],[61,45],[[]],[62,60],[62,45],[[]],[[]],[63,60],[[]],[63,45],[[[64,[57,57]]],60],[[]],[[[64,[57,57]]],45],[[]],[65,45],[65,60],[66,45],[[]],[66,60],[[]],[[]],[[]],[[[67,[57,58]]],60],[[[67,[57,58]]],[[59,[57,58]]]],[[]],[[[67,[57,58]]],45],[68,61],[[]],[68,45],[68,60],[69,60],[69,45],[[]],[69,63],[[[70,[57,57]]],60],[[[70,[57,57]]],[[64,[57,57]]]],[[]],[[[70,[57,57]]],45],[[[71,[57,58]]],45],[[[71,[57,58]]],[[72,[57,58]]]],[[[71,[57,58]]],60],[[]],[49,60],[[]],[49,45],[49,50],[51,73],[51,60],[51,45],[[]],[60,45],[[]],[74,45],[74,60],[[]],[[]],[[]],[[[72,[57,58]]],45],[[[72,[57,58]]],60],[50,45],[[]],[50,60],[75,45],[[]],[75,60],[[]],[52,60],[52,45],[[]],[73,60],[73,45],[[]],[[]],[[]],[[]],[[[59,[57,58]]],45],[[]],[[[59,[57,58]]],60],[[]],[61,45],[61,60],[[]],[62,60],[62,45],[[]],[63,60],[[]],[63,45],[[[64,[57,57]]],45],[[[64,[57,57]]],60],[[]],[[]],[65,45],[65,60],[66,60],[66,45],[[]],[[]],[[]],[[]],[[]],[[[67,[57,58]]],45],[[[67,[57,58]]],60],[[[67,[57,58]]],[[59,[57,58]]]],[68,60],[68,61],[[]],[68,45],[69,60],[69,63],[69,45],[[]],[[]],[[[70,[57,57]]],60],[[[70,[57,57]]],45],[[[70,[57,57]]],[[64,[57,57]]]],[[]],[[[71,[57,58]]],[[72,[57,58]]]],[[[71,[57,58]]],60],[[[71,[57,58]]],45],[49,60],[49,50],[49,45],[[]],[51,60],[51,45],[51,73],[[]],[[]],[60,45],[[]],[74,60],[74,45],[[]],[[]],[[[72,[57,58]]],45],[[[72,[57,58]]],60],[[]],[50,45],[50,60],[[]],[75,60],[75,45],[[]],[52,45],[52,60],[[]],[[]],[73,45],[73,60],[63,[[16,[15]]]],[69,[[16,[15]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[[67,[57,58]]]],[[[70,[57,57]]]],[[[71,[57,58]]]],[77,77],[78,78],[48,48],[79,79],[80,80],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[[77,77],13],[[49,49],13],[[80,80],13],[[50,50],13],[[81,81],13],[65,82],[[50,50],[[84,[50,83]]]],[[80,14],8],[[[72,[[0,[57,85]],58]],[0,[57,85]]],8],[73,8],[[],84],[[],84],[[],[[84,[75,83]]]],[[],77],[[],78],[[],48],[[],79],[[],80],[[],[[84,[[59,[57,58]]]]]],[[],[[84,[61]]]],[[],[[84,[63]]]],[[],[[84,[[64,[57,57]]]]]],[[],[[84,[[67,[57,58]]]]]],[[],[[84,[68]]]],[[],[[84,[69]]]],[[],[[84,[[70,[57,57]]]]]],[[],[[84,[[71,[57,58]]]]]],[[],[[84,[49]]]],[[],[[84,[60]]]],[[],[[84,[[72,[57,58]]]]]],[[],[[84,[50]]]],[[],[[84,[52]]]],[[[59,[57,58]]]],[61],[62],[63],[[[64,[57,57]]]],[65],[66],[[[67,[57,58]]]],[68],[69],[[[70,[57,57]]]],[[[71,[57,58]]]],[49],[51],[60],[74],[[[72,[57,58]]]],[50],[75],[52],[73],[[[59,[57,58]]]],[61],[62],[63],[[[64,[57,57]]]],[65],[66],[[[67,[57,58]]]],[68],[69],[[[70,[57,57]]]],[[[71,[57,58]]]],[49],[51],[60],[74],[[[72,[57,58]]]],[50],[75],[52],[73],[65,[[84,[50,83]]]],[51,86],[73,[[22,[9]]]],[80,14],[[[59,[[0,[85,57]],[0,[85,58]]]],[59,[[0,[85,57]],[0,[85,58]]]]],8],[[61,61],8],[[62,62],8],[[77,77],8],[[63,63],8],[[[64,[[0,[85,57]],[0,[85,57]]]],[64,[[0,[85,57]],[0,[85,57]]]]],8],[[65,65],8],[[66,66],8],[[78,78],8],[[48,48],8],[[79,79],8],[[[67,[[0,[85,57]],[0,[85,58]]]],[67,[[0,[85,57]],[0,[85,58]]]]],8],[[68,68],8],[[69,69],8],[[[70,[[0,[85,57]],[0,[85,57]]]],[70,[[0,[85,57]],[0,[85,57]]]]],8],[[[71,[[0,[85,57]],[0,[85,58]]]],[71,[[0,[85,57]],[0,[85,58]]]]],8],[[49,49],8],[[49,50],8],[[51,51],8],[[60,60],8],[[74,74],8],[[80,80],8],[[[72,[[0,[85,57]],[0,[85,58]]]],[72,[[0,[85,57]],[0,[85,58]]]]],8],[[50,50],8],[[50,49],8],[[75,75],8],[[81,81],8],[[52,52],8],[[73,73],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[[67,[57,58]],87]],[[69,87]],[[69,87]],[[[71,[[0,[57,85]],58]],87]],[[69,[16,[15]]]],[[[59,[57,58]]],[[22,[57]]]],[[[59,[57,88]]],[[22,[57]]]],[69,17],[[89,19],20],[[[59,[[0,[90,57]],58]],19],20],[[61,19],20],[[62,19],20],[[77,19],20],[[63,19],20],[[[64,[[0,[90,57]],[0,[90,57]]]],19],20],[[65,19],20],[[65,19],20],[[66,19],20],[[78,19],20],[[48,19],20],[[79,19],20],[[[67,[[0,[90,57]],58]],19],20],[[68,19],20],[[69,19],20],[[[70,[[0,[90,57]],[0,[90,57]]]],19],20],[[[71,[[0,[90,57]],58]],19],20],[[49,19],20],[[49,19],20],[[51,19],20],[[51,19],20],[[60,19],20],[[74,19],20],[[80,19],20],[[[72,[[0,[90,57]],58]],19],20],[[50,19],20],[[50,19],20],[[75,19],20],[[81,19],20],[[52,19],20],[[52,19],20],[[73,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,77],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[91,[14]]],80],[[]],[[]],[[]],[[]],[[]],[[]],[61,[[84,[68,88]]]],[[[53,[15]]],[[84,[52,83]]]],[63,[[84,[69,88]]]],[[[84,[44,83]]],[[31,[[84,[66,83]],[84,[44,83]]]]]],[[[16,[92]],[27,[[84,[57,88]]]]],[[84,[[64,[57,57]],83]]]],[[[16,[92]],[27,[[84,[57,88]]]]],[[84,[[70,[57,57]],88]]]],[50,[[84,[61,83]]]],[50,[[84,[68,88]]]],[50,[[84,[49,88]]]],[45,[[93,[57]]]],[[[16,[[84,[57,83]]]]],[[84,[[59,[57,83]],83]]]],[[[16,[[84,[57,83]]]]],[[84,[[67,[57,83]],88]]]],[[[16,[[84,[57,83]]]]],[[84,[[71,[57,83]],88]]]],[[[16,[[84,[57,83]]]]],[[84,[[72,[57,83]],83]]]],[9,[[84,[49,88]]]],[9,[[84,[50,83]]]],[50,[[22,[[84,[52,83]]]]]],[[[27,[[84,[57,58]]]]],[[84,[[59,[57,58]],58]]]],[[[27,[[84,[57,58]]]]],[[84,[[67,[57,58]],88]]]],[[[27,[[84,[57,58]]]]],[[84,[[71,[57,58]],88]]]],[[[27,[[84,[57,58]]]]],[[84,[[72,[57,58]],58]]]],[[[59,[57,58]],14],[[22,[57]]]],[[[64,[57,57]],57],[[22,[57]]]],[[[72,[[0,[57,85]],58]],[0,[57,85]]],[[22,[[0,[57,85]]]]]],[73,[[0,[94,95]]]],[[[72,[57,58]]],[[22,[57]]]],[[[59,[57,88]],14],[[22,[57]]]],[[[70,[57,57]],57],[[22,[57]]]],[73,[[22,[96]]]],[73,[[22,[80]]]],[73,[[22,[97]]]],[[[59,[57,83]],14],[[84,[57,83]]]],[73,[[22,[98]]]],[[50,50],8],[[50,50],8],[[[59,[[0,[99,57]],[0,[99,58]]]],21]],[[61,21]],[[62,21]],[[77,21]],[[63,21]],[[[64,[[0,[99,57]],[0,[99,57]]]],21]],[[65,21]],[[66,21]],[[[67,[[0,[99,57]],[0,[99,58]]]],21]],[[68,21]],[[69,21]],[[[70,[[0,[99,57]],[0,[99,57]]]],21]],[[[71,[[0,[99,57]],[0,[99,58]]]],21]],[[49,21]],[[51,21]],[[60,21]],[[74,21]],[[80,21]],[[[72,[[0,[99,57]],[0,[99,58]]]],21]],[[50,21]],[[75,21]],[[81,21]],[[52,21]],[[73,21]],0,0,[[[59,[57,58]],14],57],[[63,[100,[[16,[15]]]]]],[[[64,[57,57]],57],57],[[[67,[57,58]],14],57],[[69,[100,[[16,[15]]]]]],[[[70,[57,57]],57],57],[[[59,[57,88]],14],57],[[[67,[57,88]],14],57],[[69,[100,[[16,[15]]]]]],[[[70,[57,57]],57],57],[62,[[84,[[64,[50,60]],83]]]],[[[67,[57,58]],14,[84,[57,58]]]],[[[70,[57,57]],[84,[57,83]],[84,[57,88]]],[[22,[[84,[57,88]]]]]],[[[71,[[0,[57,85]],58]],[84,[[0,[57,85]],58]]],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[66,83]]],[[84,[44,83]]]],[[]],[[]],[[[59,[57,58]]]],[63],[[[67,[57,58]]]],[69],[69],[[[71,[57,58]]]],[[[72,[57,58]]]],[[[84,[[64,[57,57]],88]]],[[84,[[59,[57,88]],83]]]],[[[84,[[70,[57,57]],88]]],[[84,[[59,[57,88]],83]]]],[[[84,[[59,[57,58]],88]]],[[27,[[84,[57,58]]]]]],[[[84,[[71,[57,58]],88]]],[[27,[[84,[57,58]]]]]],[[[84,[[72,[57,58]],58]]],[[27,[[84,[57,58]]]]]],[[[72,[[0,[57,85]],58]],[72,[[0,[57,85]],58]]],8],[[[59,[57,58]]],8],[63,8],[[[64,[57,57]]],8],[79,8],[80,8],[[[72,[57,58]]],8],[50,8],[60,8],[75,8],[[],8],[[],8],[[[72,[[0,[57,85]],58]],[72,[[0,[57,85]],58]]],8],[[[72,[[0,[57,85]],58]],[72,[[0,[57,85]],58]]],8],[[[59,[57,58]]],[[93,[57]]]],[[[72,[57,58]]],[[93,[57]]]],[[],101],[[],101],[[[64,[57,57]]],[[93,[57]]]],[[[64,[57,57]]],[[93,[57]]]],[[50,50],[[84,[50,83]]]],[[[64,[57,57]]],[[27,[57]]]],[[[64,[57,57]]]],[[[64,[57,57]]],[[84,[[59,[57,83]],83]]]],[[[59,[57,58]]],[[22,[57]]]],[[[59,[57,88]]],[[22,[57]]]],[[[59,[57,58]]],14],[63,14],[[[64,[57,57]]],14],[[[72,[57,58]]],14],[50,14],[61,14],[50,14],0,[65,[[84,[50,83]]]],0,[[],[[84,[62,83]]]],[[],[[84,[75,83]]]],[79,78],[79,78],[79,78],[[],[[84,[88]]]],[[],[[84,[88]]]],[62,[[22,[[84,[50,83]]]]]],[66,[[84,[50,83]]]],[75,[[22,[[84,[50,83]]]]]],[[],[[84,[[59,[57,58]],83]]]],[[],[[84,[61,83]]]],[[],[[84,[63,83]]]],[[],[[84,[[64,[57,57]],83]]]],[[82,50],[[84,[65,83]]]],[[50,[22,[50]],[22,[[64,[45,45]]]]],[[22,[[84,[66,83]]]]]],[[54,54],78],[[54,54],48],[[78,48],79],[[],[[84,[[67,[57,58]],88]]]],[[],[[84,[68,88]]]],[[],[[84,[69,88]]]],[[],[[84,[[70,[57,57]],88]]]],[[],[[84,[[71,[57,58]],88]]]],[[],[[84,[49,88]]]],[[],[[84,[60,88]]]],[[14,14],80],[[],[[84,[[72,[57,58]],83]]]],[[],[[84,[50,83]]]],[[],[[22,[81]]]],[[[0,[94,95]]],[[84,[73,83]]]],[8,[[84,[51,83]]]],[54,[[84,[51,83]]]],[55,[[84,[51,83]]]],[56,[[84,[51,83]]]],[35,[[84,[51,83]]]],[36,[[84,[51,83]]]],[37,[[84,[51,83]]]],[38,[[84,[51,83]]]],[39,[[84,[51,83]]]],[41,[[84,[51,83]]]],[42,[[84,[51,83]]]],[18,[[84,[51,83]]]],[15,[[84,[51,83]]]],[[],81],[14,[[84,[51,83]]]],[[],[[84,[52,83]]]],[[50,[64,[102,45]]],[[84,[61,83]]]],[[[93,[57]]],[[22,[57]]]],[[[101,[[0,[103,104]]]]],22],[[],[[84,[52,83]]]],[[[59,[57,58]],[91,[14]]],[[27,[57]]]],0,0,[[77,77],[[22,[13]]]],[[49,50],[[22,[13]]]],[[49,49],[[22,[13]]]],[[51,51],[[22,[13]]]],[[80,80],[[22,[13]]]],[[50,49],[[22,[13]]]],[[50,50],[[22,[13]]]],[[81,81],[[22,[13]]]],[[[67,[57,58]]],[[22,[[84,[57,58]]]]]],[[],[[84,[74,83]]]],[74,[[84,[50,83]]]],[[[67,[57,58]],[84,[57,58]]]],[[69,15]],[[49,50]],[66,105],[66,[[22,[[84,[50,83]]]]]],[[[67,[57,58]],14],[[84,[57,58]]]],[[[70,[57,57]],57],[[22,[[84,[57,88]]]]]],[[[71,[[0,[57,85]],58]],[0,[57,85]]],8],[[[67,[57,58]],14,[84,[57,58]]],[[84,[57,58]]]],[[68,61]],[[49,50]],[[69,[91,[14]],[16,[15]]]],[[69,[16,[15]]]],[[69,14]],0,0,[[[67,[57,58]],106]],[79,79],[61,[[84,[50,83]]]],[52,[[84,[50,83]]]],[[[72,[57,83]]],[[84,[[59,[57,83]],83]]]],[[[59,[57,83]]]],[61],[[]],[63],[66],[[]],[[]],[[]],[[[67,[57,83]]]],[68],[69],[[[71,[57,83]]]],[49],[51],[[]],[[[72,[57,83]]]],[50],[[]],[52],[73],[[[59,[57,83]]],[[27,[[84,[57,83]]]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[[59,[57,58]]],[[27,[57]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[65,[[22,[[84,[[64,[46,60]],83]]]]]],[66,[[22,[[84,[[64,[45,45]],83]]]]]],[[[64,[57,57]]],[[27,[57]]]],[[[70,[57,57]]],[[27,[57]]]],0,0,[[[16,[15]]],[[84,[63,83]]]],[[[16,[15]]],[[84,[69,88]]]],[14,[[84,[69,88]]]],[14,[[84,[49,88]]]],[[69,[16,[15]]],[[17,[14]]]],[[69,[16,[15]]],17],[[49,9],[[31,[107]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[84,[104,88]]],104],[[[84,[[0,[57,104]],88]]]],[[],16],[[[84,[[0,[57,104]],58]]]],[[[84,[104,58]]],104],[[],16],[[],16],[[[84,[57,83]],76],57],[[[84,[57,88]],76],57],[[[84,[57,58]]]],[[[0,[108,109]]]],[[]],[[[84,[58]]]],[[]],[[]],[[]],[[]],[[]],[[[84,[88]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[57,58]]],[[84,[57,58]]]],[[[84,[57,83]]],[[84,[57,83]]]],[110,110],[88,88],[83,83],[[]],[[]],[[]],[[]],[[[84,[[0,[111,104]],58]],[84,[[0,[111,104]],58]]],13],[[88,88],13],[[83,83],13],[[[84,[[0,[112,104]],88]],14]],[[],[[84,[[0,[113,104]]]]]],[[],[[110,[57]]]],[[],84],[[[84,[104,58]]],104],[[[84,[104,88]]],104],[[[84,[104,58]]]],[[[110,[104]]]],[76],[[[84,[[0,[85,104]],58]],[84,[[0,[85,104]],58]]],8],[[88,88],8],[[83,83],8],[[],8],[[],8],[[],8],[[[84,[[0,[112,104]],88]]],[[17,[[16,[15]]]]]],[[[84,[[0,[21,104]],88]]],18],[[[84,[[0,[114,104]],88]]],17],[[[84,[104,58]],19],20],[[[84,[[0,[90,104]],58]],19],20],[[[84,[[0,[115,104]],58]],19],20],[[[110,[[0,[90,104]]]],19],20],[[[116,[[0,[90,104]]]],19],20],[[76,19],20],[[76,19],20],[[88,19],20],[[83,19],20],[[]],[[[84,[57,88]]],[[84,[57,83]]]],[[[84,[57,83]]],[[110,[57]]]],[[]],[[]],[[]],[[]],[[]],[[[84,[57,83]]],[[84,[57,88]]]],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],8],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],8],[[[84,[[0,[99,104]],58]],21]],[[88,21]],[[83,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[84,[57,88]]],[[84,[57,83]]]],[[[84,[118,58]]],[[84,[58]]]],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],8],[[[84,[[0,[119,104]],88]]],14],[[[110,[57]]],[[22,[[84,[57,83]]]]]],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],8],[[[84,[[0,[85,104]],58]],[84,[[0,[85,104]],58]]],8],[[],[[22,[[84,[[0,[57,104]],58]]]]]],[[[84,[57,83]]],[[110,[57]]]],[[[84,[[0,[120,104]],88]]],22],[[[84,[[0,[121,104]],88]]],22],[[[84,[[0,[120,104]],88]],14],22],[[[84,[[0,[121,104]],88]],14],22],[[[84,[[0,[117,104]],58]],[84,[[0,[117,104]],58]]],[[22,[13]]]],[[88,88],[[22,[13]]]],[[83,83],[[22,[13]]]],[[[23,[[84,[[0,[122,123,104]],88]]]],24],25],[76,104],[76,104],[[[84,[[0,[124,104]],88]],[16,[15]]],[[17,[14]]]],[[[84,[[0,[124,104]],88]],[16,[15]]],17],[[[84,[[0,[112,104]],88]],26],[[17,[14]]]],[[[84,[[0,[124,104]],88]],[27,[15]]],[[17,[14]]]],[[[84,[[0,[124,104]],88]],26],[[17,[14]]]],[[[84,[[0,[112,104]],88]],15,[27,[15]]],[[17,[14]]]],[[[84,[[0,[124,104]],88]],[16,[28]]],[[17,[14]]]],[[],[[22,[[84,[57,58]]]]]],[[],[[22,[[84,[57,58]]]]]],[[[84,[[0,[125,104]],88]],29],[[17,[18]]]],[[[84,[[0,[120,104]],88]]]],[[[84,[[0,[30,104]],58]]],[[22,[30]]]],[[[84,[[0,[125,104]],88]]],[[17,[18]]]],[[]],[[]],[[]],[[]],[[],26],[[[110,[57]]],[[31,[[84,[57,83]]]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[[84,[[0,[21,104]],88]],[16,[15]]]],[[[84,[[0,[114,104]],88]],[16,[15]]],[[17,[14]]]],[[[84,[[0,[114,104]],88]],[16,[15]]],17],[[[84,[[0,[114,104]],88]],33],17],[[[84,[[0,[21,104]],88]],34]],[[[84,[[0,[21,104]],88]],35]],[[[84,[[0,[21,104]],88]],36]],[[[84,[[0,[21,104]],88]],37]],[[[84,[[0,[21,104]],88]],38]],[[[84,[[0,[21,104]],88]],39]],[[[84,[[0,[21,104]],88]],40]],[[[84,[[0,[21,104]],88]],41]],[[[84,[[0,[21,104]],88]],42]],[[[84,[[0,[21,104]],88]],18]],[[[84,[[0,[21,104]],88]],15]],[[[84,[[0,[21,104]],88]],14]],[[[84,[[0,[114,104]],88]],[16,[43]]],[[17,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[47,47],[[]],[[]],[126,14],[127,8],[2,128],[127,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,1],[[],14],[127,127],[2,2],[[]],[[]],[[1,10],8],[[10,10],8],[[],127],[[129,129],8],[[126,126],8],[[1,1],8],[[10,10],8],[[2,2],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[127,19],[[31,[107]]]],[[1,19],20],[[10,19],20],[[45,19],20],[[2,19],20],[[2,19],20],[[]],[8,127],[[]],[[]],[[]],[[]],[[]],[[]],[8,127],[9,[[22,[1]]]],[9,[[22,[10]]]],[[45,9],95],[[45,9],95],[[129,21]],[[126,21]],[[1,21]],[[2,21]],[126,130],[[1,2],[[22,[126]]]],[1,14],[[1,9],[[22,[129]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[127,8],[127,8],[[45,9],95],[[45,9],95],[[45,9]],[1,1],[129,9],[126,2],[1,9],[10,9],[2,9],[8,127],[129,39],[9,2],[[1,2],8],[[45,9,95]],[1,[[22,[1]]]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[129,9],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32]],"c":[23,1389,1395,1400,1466,1467],"p":[[3,"Class",1389],[3,"Sel",1389],[8,"MessageArguments",0],[8,"EncodeConvert",1524],[3,"ClassBuilder",33],[8,"MethodImplementation",33],[3,"ProtocolBuilder",33],[15,"bool"],[15,"str"],[3,"Protocol",1389],[8,"IvarType",33],[3,"Ivar",33],[4,"Ordering",1525],[15,"usize"],[15,"u8"],[15,"slice"],[6,"Result",1526],[15,"u64"],[3,"Formatter",1527],[6,"Result",1527],[8,"Hasher",1528],[4,"Option",1529],[3,"Pin",1530],[3,"Context",1531],[4,"Poll",1532],[3,"String",1533],[3,"Vec",1534],[3,"IoSliceMut",1535],[4,"SeekFrom",1535],[8,"Error",1536],[4,"Result",1537],[3,"TypeId",1538],[3,"Arguments",1527],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u32"],[3,"IoSlice",1535],[3,"Exception",151],[3,"Object",1389],[6,"NSErrorUserInfoKey",164],[3,"NonNull",1539],[3,"CGSize",164],[3,"NSMutableString",164],[3,"NSString",164],[3,"NSNumber",164],[3,"NSUUID",164],[15,"array"],[6,"CGFloat",164],[15,"f32"],[15,"f64"],[8,"Message",0],[8,"Ownership",1217],[3,"NSArray",164],[3,"NSObject",164],[3,"NSAttributedString",164],[3,"NSBundle",164],[3,"NSData",164],[3,"NSDictionary",164],[3,"NSError",164],[3,"NSException",164],[3,"NSMutableArray",164],[3,"NSMutableAttributedString",164],[3,"NSMutableData",164],[3,"NSMutableDictionary",164],[3,"NSMutableSet",164],[3,"NSSet",164],[3,"NSValue",164],[3,"NSProcessInfo",164],[3,"NSThread",164],[3,"AutoreleasePool",1217],[4,"NSComparisonResult",164],[3,"CGPoint",164],[3,"CGRect",164],[3,"NSRange",164],[3,"MainThreadMarker",164],[6,"NSInteger",1540],[3,"Shared",1217],[3,"Id",1217],[8,"PartialEq",1525],[4,"Encoding",1541],[8,"IntoIterator",1542],[3,"Owned",1217],[3,"NSZone",164],[8,"Debug",1527],[3,"Range",1543],[8,"NSCopying",164],[3,"NSEnumerator",164],[8,"Copy",1544],[8,"Encode",1524],[6,"NSPoint",164],[6,"NSRect",164],[6,"NSSize",164],[8,"Hash",1528],[8,"SliceIndex",1545],[3,"NSFastEnumerator",164],[6,"NSAttributedStringKey",164],[8,"NSFastEnumeration",164],[8,"Sized",1544],[15,"never"],[8,"FnMut",1546],[3,"Error",1527],[8,"FnOnce",1546],[8,"AutoreleaseSafe",1217],[3,"WeakId",1217],[8,"Ord",1525],[8,"BufRead",1535],[8,"DefaultId",1217],[8,"Write",1535],[8,"Display",1527],[3,"Allocated",1217],[8,"PartialOrd",1525],[8,"ClassType",0],[8,"ExactSizeIterator",1547],[8,"Iterator",1548],[8,"DoubleEndedIterator",1549],[8,"Future",1550],[8,"Unpin",1544],[8,"Read",1535],[8,"Seek",1535],[3,"Method",1389],[3,"Bool",1389],[3,"objc_selector",1551],[3,"Ivar",1389],[6,"Imp",1389],[8,"MessageReceiver",0],[8,"InnerIvarType",33],[3,"IvarDrop",33],[8,"NSMutableCopying",164],[8,"SliceId",1217],[8,"SliceIdMut",1217]],"a":{"@autoreleasepool":[1240],"@implementation":[15],"@interface":[15,18],"addobject:":[915,1062],"allobjects":[1082],"anyobject":[866],"appendbytes:length:":[772],"appendstring:":[1064],"cgpointmake":[1013],"cgpointzero":[216],"cgrectgetmaxx":[999],"cgrectgetmaxy":[999],"cgrectgetmidx":[1000],"cgrectgetmidy":[1000],"cgrectgetminx":[1001],"cgrectgetminy":[1001],"cgrectisempty":[965],"cgrectmake":[1015],"cgrectstandardize":[1079],"cgrectzero":[218],"cgsizemake":[1014],"cgsizezero":[217],"class_respondstoselector":[1497],"compare:":[1054],"containsobject:":[647],"count":[987,989,990],"debugdescription":[798],"description":[798],"firstobject":[773,774],"getobjects:andkeys:":[982,983,1202,1203],"hasprefix":[874],"hasprefix:":[874],"hassuffix":[875],"hassuffix:":[875],"id":[1397],"initwithattributedstring:":[841],"initwithbytes":[856],"initwithbytes:length:encoding:":[855,856],"initwithcapacity:":[1208,1209],"initwithdata:":[843],"initwithstring:":[847,848,849,1044],"insertobject:atindex:":[913],"isequal:":[736],"isequaltonumber:":[735],"isequaltovalue:":[745],"iskindofclass:":[969],"issubsetofset:":[973],"keyenumerator":[979],"lastobject":[985,986],"length":[988,992,993],"lengthofbytesusingencoding":[991],"lengthofbytesusingencoding:":[991],"member:":[864],"mutablebytes":[602],"nslocationinrange":[646],"nsmakepoint":[1013],"nsmakerange":[1023],"nsmakerect":[1015],"nsmakesize":[1014],"nsmaxrange":[716],"nsmaxx":[999],"nsmaxy":[999],"nsmidx":[1000],"nsmidy":[1000],"nsminx":[1001],"nsminy":[1001],"nszeropoint":[216],"nszerorect":[218],"nszerosize":[217],"objc_autorelease":[1237,1238],"objc_autoreleasepoolpop":[1275],"objc_autoreleasereturnvalue":[1239],"objc_copyweak":[1257],"objc_destroyweak":[1274],"objc_initweak":[1324],"objc_loadweak":[1320],"objc_loadweakretained":[1320],"objc_release":[1273],"objc_retain":[1256,1342],"objc_retainautoreleasedreturnvalue":[1343],"objectatindex:":[862,867,872],"objectenumerator":[975,976,980],"objectforkey:":[863,868],"origin":[216],"release":[1273],"removeallobjects":[624,625,626],"removelastobject":[1059],"removeobject:":[1069],"removeobjectatindex:":[1067],"removeobjectforkey:":[1068],"replacebytesinrange:withbytes:length:":[1073],"replaceobjectatindex:withobject:":[1070],"retain":[1256,1320],"sel":[1399],"sel_getname":[1493],"sel_registername":[1496],"setattributedstring:":[1071],"setlength:":[1075],"setobject:forkey:":[914],"setstring:":[1072],"sortusingfunction:context:":[1078],"stringbyappendingpathcomponent":[981],"stringbyappendingpathcomponent:":[981],"stringbyappendingstring":[645],"stringbyappendingstring:":[645],"utf8string":[397]}},\
"objc2_encode":{"doc":"Objective-C type-encoding","t":"NNNNNSSNNNNSSSIIIENNNNNNNNNINNNNNNNNNNNNLLLLLLLLLLLLLLLLLLL","n":["Array","Atomic","BitField","Block","Bool","C_LONG","C_ULONG","Char","Class","Double","DoubleComplex","ENCODING","ENCODINGS","ENCODING_REF","Encode","EncodeArguments","EncodeConvert","Encoding","Float","FloatComplex","Int","Long","LongDouble","LongDoubleComplex","LongLong","Object","Pointer","RefEncode","Sel","Short","String","Struct","UChar","UInt","ULong","ULongLong","UShort","Union","Unknown","Void","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent_to","equivalent_to_start_of_str","equivalent_to_str","fmt","fmt","from","hash","into","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"objc2_encode"],[59,"core::option"],[60,"core::fmt"],[61,"core::fmt"],[62,"alloc::string"],[63,"core::result"],[64,"core::any"]],"d":["An array with the given length and type.","A C11 <code>_Atomic</code> type.","A bitfield with the given number of bits, and the given …","An Objective-C block. Corresponds to the <code>@?</code> code.","A C++ <code>bool</code> / C99 <code>_Bool</code>. Corresponds to the <code>B</code> code.","The encoding of <code>c_long</code>.","The encoding of <code>c_ulong</code>.","A C <code>char</code>. Corresponds to the <code>c</code> code.","An Objective-C class (<code>Class</code>). Corresponds to the <code>#</code> code.","A C <code>double</code>. Corresponds to the <code>d</code> code.","A C <code>_Complex</code> or <code>double _Complex</code>. Corresponds to the <code>jd</code> …","The Objective-C type-encoding for this type.","The encodings for the arguments.","The Objective-C type-encoding for a reference of this type.","Types that have an Objective-C type-encoding.","Types that represent an ordered group of function …","Represents types that can easily be converted to/from an …","An Objective-C type-encoding.","A C <code>float</code>. Corresponds to the <code>f</code> code.","A C <code>float _Complex</code>. Corresponds to the <code>jf</code> code.","A C <code>int</code>. Corresponds to the <code>i</code> code.","A C <code>long</code>. Corresponds to the <code>l</code> code.","A C <code>long double</code>. Corresponds to the <code>D</code> code.","A C <code>long double _Complex</code>. Corresponds to the <code>jD</code> code.","A C <code>long long</code>. Corresponds to the <code>q</code> code.","An Objective-C object (<code>id</code>). Corresponds to the <code>@</code> code.","A pointer to the given type.","Types whoose references has an Objective-C type-encoding.","An Objective-C selector (<code>SEL</code>). Corresponds to the <code>:</code> code.","A C <code>short</code>. Corresponds to the <code>s</code> code.","A C <code>char *</code>. Corresponds to the <code>*</code> code.","A struct with the given name and fields.","A C <code>unsigned char</code>. Corresponds to the <code>C</code> code.","A C <code>unsigned int</code>. Corresponds to the <code>I</code> code.","A C <code>unsigned long</code>. Corresponds to the <code>L</code> code.","A C <code>unsigned long long</code>. Corresponds to the <code>Q</code> code.","A C <code>unsigned short</code>. Corresponds to the <code>S</code> code.","A union with the given name and fields.","An unknown type. Corresponds to the <code>?</code> code.","A C <code>void</code>. Corresponds to the <code>v</code> code.","","","","","","","Check if one encoding is equivalent to another.","Check if an encoding is equivalent to the start of the …","Check if an encoding is equivalent to the given string …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,11,12,13,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[1,1],2],[[1,3],[[4,[3]]]],[[1,3],2],[[1,5],6],[[1,5],6],[[]],[[1,7]],[[]],[[]],[[],8],[[],9],[[],9],[[],10]],"c":[],"p":[[4,"Encoding",0],[15,"bool"],[15,"str"],[4,"Option",59],[3,"Formatter",60],[6,"Result",60],[8,"Hasher",61],[3,"String",62],[4,"Result",63],[3,"TypeId",64],[8,"Encode",0],[8,"EncodeArguments",0],[8,"RefEncode",0]]},\
"objc_sys":{"doc":"Raw bindings to Objective-C runtimes","t":"GGRGRRGRRNRRRRRRRRRGNRFFLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLGFFFLLLLLLLLLLFFFFFFFFFFFFFFFFMMRGFFFFFFFFDFFFFFFFFFFFFGGGFFFFFFFFFFFFDFFFDDFFFFFFFFFFFDDDDFFFFFFFFFFDFFFFFFFFDFFGFFFFFFFFFFFFFFFFFFFFFFFFFMFFFFFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["BOOL","IMP","NO","NSInteger","NSIntegerMax","NSIntegerMin","NSUInteger","NSUIntegerMax","Nil","None","OBJC_ASSOCIATION_ASSIGN","OBJC_ASSOCIATION_COPY","OBJC_ASSOCIATION_COPY_NONATOMIC","OBJC_ASSOCIATION_RETAIN","OBJC_ASSOCIATION_RETAIN_NONATOMIC","OBJC_SYNC_NOT_INITIALIZED","OBJC_SYNC_NOT_OWNING_THREAD_ERROR","OBJC_SYNC_SUCCESS","OBJC_SYNC_TIMED_OUT","SEL","Some","YES","_objc_msgForward","_objc_msgForward_stret","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class_addIvar","class_addMethod","class_addProperty","class_addProtocol","class_conformsToProtocol","class_copyIvarList","class_copyMethodList","class_copyPropertyList","class_copyProtocolList","class_createInstance","class_getClassMethod","class_getClassVariable","class_getImageName","class_getInstanceMethod","class_getInstanceSize","class_getInstanceVariable","class_getIvarLayout","class_getMethodImplementation","class_getMethodImplementation_stret","class_getName","class_getProperty","class_getSuperclass","class_getVersion","class_getWeakIvarLayout","class_isMetaClass","class_replaceMethod","class_replaceProperty","class_respondsToSelector","class_setIvarLayout","class_setVersion","class_setWeakIvarLayout","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","id","imp_getBlock","imp_implementationWithBlock","imp_removeBlock","into","into","into","into","into","into","into","into","into","into","ivar_getName","ivar_getOffset","ivar_getTypeEncoding","method_copyArgumentType","method_copyReturnType","method_exchangeImplementations","method_getArgumentType","method_getDescription","method_getImplementation","method_getName","method_getNumberOfArguments","method_getReturnType","method_getTypeEncoding","method_invoke","method_invoke_stret","method_setImplementation","name","name","nil","objc_AssociationPolicy","objc_addExceptionHandler","objc_allocateClassPair","objc_allocateProtocol","objc_autorelease","objc_autoreleasePoolPop","objc_autoreleasePoolPush","objc_autoreleaseReturnValue","objc_begin_catch","objc_class","objc_constructInstance","objc_copyClassList","objc_copyClassNamesForImage","objc_copyImageNames","objc_copyProtocolList","objc_copyWeak","objc_destroyWeak","objc_destructInstance","objc_disposeClassPair","objc_duplicateClass","objc_end_catch","objc_enumerationMutation","objc_exception_handler","objc_exception_matcher","objc_exception_preprocessor","objc_exception_rethrow","objc_exception_throw","objc_exception_try_enter","objc_exception_try_exit","objc_getAssociatedObject","objc_getClass","objc_getClassList","objc_getFutureClass","objc_getMetaClass","objc_getProtocol","objc_getRequiredClass","objc_initWeak","objc_ivar","objc_loadWeak","objc_loadWeakRetained","objc_lookUpClass","objc_method","objc_method_description","objc_moveWeak","objc_msgSend","objc_msgSendSuper","objc_msgSendSuper_stret","objc_msgSend_fp2ret","objc_msgSend_fpret","objc_msgSend_stret","objc_msg_lookup","objc_msg_lookup_stret","objc_msg_lookup_super","objc_msg_lookup_super_stret","objc_object","objc_property","objc_property_attribute_t","objc_protocol","objc_registerClassPair","objc_registerProtocol","objc_release","objc_removeAssociatedObjects","objc_removeExceptionHandler","objc_retain","objc_retainAutorelease","objc_retainAutoreleaseReturnValue","objc_retainAutoreleasedReturnValue","objc_retainBlock","objc_selector","objc_setAssociatedObject","objc_setEnumerationMutationHandler","objc_setExceptionMatcher","objc_setExceptionPreprocessor","objc_setForwardHandler","objc_setUncaughtExceptionHandler","objc_storeStrong","objc_storeWeak","objc_super","objc_sync_enter","objc_sync_exit","objc_uncaught_exception_handler","object_copy","object_dispose","object_getClass","object_getClassName","object_getIndexedIvars","object_getInstanceVariable","object_getIvar","object_setClass","object_setInstanceVariable","object_setIvar","property_copyAttributeList","property_copyAttributeValue","property_getAttributes","property_getName","protocol_addMethodDescription","protocol_addProperty","protocol_addProtocol","protocol_conformsToProtocol","protocol_copyMethodDescriptionList","protocol_copyPropertyList","protocol_copyProtocolList","protocol_getMethodDescription","protocol_getName","protocol_getProperty","protocol_isEqual","receiver","sel_getName","sel_getUid","sel_isEqual","sel_isMapped","sel_registerName","super_class","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","value"],"q":[[0,"objc_sys"],[275,"core::fmt"],[276,"core::fmt"],[277,"core::any"]],"d":["The Objective-C <code>BOOL</code> type.","A nullable pointer to the start of a method implementation.","The equivalent of <code>false</code> for Objective-C’s <code>BOOL</code> type.","A signed integer value type.","The maximum value for an NSInteger.","The minimum value for an NSInteger.","Describes an unsigned integer.","The maximum value for an NSUInteger.","A quick alias for a <code>null_mut</code> class.","No value.","","","","","","Only relevant before macOS 10.13","","","Only relevant before macOS 10.13","An immutable pointer to a selector.","Some value of type <code>T</code>.","The equivalent of <code>true</code> for Objective-C’s <code>BOOL</code> type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A mutable pointer to an object / instance.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The name of the method.","The name of the attribute.","A quick alias for a <code>null_mut</code> object / instance.","","","","","","","","","","An opaque type that represents an Objective-C class.","","","","","","","","","","","","","Remember that this is non-null!","Remember that this is non-null!","Remember that this is non-null!","","See <code>objc-exception.h</code>.","","","","","","","","","","","An opaque type that represents an instance variable.","","","","A type that represents a method in a class definition.","Describes an Objective-C method.","","","","","","","","","","","","An opaque type that represents an object / an instance of …","An opaque type that describes a property in a class.","Describes an Objective-C property attribute.","Opaque type for Objective-C protocols.","","","","","","","","","","","An opaque type that represents a method selector.","","","","","","","","","Specifies data used when sending messages to superclasses.","","","Remember that this is non-null!","","","","","","","","","","","","","","","","","","","","","","","","","","The object / instance to send a message to.","","","","","","The particular superclass of the instance to message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The types of the method arguments.","The value of the attribute"],"i":[0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,8,0,0,0,9,10,11,12,13,14,15,1,2,3,9,10,11,12,13,14,15,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,9,10,11,12,13,14,15,1,2,3,0,0,0,0,9,10,11,12,13,14,15,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,2,3,9,10,11,12,13,14,15,1,2,3,9,10,11,12,13,14,15,1,2,3,9,10,11,12,13,14,15,1,2,3,2,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[[]],[[]],[[]],[[1,4],5],[[2,4],5],[[3,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0],"c":[137,144,159,208,209,213,216],"p":[[3,"objc_super",0],[3,"objc_method_description",0],[3,"objc_property_attribute_t",0],[3,"Formatter",275],[6,"Result",275],[4,"Result",276],[3,"TypeId",277],[6,"IMP",0],[3,"objc_class",0],[3,"objc_method",0],[3,"objc_object",0],[3,"objc_property",0],[3,"objc_protocol",0],[3,"objc_selector",0],[3,"objc_ivar",0]]},\
"once_cell":{"doc":"Overview","t":"AAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","wait","with_value","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"once_cell"],[3,"once_cell::race"],[64,"once_cell::sync"],[112,"once_cell::unsync"],[158,"core::fmt"],[159,"core::fmt"],[160,"core::num::nonzero"],[161,"core::ops::function"],[162,"core::result"],[163,"alloc::boxed"],[164,"core::any"],[165,"core::clone"],[166,"core::default"],[167,"core::cmp"],[168,"core::fmt"]],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,15,17,15,17,15,15,15,15,17,17,17,15,15,15,17,17,17,15,15,15,17,15,17,15,17,15,15,15,15,17,15,17,15,17,15,15,15,15,17,15,15,17,15,17,15,15,0,0,21,22,21,22,21,21,21,21,22,22,22,21,21,21,22,22,22,21,21,21,22,21,22,21,22,21,21,21,22,21,22,21,22,21,21,21,21,22,21,21,22,21,22,21],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[2],[[1,5],6],[[2,5],6],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[1,7],[2,7],[3,[[7,[8]]]],[4,[[7,[9]]]],[[1,10]],[[2,10]],[[3,10],8],[[4,10],9],[[1,10],11],[[2,10],11],[[3,10],[[11,[8]]]],[[4,10],[[11,[9]]]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[1,11],[[2,12],[[11,[12]]]],[[3,8],11],[[4,9],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[14]]]],[[[15,[14]],[15,[14]]]],[[]],[[],15],[[],[[17,[16]]]],[[[17,[10]]]],[[[17,[10]]]],[[[15,[18]],[15,[18]]],9],[[],9],[[[15,[19]],5],6],[[[17,[19]],5],6],[[[17,[10]]]],[[[17,[10]]]],[[]],[20],[[],15],[[]],[15,7],[[[17,[10]]],7],[15,7],[[[17,[10]]],7],[[15,10]],[[15,10],11],[15],[[]],[[]],[15,7],[17,11],[[],15],[[],17],[15,11],[15,7],[[]],[[],11],[[],11],[15,11],[[],11],[[],11],[[],13],[[],13],[15],[[],15],0,0,[[]],[[]],[[]],[[]],[[[21,[14]]],[[21,[14]]]],[[[21,[14]],[21,[14]]]],[[]],[[],21],[[],[[22,[16]]]],[[[22,[10]]]],[[[22,[10]]]],[[[21,[18]],[21,[18]]],9],[[],9],[[[21,[19]],5],6],[[[22,[19]],5],6],[[[22,[10]]]],[[[22,[10]]]],[[]],[20],[[],21],[[]],[21,7],[[[22,[10]]],7],[21,7],[[[22,[10]]],7],[[21,10]],[[21,10],11],[[]],[[]],[21,7],[22,11],[[],21],[[],22],[21,11],[21,7],[[]],[[],11],[[],11],[21,11],[[],11],[[],11],[[],13],[[],13],[[],21]],"c":[],"p":[[3,"OnceRef",3],[3,"OnceBox",3],[3,"OnceNonZeroUsize",3],[3,"OnceBool",3],[3,"Formatter",158],[6,"Result",158],[4,"Option",159],[3,"NonZeroUsize",160],[15,"bool"],[8,"FnOnce",161],[4,"Result",162],[3,"Box",163],[3,"TypeId",164],[8,"Clone",165],[3,"OnceCell",64],[8,"Default",166],[3,"Lazy",64],[8,"PartialEq",167],[8,"Debug",158],[15,"never"],[3,"OnceCell",112],[3,"Lazy",112]]},\
"raw_window_handle":{"doc":"Interoperability library for Rust Windowing applications.","t":"DDNDNDNNDDDNNDDNNDDNNDDEIIIINNNDDEENNDDNNDDNNDDNDNDDNDNNDDNNDDMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKLKLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMKL","n":["Active","ActiveHandle","Android","AndroidDisplayHandle","AndroidNdk","AndroidNdkWindowHandle","AppKit","AppKit","AppKitDisplayHandle","AppKitWindowHandle","DisplayHandle","Drm","Drm","DrmDisplayHandle","DrmWindowHandle","Gbm","Gbm","GbmDisplayHandle","GbmWindowHandle","Haiku","Haiku","HaikuDisplayHandle","HaikuWindowHandle","HandleError","HasDisplayHandle","HasRawDisplayHandle","HasRawWindowHandle","HasWindowHandle","Inactive","Orbital","Orbital","OrbitalDisplayHandle","OrbitalWindowHandle","RawDisplayHandle","RawWindowHandle","UiKit","UiKit","UiKitDisplayHandle","UiKitWindowHandle","Wayland","Wayland","WaylandDisplayHandle","WaylandWindowHandle","Web","Web","WebDisplayHandle","WebWindowHandle","Win32","Win32WindowHandle","WinRt","WinRtWindowHandle","WindowHandle","Windows","WindowsDisplayHandle","Xcb","Xcb","XcbDisplayHandle","XcbWindowHandle","Xlib","Xlib","XlibDisplayHandle","XlibWindowHandle","a_native_window","b_direct_window","b_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_raw","borrow_raw","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","connection","core_window","display","display","display_handle","display_handle","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gbm_device","gbm_surface","handle","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hinstance","hwnd","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new_unchecked","ns_view","ns_window","plane","raw_display_handle","raw_display_handle","raw_window_handle","raw_window_handle","screen","screen","set_active","set_inactive","surface","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_view","ui_view_controller","ui_window","visual_id","visual_id","window","window","window","window_handle","window_handle"],"q":[[0,"raw_window_handle"],[500,"core::result"],[501,"core::fmt"],[502,"core::fmt"],[503,"core::hash"],[504,"core::any"]],"d":["Keeps track of whether the application is currently active.","Represents a live window handle.","A raw display handle for Android NDK.","Raw display handle for Android.","A raw window handle for Android NDK.","Raw window handle for Android NDK.","A raw window handle for AppKit.","A raw display handle for AppKit.","Raw display handle for AppKit.","Raw window handle for AppKit.","The handle to the display controller of the windowing …","A raw window handle for the Linux Kernel Mode Set/Direct …","A raw display handle for the Linux Kernel Mode Set/Direct …","Raw display handle for the Linux Kernel Mode Set/Direct …","Raw window handle for the Linux Kernel Mode Set/Direct …","A raw window handle for the Linux Generic Buffer Manager.","A raw display handle for the Linux Generic Buffer Manager.","Raw display handle for the Linux Generic Buffer Manager.","Raw window handle for the Linux Generic Buffer Manager.","A raw window handle for Haiku.","A raw display handle for Haiku.","Raw display handle for Haiku.","Raw window handle for Haiku.","The error type returned when a handle cannot be obtained.","A display that acts as a wrapper around a display handle.","Display that wraps around a raw display handle.","Window that wraps around a raw window handle.","A handle to a window.","The handle is not currently active.","A raw window handle for the Redox operating system.","A raw display handle for the Redox operating system.","Raw display handle for the Redox operating system.","Raw window handle for the Redox operating system.","A display server handle for a particular windowing system.","A window handle for a particular windowing system.","A raw window handle for UIKit (Apple’s non-macOS …","A raw display handle for UIKit (Apple’s non-macOS …","Raw display handle for UIKit.","Raw window handle for UIKit.","A raw window handle for Wayland.","A raw display handle for Wayland.","Raw display handle for Wayland.","Raw window handle for Wayland.","A raw window handle for the Web.","A raw display handle for the Web.","Raw display handle for the Web.","Raw window handle for the Web.","A raw window handle for Win32.","Raw window handle for Win32.","A raw window handle for WinRT.","Raw window handle for WinRT.","The handle to a window.","A raw display handle for Win32.","Raw display handle for Windows.","A raw window handle for Xcb.","A raw display handle for Xcb.","Raw display handle for Xcb.","Raw window handle for Xcb.","A raw window handle for Xlib.","A raw display handle for Xlib.","Raw display handle for Xlib.","Raw window handle for Xlib.","A pointer to an <code>ANativeWindow</code>.","A pointer to a BDirectWindow object that might be null","A pointer to a BWindow object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.","Borrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an X server <code>xcb_connection_t</code>.","A WinRT <code>CoreWindow</code> handle.","A pointer to an Xlib <code>Display</code>.","A pointer to a <code>wl_display</code>.","Get a handle to the display controller of the windowing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The drm file descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","The gbm device.","The gbm surface.","Get a live window handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>HINSTANCE</code> associated with this type’s <code>HWND</code>.","A Win32 <code>HWND</code> handle.","An ID value inserted into the data attributes of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Active</code> tracker.","Create a new <code>ActiveHandle</code>.","Create a new freestanding active handle.","A pointer to an <code>NSView</code> object.","A pointer to an <code>NSWindow</code> object.","The primary drm plane handle.","","","","","An X11 screen to use with this display handle.","An X11 screen to use with this display handle.","Set the application to be active.","Set the application to be inactive.","A pointer to a <code>wl_surface</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an <code>UIView</code> object.","A pointer to an <code>UIViewController</code> object.","A pointer to an <code>UIWindow</code> object.","An Xlib visual ID, or 0 if unknown.","An X11 <code>xcb_visualid_t</code>, or 0 if unknown.","A pointer to an orbclient window.","An Xlib <code>Window</code>.","An X11 <code>xcb_window_t</code>.","Get a handle to the window.",""],"i":[0,0,1,0,3,0,3,1,0,0,0,3,1,0,0,3,1,0,0,3,1,0,0,0,0,0,0,0,31,3,1,0,0,0,0,3,1,0,0,3,1,0,0,3,1,0,0,3,0,3,0,0,1,0,3,1,0,0,3,1,0,0,7,11,11,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,2,5,6,7,8,9,4,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,18,30,16,20,40,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,6,7,8,9,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,22,34,6,7,8,9,4,2,5,31,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,24,25,34,6,7,8,9,2,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,29,29,27,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,4,4,9,9,23,41,2,42,5,16,18,34,34,21,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,34,6,7,8,9,4,2,5,31,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,3,1,15,15,15,17,19,13,17,19,43,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[[3,4],5],[6,6],[7,7],[8,8],[9,9],[4,4],[2,2],[5,5],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[3,3],[1,1],0,0,0,0,[[],[[32,[2,31]]]],[2,[[32,[2,31]]]],[[],6],[[],7],[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[[],19],[[],20],[[],21],[[],22],[[],23],[[],24],[[],25],[[],26],[[],27],[[],28],[[],29],[[],30],[[6,6],33],[[7,7],33],[[8,8],33],[[9,9],33],[[2,2],33],[[5,5],33],[[10,10],33],[[11,11],33],[[12,12],33],[[13,13],33],[[14,14],33],[[15,15],33],[[16,16],33],[[17,17],33],[[18,18],33],[[19,19],33],[[20,20],33],[[21,21],33],[[22,22],33],[[23,23],33],[[24,24],33],[[25,25],33],[[26,26],33],[[27,27],33],[[28,28],33],[[29,29],33],[[30,30],33],[[3,3],33],[[1,1],33],0,[[34,35],36],[[6,35],36],[[7,35],36],[[8,35],36],[[9,35],36],[[4,35],36],[[2,35],36],[[5,35],36],[[31,35],36],[[31,35],36],[[10,35],36],[[11,35],36],[[12,35],36],[[13,35],36],[[14,35],36],[[15,35],36],[[16,35],36],[[17,35],36],[[18,35],36],[[19,35],36],[[20,35],36],[[21,35],36],[[22,35],36],[[23,35],36],[[24,35],36],[[25,35],36],[[26,35],36],[[27,35],36],[[28,35],36],[[29,35],36],[[30,35],36],[[3,35],36],[[1,35],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,3],[19,3],[7,3],[15,3],[[]],[30,3],[25,3],[23,3],[13,3],[9,3],[27,3],[11,3],[17,3],[29,3],[20,1],[[]],[18,1],[24,1],[10,1],[22,1],[14,1],[8,1],[28,1],[6,1],[26,1],[16,1],[12,1],0,0,[34,[[37,[4]]]],[[6,38]],[[7,38]],[[8,38]],[[9,38]],[[2,38]],[[5,38]],[[10,38]],[[11,38]],[[12,38]],[[13,38]],[[14,38]],[[15,38]],[[16,38]],[[17,38]],[[18,38]],[[19,38]],[[20,38]],[[21,38]],[[22,38]],[[23,38]],[[24,38]],[[25,38]],[[26,38]],[[27,38]],[[28,38]],[[29,38]],[[30,38]],[[3,38]],[[1,38]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],34],[[],4],[[],4],0,0,0,[[],1],[2,1],[[],3],[5,3],0,0,[34],[34],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,0,0,0,0,0,0,0,[[],[[32,[5,31]]]],[5,[[32,[5,31]]]]],"c":[],"p":[[4,"RawDisplayHandle",0],[3,"DisplayHandle",0],[4,"RawWindowHandle",0],[3,"ActiveHandle",0],[3,"WindowHandle",0],[3,"AndroidDisplayHandle",0],[3,"AndroidNdkWindowHandle",0],[3,"AppKitDisplayHandle",0],[3,"AppKitWindowHandle",0],[3,"HaikuDisplayHandle",0],[3,"HaikuWindowHandle",0],[3,"OrbitalDisplayHandle",0],[3,"OrbitalWindowHandle",0],[3,"UiKitDisplayHandle",0],[3,"UiKitWindowHandle",0],[3,"XlibDisplayHandle",0],[3,"XlibWindowHandle",0],[3,"XcbDisplayHandle",0],[3,"XcbWindowHandle",0],[3,"WaylandDisplayHandle",0],[3,"WaylandWindowHandle",0],[3,"DrmDisplayHandle",0],[3,"DrmWindowHandle",0],[3,"GbmDisplayHandle",0],[3,"GbmWindowHandle",0],[3,"WebDisplayHandle",0],[3,"WebWindowHandle",0],[3,"WindowsDisplayHandle",0],[3,"Win32WindowHandle",0],[3,"WinRtWindowHandle",0],[4,"HandleError",0],[4,"Result",500],[15,"bool"],[3,"Active",0],[3,"Formatter",501],[6,"Result",501],[4,"Option",502],[8,"Hasher",503],[3,"TypeId",504],[8,"HasDisplayHandle",0],[8,"HasRawDisplayHandle",0],[8,"HasRawWindowHandle",0],[8,"HasWindowHandle",0]]},\
"skia_bindings":{"doc":"","tn":["A","A1R5G5B5_UNORM_PACK16","A2B","A2B10G10R10_SINT_PACK32","A2B10G10R10_SNORM_PACK32","A2B10G10R10_SSCALED_PACK32","A2B10G10R10_UINT_PACK32","A2B10G10R10_UNORM_PACK32","A2B10G10R10_USCALED_PACK32","A2R10G10B10_SINT_PACK32","A2R10G10B10_SNORM_PACK32","A2R10G10B10_SSCALED_PACK32","A2R10G10B10_UINT_PACK32","A2R10G10B10_UNORM_PACK32","A2R10G10B10_USCALED_PACK32","A4B4G4R4_UNORM_PACK16_EXT","A4R4G4B4_UNORM_PACK16_EXT","A8B8G8R8_SINT_PACK32","A8B8G8R8_SNORM_PACK32","A8B8G8R8_SRGB_PACK32","A8B8G8R8_SSCALED_PACK32","A8B8G8R8_UINT_PACK32","A8B8G8R8_UNORM_PACK32","A8B8G8R8_USCALED_PACK32","ALPHA8","ASTC","ASTC_10x10_SFLOAT_BLOCK_EXT","ASTC_10x10_SRGB_BLOCK","ASTC_10x10_UNORM_BLOCK","ASTC_10x5_SFLOAT_BLOCK_EXT","ASTC_10x5_SRGB_BLOCK","ASTC_10x5_UNORM_BLOCK","ASTC_10x6_SFLOAT_BLOCK_EXT","ASTC_10x6_SRGB_BLOCK","ASTC_10x6_UNORM_BLOCK","ASTC_10x8_SFLOAT_BLOCK_EXT","ASTC_10x8_SRGB_BLOCK","ASTC_10x8_UNORM_BLOCK","ASTC_12x10_SFLOAT_BLOCK_EXT","ASTC_12x10_SRGB_BLOCK","ASTC_12x10_UNORM_BLOCK","ASTC_12x12_SFLOAT_BLOCK_EXT","ASTC_12x12_SRGB_BLOCK","ASTC_12x12_UNORM_BLOCK","ASTC_4x4_SFLOAT_BLOCK_EXT","ASTC_4x4_SRGB_BLOCK","ASTC_4x4_UNORM_BLOCK","ASTC_5x4_SFLOAT_BLOCK_EXT","ASTC_5x4_SRGB_BLOCK","ASTC_5x4_UNORM_BLOCK","ASTC_5x5_SFLOAT_BLOCK_EXT","ASTC_5x5_SRGB_BLOCK","ASTC_5x5_UNORM_BLOCK","ASTC_6x5_SFLOAT_BLOCK_EXT","ASTC_6x5_SRGB_BLOCK","ASTC_6x5_UNORM_BLOCK","ASTC_6x6_SFLOAT_BLOCK_EXT","ASTC_6x6_SRGB_BLOCK","ASTC_6x6_UNORM_BLOCK","ASTC_8x5_SFLOAT_BLOCK_EXT","ASTC_8x5_SRGB_BLOCK","ASTC_8x5_UNORM_BLOCK","ASTC_8x6_SFLOAT_BLOCK_EXT","ASTC_8x6_SRGB_BLOCK","ASTC_8x6_UNORM_BLOCK","ASTC_8x8_SFLOAT_BLOCK_EXT","ASTC_8x8_SRGB_BLOCK","ASTC_8x8_UNORM_BLOCK","AVIF","Absolute","Alias","Allocate","Allow","AllowJIT","AntiAlias","Append","AsWinding","Average","B","B","B10G11R11_UFLOAT_PACK32","B10X6G10X6R10X6G10X6_422_UNORM_4PACK16","B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR","B12X4G12X4R12X4G12X4_422_UNORM_4PACK16","B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR","B16G16R16G16_422_UNORM","B16G16R16G16_422_UNORM_KHR","B2A","B4G4R4A4_UNORM_PACK16","B5G5R5A1_UNORM_PACK16","B5G6R5_UNORM_PACK16","B8G8R8A8_SINT","B8G8R8A8_SNORM","B8G8R8A8_SRGB","B8G8R8A8_SSCALED","B8G8R8A8_UINT","B8G8R8A8_UNORM","B8G8R8A8_USCALED","B8G8R8G8_422_UNORM","B8G8R8G8_422_UNORM_KHR","B8G8R8_SINT","B8G8R8_SNORM","B8G8R8_SRGB","B8G8R8_SSCALED","B8G8R8_UINT","B8G8R8_UNORM","B8G8R8_USCALED","BC1_RGB8_UNORM","BC1_RGBA8_UNORM","BC1_RGBA_SRGB_BLOCK","BC1_RGBA_UNORM_BLOCK","BC1_RGB_SRGB_BLOCK","BC1_RGB_UNORM_BLOCK","BC2_SRGB_BLOCK","BC2_UNORM_BLOCK","BC3_SRGB_BLOCK","BC3_UNORM_BLOCK","BC4_SNORM_BLOCK","BC4_UNORM_BLOCK","BC5_SNORM_BLOCK","BC5_UNORM_BLOCK","BC6H_SFLOAT_BLOCK","BC6H_UFLOAT_BLOCK","BC7_SRGB_BLOCK","BC7_UNORM_BLOCK","BGRA8","BMP","BT2020","BT2020_10bit_Full","BT2020_10bit_Limited","BT2020_12bit_Full","BT2020_12bit_Limited","BT2020_8bit_Full","BT2020_8bit_Limited","BackendBinary","BackendSource","Bevel","BlendOnBlack","Blender","Bold","BoldItalic","BottomLeft","BottomLeft","BottomRight","BottomUp","Butt","C","CCW","CICP","COMPRESSED_ETC1_RGB8","COMPRESSED_RGB8_BC1","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_BC1","CW","C_Bindings_Types","C_Core_Types","C_Effects_Types","C_GPU_GL_Types","C_GrBackendDrawableInfo_Construct","C_GrBackendDrawableInfo_Construct2","C_GrBackendDrawableInfo_backend","C_GrBackendDrawableInfo_destruct","C_GrBackendDrawableInfo_isValid","C_GrBackendFormat_Construct","C_GrBackendFormat_ConstructGL","C_GrBackendFormat_Equals","C_GrBackendFormat_destruct","C_GrBackendFormat_makeTexture2D","C_GrBackendRenderTarget_Construct","C_GrBackendRenderTarget_ConstructGL","C_GrBackendRenderTarget_CopyConstruct","C_GrBackendRenderTarget_destruct","C_GrBackendRenderTarget_getBackendFormat","C_GrBackendSurfaceMutableState_Construct","C_GrBackendSurfaceMutableState_destruct","C_GrBackendTexture_Clone","C_GrBackendTexture_delete","C_GrBackendTexture_getBackendFormat","C_GrBackendTexture_new","C_GrBackendTexture_newGL","C_GrContextOptions_Construct","C_GrDirectContext_MakeGL","C_GrDirectContext_compressedBackendFormat","C_GrDirectContext_directContextId","C_GrDirectContext_flushAndSubmit","C_GrDirectContext_flushAndSubmitImage","C_GrDirectContext_flushImage","C_GrDirectContext_flushImageWithInfo","C_GrDirectContext_performDeferredCleanup","C_GrGLExtensions_destruct","C_GrGLExtensions_reset","C_GrGLFormatFromGLEnum","C_GrGLFormatToEnum","C_GrGLFramebufferInfo_Equals","C_GrGLInterface_MakeAssembledInterface","C_GrGLInterface_MakeNativeInterface","C_GrGLInterface_extensions","C_GrGLTextureInfo_Equals","C_GrGLTypes","C_GrRecordingContext_abandoned","C_GrRecordingContext_asDirectContext","C_GrRecordingContext_backend","C_GrRecordingContext_colorTypeSupportedAsSurface","C_GrRecordingContext_compressedBackendFormat","C_GrRecordingContext_defaultBackendFormat","C_GrRecordingContext_maxSurfaceSampleCountForColorType","C_GrYUVABackendTextureInfo_CopyConstruct","C_GrYUVABackendTextureInfo_destruct","C_GrYUVABackendTextureInfo_equals","C_GrYUVABackendTextures_construct","C_GrYUVABackendTextures_destruct","C_GrYUVABackendTextures_textures","C_ImageFilters_DistantLitSpecular","C_MutableTextureState_Construct","C_MutableTextureState_CopyConstruct","C_MutableTextureState_backend","C_MutableTextureState_destruct","C_PathUtils_FillPathWithPaint","C_RustStream_delete","C_RustStream_new","C_RustWStream_construct","C_RustWStream_destruct","C_SVG_Types","C_Sk3DView_delete","C_Sk3DView_new","C_SkAutoCanvasRestore_Construct","C_SkAutoCanvasRestore_destruct","C_SkAutoCanvasRestore_restore","C_SkBitmap_ComputeIsOpaque","C_SkBitmap_Construct","C_SkBitmap_Copy","C_SkBitmap_asImage","C_SkBitmap_destruct","C_SkBitmap_eraseARGB","C_SkBitmap_extractAlpha","C_SkBitmap_getAlphaf","C_SkBitmap_makeShader","C_SkBitmap_pixelRefOrigin","C_SkBitmap_readyToDraw","C_SkBitmap_setPixelRef","C_SkBitmap_tryAllocN32Pixels","C_SkBitmap_tryAllocPixels","C_SkBlender_Deserialize","C_SkBlender_Mode","C_SkBlenders_Arithmetic","C_SkBmpDecoder_Decode","C_SkBmpDecoder_IsBmp","C_SkCanvas_MakeRasterDirect","C_SkCanvas_clipShader","C_SkCanvas_delete","C_SkCanvas_discard","C_SkCanvas_getBaseLayerSize","C_SkCanvas_getDeviceClipBounds","C_SkCanvas_getLocalClipBounds","C_SkCanvas_getLocalToDevice","C_SkCanvas_getTotalMatrix","C_SkCanvas_imageInfo","C_SkCanvas_isClipEmpty","C_SkCanvas_isClipRect","C_SkCanvas_makeSurface","C_SkCanvas_newEmpty","C_SkCanvas_newFromBitmap","C_SkCanvas_newFromBitmapAndProps","C_SkCanvas_newWidthHeightAndProps","C_SkCanvas_recordingContext","C_SkCodec_MakeFromData","C_SkCodec_bounds","C_SkCodec_delete","C_SkCodec_dimensions","C_SkCodec_getEncodedFormat","C_SkCodec_getFrameCount","C_SkCodec_getFrameInfo","C_SkCodec_getImage","C_SkCodec_getInfo","C_SkCodec_getOrigin","C_SkCodec_getRepetitionCount","C_SkCodec_getScaledDimensions","C_SkCodec_getScanlineOrder","C_SkCodec_getValidSubset","C_SkCodec_incrementalDecode","C_SkCodec_nextScanline","C_SkColor4f_FromBytes_RGBA","C_SkColor4f_toBytes_RGBA","C_SkColorFilter_Deserialize","C_SkColorFilter_filterColor4f","C_SkColorFilter_makeComposed","C_SkColorFilters_Blend","C_SkColorFilters_Blend2","C_SkColorFilters_Compose","C_SkColorFilters_HSLAMatrix","C_SkColorFilters_HSLAMatrixOfColorMatrix","C_SkColorFilters_Lerp","C_SkColorFilters_Lighting","C_SkColorFilters_LinearToSRGBGamma","C_SkColorFilters_Matrix","C_SkColorFilters_MatrixRowMajor","C_SkColorFilters_SRGBToLinearGamma","C_SkColorFilters_Table","C_SkColorFilters_TableARGB","C_SkColorInfo_Construct","C_SkColorInfo_Construct2","C_SkColorInfo_Copy","C_SkColorInfo_Equals","C_SkColorInfo_destruct","C_SkColorInfo_makeAlphaType","C_SkColorInfo_makeColorSpace","C_SkColorInfo_makeColorType","C_SkColorMatrix_Construct","C_SkColorMatrix_Construct2","C_SkColorMatrix_getRowMajor","C_SkColorMatrix_setRowMajor","C_SkColorSpace_Deserialize","C_SkColorSpace_MakeSRGB","C_SkColorSpace_MakeSRGBLinear","C_SkColorSpace_Types","C_SkColorSpace_makeColorSpin","C_SkColorSpace_makeLinearGamma","C_SkColorSpace_makeSRGBGamma","C_SkColorSpace_ref","C_SkColorSpace_serialize","C_SkColorSpace_unique","C_SkColorSpace_unref","C_SkContourMeasureIter_destruct","C_SkContourMeasureIter_next","C_SkContourMeasure_isClosed","C_SkContourMeasure_length","C_SkCornerPathEffect_Make","C_SkCubicMap_computeFromT","C_SkCustomTypefaceBuilder_FromData","C_SkCustomTypefaceBuilder_destruct","C_SkCustomTypefaceBuilder_detach","C_SkCustomTypefaceBuilder_setGlyph","C_SkDashPathEffect_Make","C_SkDataTable_MakeCopyArray","C_SkDataTable_MakeCopyArrays","C_SkDataTable_MakeEmpty","C_SkDataTable_count","C_SkData_MakeEmpty","C_SkData_MakeSubset","C_SkData_MakeUninitialized","C_SkData_MakeWithCString","C_SkData_MakeWithCopy","C_SkData_MakeWithoutCopy","C_SkData_MakeZeroInitialized","C_SkData_ref","C_SkData_unique","C_SkData_unref","C_SkDeferredDisplayListRecorder_destruct","C_SkDeferredDisplayListRecorder_detach","C_SkDeferredDisplayList_ref","C_SkDeferredDisplayList_unique","C_SkDeferredDisplayList_unref","C_SkDiscretePathEffect_Make","C_SkDrawable_Deserialize","C_SkDrawable_GpuDrawHandler_delete","C_SkDrawable_GpuDrawHandler_draw","C_SkDrawable_getBounds","C_SkDrawable_makePictureSnapshot","C_SkDrawable_snapGpuDrawHandler","C_SkDynamicMemoryWStream_Construct","C_SkDynamicMemoryWStream_detachAsData","C_SkDynamicMemoryWStream_detachAsStream","C_SkEncodedOriginToMatrix","C_SkFlattenable_getTypeName","C_SkFlattenable_serialize","C_SkFontArguments_construct","C_SkFontArguments_destruct","C_SkFontArguments_getPalette","C_SkFontArguments_getVariationDesignPosition","C_SkFontArguments_setCollectionIndex","C_SkFontArguments_setPalette","C_SkFontArguments_setVariationDesignPosition","C_SkFontMgr_RefDefault","C_SkFontMgr_RefEmpty","C_SkFontMgr_createStyleSet","C_SkFontMgr_makeFromStream","C_SkFontMgr_matchFamily","C_SkFontMgr_matchFamilyStyle","C_SkFontMgr_matchFamilyStyleCharacter","C_SkFontParameters_Variation_Axis_isHidden","C_SkFontParameters_Variation_Axis_setHidden","C_SkFontStyleSet_CreateEmpty","C_SkFontStyleSet_count","C_SkFontStyleSet_createTypeface","C_SkFontStyleSet_getStyle","C_SkFontStyleSet_matchStyle","C_SkFontStyle_Construct","C_SkFontStyle_Construct2","C_SkFontStyle_Equals","C_SkFontStyle_slant","C_SkFontStyle_weight","C_SkFontStyle_width","C_SkFont_ConstructFromTypeface","C_SkFont_ConstructFromTypefaceWithSize","C_SkFont_ConstructFromTypefaceWithSizeScaleAndSkew","C_SkFont_CopyConstruct","C_SkFont_Equals","C_SkFont_destruct","C_SkFont_getEdging","C_SkFont_getHinting","C_SkFont_getIntercepts","C_SkFont_getTypeface","C_SkFont_makeWithSize","C_SkFont_setTypeface","C_SkFrameInfo_Construct","C_SkGifDecoder_Decode","C_SkGifDecoder_IsGif","C_SkGradientShader_MakeLinear","C_SkGradientShader_MakeLinearWithInterpolation","C_SkGradientShader_MakeRadial","C_SkGradientShader_MakeRadialWithInterpolation","C_SkGradientShader_MakeSweep","C_SkGradientShader_MakeSweepWithInterpolation","C_SkGradientShader_MakeTwoPointConical","C_SkGradientShader_MakeTwoPointConicalWithInterpolation","C_SkGradientShader_Types","C_SkHighContrastFilter_Make","C_SkIRect_contains","C_SkIRect_isEmpty","C_SkIcoDecoder_Decode","C_SkIcoDecoder_IsIco","C_SkImageFilter_Deserialize","C_SkImageFilter_computeFastBounds","C_SkImageFilter_countInputs","C_SkImageFilter_filterBounds","C_SkImageFilter_getInput","C_SkImageFilter_isColorFilterNode","C_SkImageFilter_makeWithLocalMatrix","C_SkImageFilters_AlphaThreshold","C_SkImageFilters_Arithmetic","C_SkImageFilters_Blend","C_SkImageFilters_Blur","C_SkImageFilters_ColorFilter","C_SkImageFilters_Compose","C_SkImageFilters_Dilate","C_SkImageFilters_DisplacementMap","C_SkImageFilters_DistantLitDiffuse","C_SkImageFilters_DropShadow","C_SkImageFilters_DropShadowOnly","C_SkImageFilters_Erode","C_SkImageFilters_Image","C_SkImageFilters_Magnifier","C_SkImageFilters_Magnifier2","C_SkImageFilters_MatrixConvolution","C_SkImageFilters_MatrixTransform","C_SkImageFilters_Merge","C_SkImageFilters_Offset","C_SkImageFilters_Picture","C_SkImageFilters_PointLitDiffuse","C_SkImageFilters_PointLitSpecular","C_SkImageFilters_Shader","C_SkImageFilters_SpotLitDiffuse","C_SkImageFilters_SpotLitSpecular","C_SkImageFilters_Tile","C_SkImageGenerator_delete","C_SkImageGenerator_isTextureGenerator","C_SkImageGenerator_isValid","C_SkImageGenerator_refEncodedData","C_SkImageInfo_Construct","C_SkImageInfo_Copy","C_SkImageInfo_Equals","C_SkImageInfo_Make","C_SkImageInfo_MakeA8","C_SkImageInfo_MakeN32","C_SkImageInfo_MakeN32Premul","C_SkImageInfo_MakeS32","C_SkImageInfo_MakeUnknown","C_SkImageInfo_destruct","C_SkImageInfo_makeColorSpace","C_SkImageInfo_reset","C_SkImage_isLazyGenerated","C_SkImage_isTextureBacked","C_SkImage_isValid","C_SkImage_makeColorSpace","C_SkImage_makeNonTextureImage","C_SkImage_makeRasterImage","C_SkImage_makeRawShader","C_SkImage_makeShader","C_SkImage_makeSubset","C_SkImage_makeWithFilter","C_SkImage_refEncodedData","C_SkImage_reinterpretColorSpace","C_SkImage_textureSize","C_SkImage_withDefaultMipmaps","C_SkImages_AdoptTextureFrom","C_SkImages_BorrowTextureFrom","C_SkImages_CrossContextTextureFromPixmap","C_SkImages_DeferredFromEncodedData","C_SkImages_DeferredFromGenerator","C_SkImages_DeferredFromPicture","C_SkImages_GetBackendTextureFromImage","C_SkImages_RasterFromBitmap","C_SkImages_RasterFromCompressedTextureData","C_SkImages_RasterFromData","C_SkImages_SubsetTextureFrom","C_SkImages_TextureFromCompressedTextureData","C_SkImages_TextureFromImage","C_SkImages_TextureFromYUVAPixmaps","C_SkImages_TextureFromYUVATextures","C_SkJpegDecoder_Decode","C_SkJpegDecoder_IsJpeg","C_SkJpegEncoder_Encode","C_SkJpegEncoder_EncodeImage","C_SkLine2DPathEffect_Make","C_SkLumaColorFilter_Make","C_SkM44_LookAt","C_SkM44_Perspective","C_SkM44_RectToRect","C_SkM44_Types","C_SkM44_equals","C_SkM44_map","C_SkM44_transpose","C_SkMakeNullCanvas","C_SkMaskFilter_Deserialize","C_SkMaskFilter_MakeBlur","C_SkMatrixPathEffect_Make","C_SkMatrixPathEffect_MakeTranslate","C_SkMatrix_Equals","C_SkMatrix_InvalidMatrix","C_SkMatrix_SubscriptMut","C_SkMatrix_getType","C_SkMatrix_hasPerspective","C_SkMatrix_invert","C_SkMatrix_isFinite","C_SkMatrix_normalizePerspective","C_SkMatrix_rectStaysRect","C_SkMatrix_setScaleTranslate","C_SkMemoryStream_MakeDirect","C_SkMergePathEffect_Make","C_SkOpBuilder_Construct","C_SkOpBuilder_destruct","C_SkOrderedFontMgr_append","C_SkOrderedFontMgr_new","C_SkOverdrawColorFilter_MakeWithSkColors","C_SkPDF_AttributeList_appendFloatArray","C_SkPDF_AttributeList_destruct","C_SkPDF_MakeDocument","C_SkPDF_Metadata_Construct","C_SkPDF_Metadata_destruct","C_SkPDF_StructElementNode_appendChild","C_SkPDF_StructureElementNode_delete","C_SkPDF_StructureElementNode_getChildVector","C_SkPDF_StructureElementNode_new","C_SkPDF_StructureElementNode_setChildVector","C_SkPaint_Equals","C_SkPaint_asBlendMode","C_SkPaint_copy","C_SkPaint_destruct","C_SkPaint_getAlpha","C_SkPaint_getStrokeCap","C_SkPaint_getStrokeJoin","C_SkPaint_getStyle","C_SkPaint_setBlender","C_SkPaint_setColorFilter","C_SkPaint_setImageFilter","C_SkPaint_setMaskFilter","C_SkPaint_setPathEffect","C_SkPaint_setShader","C_SkParsePath_ToSVGString","C_SkPath1DPathEffect_Make","C_SkPath2DPathEffect_Make","C_SkPathBuilder_Construct","C_SkPathBuilder_Construct3","C_SkPathBuilder_CopyConstruct","C_SkPathBuilder_computeBounds","C_SkPathBuilder_destruct","C_SkPathBuilder_detach","C_SkPathBuilder_snapshot","C_SkPathEffect_DashInfo_Construct","C_SkPathEffect_Deserialize","C_SkPathEffect_MakeCompose","C_SkPathEffect_MakeSum","C_SkPathMeasure_destruct","C_SkPathTypes_Types","C_SkPath_Circle","C_SkPath_Construct","C_SkPath_Equals","C_SkPath_Iter_destruct","C_SkPath_Iter_isCloseLine","C_SkPath_Make","C_SkPath_Oval","C_SkPath_OvalWithStartIndex","C_SkPath_Polygon","C_SkPath_RRect","C_SkPath_RRectWithStartIndex","C_SkPath_RawIter_Construct","C_SkPath_RawIter_destruct","C_SkPath_RawIter_peek","C_SkPath_Rect","C_SkPath_computeTightBounds","C_SkPath_destruct","C_SkPath_getBounds","C_SkPath_getFillType","C_SkPath_getPoint","C_SkPath_serialize","C_SkPerlinNoiseShader_MakeFractalNoise","C_SkPerlinNoiseShader_MakeTurbulence","C_SkPictureRecorder_Construct","C_SkPictureRecorder_destruct","C_SkPictureRecorder_finishRecordingAsDrawable","C_SkPictureRecorder_finishRecordingAsPicture","C_SkPicture_MakeFromData","C_SkPicture_MakeFromData2","C_SkPicture_MakePlaceholder","C_SkPicture_approximateBytesUsed","C_SkPicture_approximateOpCount","C_SkPicture_cullRect","C_SkPicture_makeShader","C_SkPicture_playback","C_SkPicture_serialize","C_SkPicture_uniqueID","C_SkPixelRef_height","C_SkPixelRef_isImmutable","C_SkPixelRef_notifyAddedToCache","C_SkPixelRef_pixels","C_SkPixelRef_rowBytes","C_SkPixelRef_width","C_SkPixmapUtils_Orient","C_SkPixmapUtils_SwapWidthHeight","C_SkPixmap_destruct","C_SkPixmap_setColorSpace","C_SkPngDecoder_Decode","C_SkPngDecoder_IsPng","C_SkPngEncoder_Encode","C_SkPngEncoder_EncodeImage","C_SkPoint_isFinite","C_SkRRect_Construct","C_SkRRect_Equals","C_SkRRect_dumpToString","C_SkRRect_getType","C_SkRRect_setRect","C_SkRect_round","C_SkRect_roundIn","C_SkRect_roundOut","C_SkRefCntBase_ref","C_SkRefCntBase_unique","C_SkRefCntBase_unref","C_SkRegion_Cliperator_destruct","C_SkRegion_Equals","C_SkRegion_Iterator_Construct","C_SkRegion_Iterator_destruct","C_SkRegion_Iterator_rgn","C_SkRegion_Spanerator_destruct","C_SkRegion_destruct","C_SkRegion_quickContains","C_SkRegion_set","C_SkRuntimeEffect_MakeForBlender","C_SkRuntimeEffect_MakeForColorFilter","C_SkRuntimeEffect_MakeForShader","C_SkRuntimeEffect_allowBlender","C_SkRuntimeEffect_allowColorFilter","C_SkRuntimeEffect_allowShader","C_SkRuntimeEffect_children","C_SkRuntimeEffect_findChild","C_SkRuntimeEffect_findUniform","C_SkRuntimeEffect_makeBlender","C_SkRuntimeEffect_makeColorFilter","C_SkRuntimeEffect_makeImage","C_SkRuntimeEffect_makeShader","C_SkRuntimeEffect_source","C_SkRuntimeEffect_uniforms","C_SkSVGCanvas_Make","C_SkShaderMaskFilter_Make","C_SkShader_Deserialize","C_SkShader_isAImage","C_SkShader_isOpaque","C_SkShader_makeWithColorFilter","C_SkShader_makeWithLocalMatrix","C_SkShaders_Blend","C_SkShaders_Color","C_SkShaders_Color2","C_SkShaders_CoordClamp","C_SkShaders_Empty","C_SkSize_toCeil","C_SkSize_toFloor","C_SkSize_toRound","C_SkStreamAsset_getLength","C_SkStream_delete","C_SkStream_read","C_SkString_c_str_size","C_SkString_destruct","C_SkStrings_construct","C_SkStrings_destruct","C_SkStrings_ptr_count","C_SkStrokeAndFillePathEffect_Make","C_SkStrokePathEffect_Make","C_SkStrokeRec_copy","C_SkStrokeRec_destruct","C_SkStrokeRec_getCap","C_SkStrokeRec_getJoin","C_SkStrokeRec_hasEqualEffect","C_SkSurfaceCharacterization_Construct","C_SkSurfaceCharacterization_CopyConstruct","C_SkSurfaceCharacterization_createBackendFormat","C_SkSurfaceCharacterization_createColorSpace","C_SkSurfaceCharacterization_createFBO0","C_SkSurfaceCharacterization_createResized","C_SkSurfaceCharacterization_destruct","C_SkSurfaceCharacterization_equals","C_SkSurfaceCharacterization_imageInfo","C_SkSurfaceProps_Equals","C_SkSurface_draw","C_SkSurface_height","C_SkSurface_imageInfo","C_SkSurface_makeImageSnapshot","C_SkSurface_makeSurface","C_SkSurface_makeSurface2","C_SkSurface_props","C_SkSurface_replaceBackendTexture","C_SkSurface_width","C_SkSurfaces_GetBackendRenderTarget","C_SkSurfaces_GetBackendTexture","C_SkSurfaces_Null","C_SkSurfaces_Raster","C_SkSurfaces_RenderTarget","C_SkSurfaces_RenderTarget2","C_SkSurfaces_WrapBackendRenderTarget","C_SkSurfaces_WrapBackendTexture","C_SkSurfaces_WrapPixels","C_SkTextBlobBuilder_destruct","C_SkTextBlobBuilder_make","C_SkTextBlob_Iter_destruct","C_SkTextBlob_MakeFromPosText","C_SkTextBlob_MakeFromPosTextH","C_SkTextBlob_MakeFromRSXform","C_SkTextBlob_MakeFromText","C_SkTextBlob_ref","C_SkTextBlob_unique","C_SkTextBlob_unref","C_SkTrimPathEffect_Make","C_SkTypeface_LocalizedStrings_next","C_SkTypeface_LocalizedStrings_unref","C_SkTypeface_MakeDefault","C_SkTypeface_MakeDeserialize","C_SkTypeface_MakeFromData","C_SkTypeface_MakeFromName","C_SkTypeface_copyTableData","C_SkTypeface_getBounds","C_SkTypeface_isBold","C_SkTypeface_isItalic","C_SkTypeface_makeClone","C_SkTypeface_openStream","C_SkTypeface_serialize","C_SkVertices_Builder_destruct","C_SkVertices_Builder_detach","C_SkVertices_MakeCopy","C_SkVertices_ref","C_SkVertices_unique","C_SkVertices_unref","C_SkWStream_destruct","C_SkWStream_write","C_SkWbmpDecoder_Decode","C_SkWbmpDecoder_IsWbmp","C_SkYUVAInfo_Construct","C_SkYUVAInfo_NumChannelsInPlane","C_SkYUVAInfo_NumPlanes","C_SkYUVAInfo_PlaneSubsamplingFactors","C_SkYUVAInfo_SubsamplingFactors","C_SkYUVAInfo_destruct","C_SkYUVAInfo_equals","C_SkYUVAInfo_makeDimensions","C_SkYUVAInfo_makeSubsampling","C_SkYUVAPixmapInfo_Construct","C_SkYUVAPixmapInfo_DefaultColorTypeForDataType","C_SkYUVAPixmapInfo_NumChannelsAndDataType","C_SkYUVAPixmapInfo_SupportedDataTypes_All","C_SkYUVAPixmapInfo_SupportedDataTypes_Construct","C_SkYUVAPixmapInfo_SupportedDataTypes_destruct","C_SkYUVAPixmapInfo_SupportedDataTypes_supported","C_SkYUVAPixmapInfo_destruct","C_SkYUVAPixmapInfo_equals","C_SkYUVAPixmapInfo_isValid","C_SkYUVAPixmapInfo_planeInfo","C_SkYUVAPixmapInfo_rowBytes","C_SkYUVAPixmaps_Allocate","C_SkYUVAPixmaps_Construct","C_SkYUVAPixmaps_FromData","C_SkYUVAPixmaps_FromExternalMemory","C_SkYUVAPixmaps_FromExternalPixmaps","C_SkYUVAPixmaps_MakeCopy","C_SkYUVAPixmaps_destruct","C_SkYUVAPixmaps_isValid","C_SkYUVAPixmaps_pixmapsInfo","C_SkYUVAPixmaps_planes","C_Utils_Types","C_string_ptr_size","C_string_view_ptr_size","Center","Center","Centered","Circle","Claimed","Clamp","Clear","Close","Close","CoeffCount","Color","ColorBurn","ColorDodge","ColorFilter","Complex","ComputeTonalColors","Conic","Conic","ConvertConicToQuads","CouldNotRewind","Create","CreateClip","CreateEmpty","CreateEmpty","CreateGamma","CreateTransformedCopy","CubeRoot","Cubic","Cubic","D16_UNORM","D16_UNORM_S8_UINT","D24_UNORM_S8_UINT","D32_SFLOAT","D32_SFLOAT_S8_UINT","DA","DC","DEPTH24_STENCIL8","DNG","Darken","Dawn","Dawn","Decal","Decreasing","Default","Default","Default","Default","Default","Default","Deserialize","Deserialize","Deserialize","Deserialize","Deserialize","Deserialize","Destination","Difference","Difference","Difference","Difference","Difference","Direct3D","Disallow","Discard","DiscardWrite","DiscardWrite_BackendHandleAccess","DoIncludeData","Done","Done","DontIncludeData","Draw","DrawShadow","Dst","DstATop","DstIn","DstOut","DstOver","DumpMemoryStatistics","E5B9G9R9_UFLOAT_PACK32","EAC_R11G11_SNORM_BLOCK","EAC_R11G11_UNORM_BLOCK","EAC_R11_SNORM_BLOCK","EAC_R11_UNORM_BLOCK","ETC1_RGB8","ETC2_R8G8B8A1_SRGB_BLOCK","ETC2_R8G8B8A1_UNORM_BLOCK","ETC2_R8G8B8A8_SRGB_BLOCK","ETC2_R8G8B8A8_UNORM_BLOCK","ETC2_R8G8B8_SRGB_BLOCK","ETC2_R8G8B8_UNORM_BLOCK","ETC2_RGB8_UNORM","Empty","End","Equal","Equals","ErrorInInput","EvenOdd","Exclusion","Extend","F16","FILE","FactoryToName","Fast","Fill","Fill","Fill","Fill","FixedColor","Float","Float16","Float2","Float2x2","Float3","Float3x3","Float4","Float4x4","FlushRead","FlushRead_BackendHandleAccess","FlushWrite","FlushWrite_BackendHandleAccess","Forward","FromData","FromExternalMemory","FromExternalPixmaps","FromSVGString","Full","G","G10X6B10X6G10X6R10X6_422_UNORM_4PACK16","G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR","G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16","G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR","G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16","G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR","G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT","G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16","G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR","G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16","G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR","G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16","G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR","G12X4B12X4G12X4R12X4_422_UNORM_4PACK16","G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR","G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16","G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR","G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16","G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR","G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT","G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16","G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR","G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16","G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR","G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16","G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR","G16B16G16R16_422_UNORM","G16B16G16R16_422_UNORM_KHR","G16_B16R16_2PLANE_420_UNORM","G16_B16R16_2PLANE_420_UNORM_KHR","G16_B16R16_2PLANE_422_UNORM","G16_B16R16_2PLANE_422_UNORM_KHR","G16_B16R16_2PLANE_444_UNORM_EXT","G16_B16_R16_3PLANE_420_UNORM","G16_B16_R16_3PLANE_420_UNORM_KHR","G16_B16_R16_3PLANE_422_UNORM","G16_B16_R16_3PLANE_422_UNORM_KHR","G16_B16_R16_3PLANE_444_UNORM","G16_B16_R16_3PLANE_444_UNORM_KHR","G8B8G8R8_422_UNORM","G8B8G8R8_422_UNORM_KHR","G8_B8R8_2PLANE_420_UNORM","G8_B8R8_2PLANE_420_UNORM_KHR","G8_B8R8_2PLANE_422_UNORM","G8_B8R8_2PLANE_422_UNORM_KHR","G8_B8R8_2PLANE_444_UNORM_EXT","G8_B8_R8_3PLANE_420_UNORM","G8_B8_R8_3PLANE_420_UNORM_KHR","G8_B8_R8_3PLANE_422_UNORM","G8_B8_R8_3PLANE_422_UNORM_KHR","G8_B8_R8_3PLANE_444_UNORM","G8_B8_R8_3PLANE_444_UNORM_KHR","GIF","GL","GLES","GLGetProcFnVoidPtr","GetFontCacheCountLimit","GetFontCacheCountUsed","GetFontCacheLimit","GetFontCacheUsed","GetInflationRadius","GetInflationRadius1","GetLocalBounds","GetOpenTypeSVGDecoderFactory","GetPath","GetResourceCacheSingleAllocationByteLimit","GetResourceCacheTotalByteLimit","GetResourceCacheTotalBytesUsed","GetYUVALocations","GrBackendApi","GrBackendDrawableInfo","GrBackendFormat","GrBackendFormat_GrBackendFormat","GrBackendFormat_MakeMock","GrBackendFormat__bindgen_ty_1","GrBackendFormat__bindgen_ty_1__bindgen_ty_1","GrBackendFormat_asGLFormat","GrBackendFormat_asGLFormatEnum","GrBackendFormat_asMockColorType","GrBackendFormat_asMockCompressionType","GrBackendFormat_channelMask","GrBackendFormat_desc","GrBackendFormat_isMockStencilFormat","GrBackendFormat_makeTexture2D","GrBackendRenderTarget","GrBackendRenderTarget_GrBackendRenderTarget","GrBackendRenderTarget_GrBackendRenderTarget1","GrBackendRenderTarget_GrBackendRenderTarget2","GrBackendRenderTarget_GrBackendRenderTarget3","GrBackendRenderTarget_GrBackendRenderTarget_destructor","GrBackendRenderTarget__bindgen_ty_1","GrBackendRenderTarget_getBackendFormat","GrBackendRenderTarget_getGLFramebufferInfo","GrBackendRenderTarget_getMockRenderTargetInfo","GrBackendRenderTarget_isProtected","GrBackendRenderTarget_setMutableState","GrBackendSemaphore","GrBackendSurfaceMutableState","GrBackendTexture","GrBackendTexture_GrBackendTexture","GrBackendTexture_GrBackendTexture1","GrBackendTexture_GrBackendTexture2","GrBackendTexture_GrBackendTexture3","GrBackendTexture_GrBackendTexture_destructor","GrBackendTexture__bindgen_ty_1","GrBackendTexture_getBackendFormat","GrBackendTexture_getGLTextureInfo","GrBackendTexture_getMockTextureInfo","GrBackendTexture_glTextureParametersModified","GrBackendTexture_isProtected","GrBackendTexture_isSameTexture","GrBackendTexture_setMutableState","GrBaseContextPriv","GrCaps","GrColorFormatDesc","GrColorType","GrColorTypeEncoding","GrContextOptions","GrContextOptions_Enable","GrContextOptions_PersistentCache","GrContextOptions_ShaderCacheStrategy","GrContextOptions_ShaderErrorHandler","GrContextPriv","GrContextThreadSafeProxy","GrContextThreadSafeProxyPriv","GrContextThreadSafeProxy_GrContextThreadSafeProxy_destructor","GrContextThreadSafeProxy_compressedBackendFormat","GrContextThreadSafeProxy_createCharacterization","GrContextThreadSafeProxy_defaultBackendFormat","GrContextThreadSafeProxy_maxSurfaceSampleCountForColorType","GrContextThreadSafeProxy_priv","GrContextThreadSafeProxy_priv1","GrContext_Base","GrContext_Base_INHERITED","GrDirectContext","GrDirectContextDestroyedContext","GrDirectContextDestroyedProc","GrDirectContextPriv","GrDirectContext_DeleteCallbackHelper","GrDirectContext_DirectContextID","GrDirectContext_DirectContextID_Next","GrDirectContext_GrDirectContext","GrDirectContext_GrDirectContext_destructor","GrDirectContext_MakeGL","GrDirectContext_MakeGL1","GrDirectContext_MakeGL2","GrDirectContext_MakeGL3","GrDirectContext_MakeMock","GrDirectContext_MakeMock1","GrDirectContext_abandonContext","GrDirectContext_abandoned","GrDirectContext_checkAsyncWorkCompletion","GrDirectContext_createBackendTexture","GrDirectContext_createBackendTexture1","GrDirectContext_createBackendTexture2","GrDirectContext_createBackendTexture3","GrDirectContext_createBackendTexture4","GrDirectContext_createBackendTexture5","GrDirectContext_createBackendTexture6","GrDirectContext_createBackendTexture7","GrDirectContext_createCompressedBackendTexture","GrDirectContext_createCompressedBackendTexture1","GrDirectContext_createCompressedBackendTexture2","GrDirectContext_createCompressedBackendTexture3","GrDirectContext_deleteBackendTexture","GrDirectContext_dumpMemoryStatistics","GrDirectContext_flush","GrDirectContext_flush1","GrDirectContext_flush2","GrDirectContext_flushAndSubmit","GrDirectContext_freeGpuResources","GrDirectContext_getResourceCacheLimit","GrDirectContext_getResourceCacheLimits","GrDirectContext_getResourceCachePurgeableBytes","GrDirectContext_getResourceCacheUsage","GrDirectContext_init","GrDirectContext_onGetSmallPathAtlasMgr","GrDirectContext_oomed","GrDirectContext_performDeferredCleanup","GrDirectContext_precompileShader","GrDirectContext_purgeUnlockedResources","GrDirectContext_purgeUnlockedResources1","GrDirectContext_releaseResourcesAndAbandonContext","GrDirectContext_resetContext","GrDirectContext_resetGLTextureBindings","GrDirectContext_setBackendRenderTargetState","GrDirectContext_setBackendTextureState","GrDirectContext_setResourceCacheLimit","GrDirectContext_setResourceCacheLimits","GrDirectContext_storeVkPipelineCacheData","GrDirectContext_submit","GrDirectContext_supportsDistanceFieldText","GrDirectContext_threadSafeProxy","GrDirectContext_updateBackendTexture","GrDirectContext_updateBackendTexture1","GrDirectContext_updateBackendTexture2","GrDirectContext_updateBackendTexture3","GrDirectContext_updateCompressedBackendTexture","GrDirectContext_updateCompressedBackendTexture1","GrDirectContext_wait","GrDrawingManager","GrDriverBugWorkarounds","GrDriverBugWorkarounds_GrDriverBugWorkarounds","GrDriverBugWorkarounds_GrDriverBugWorkarounds1","GrDriverBugWorkarounds_GrDriverBugWorkarounds_destructor","GrDriverBugWorkarounds_applyOverrides","GrEGLDisplay","GrEGLQueryStringFn","GrEGLint","GrFlushInfo","GrGLBackendState","GrGLBackendState_kALL_GrGLBackendState","GrGLBackendState_kBlend_GrGLBackendState","GrGLBackendState_kFixedFunction_GrGLBackendState","GrGLBackendState_kMSAAEnable_GrGLBackendState","GrGLBackendState_kMisc_GrGLBackendState","GrGLBackendState_kPixelStore_GrGLBackendState","GrGLBackendState_kProgram_GrGLBackendState","GrGLBackendState_kRenderTarget_GrGLBackendState","GrGLBackendState_kStencil_GrGLBackendState","GrGLBackendState_kTextureBinding_GrGLBackendState","GrGLBackendState_kVertex_GrGLBackendState","GrGLBackendState_kView_GrGLBackendState","GrGLBackendTextureInfo","GrGLBackendTextureInfo_assign","GrGLBackendTextureInfo_cleanup","GrGLExtensions","GrGLExtensions_GrGLExtensions","GrGLExtensions_add","GrGLExtensions_dumpJSON","GrGLExtensions_has","GrGLExtensions_init","GrGLExtensions_remove","GrGLFormat","GrGLFramebufferInfo","GrGLGetIntegervFn","GrGLGetStringFn","GrGLGetStringiFn","GrGLInterface","GrGLInterface_Functions","GrGLInterface_GrGLInterface","GrGLInterface_INHERITED","GrGLInterface__bindgen_ty_1","GrGLInterface_validate","GrGLStandard","GrGLSurfaceInfo","GrGLTextureInfo","GrGLTextureParameters","GrGLTextureParameters_NonsamplerState","GrGLTextureParameters_NonsamplerState_NonsamplerState","GrGLTextureParameters_NonsamplerState_invalidate","GrGLTextureParameters_ResetTimestamp","GrGLTextureParameters_SamplerOverriddenState","GrGLTextureParameters_SamplerOverriddenState_SamplerOverriddenState","GrGLTextureParameters_SamplerOverriddenState_invalidate","GrGLTextureParameters_invalidate","GrGLTextureParameters_kExpiredTimestamp","GrGLTextureParameters_set","GrGLenum","GrGLfloat","GrGLint","GrGLubyte","GrGLuint","GrGLvoid","GrGpuFinishedContext","GrGpuFinishedProc","GrGpuSubmittedContext","GrGpuSubmittedProc","GrImageContext","GrImageContextPriv","GrImageContext_GrImageContext","GrImageContext_GrImageContext_destructor","GrImageContext_INHERITED","GrImageContext_abandonContext","GrImageContext_abandoned","GrImageContext_priv","GrImageContext_priv1","GrMipMapped","GrMipmapped","GrMockOptions","GrMockOptions_ConfigOptions","GrMockOptions_ConfigOptions_Renderability","GrMockRenderTargetInfo","GrMockRenderTargetInfo_getBackendFormat","GrMockTextureInfo","GrMockTextureInfo_getBackendFormat","GrOnFlushCallbackObject","GrProgramDesc","GrProgramInfo","GrProtected","GrRecordingContext","GrRecordingContextPriv","GrRecordingContext_Arenas","GrRecordingContext_Arenas_Arenas","GrRecordingContext_GrRecordingContext","GrRecordingContext_GrRecordingContext_destructor","GrRecordingContext_INHERITED","GrRecordingContext_OwnedArenas","GrRecordingContext_OwnedArenas_OwnedArenas","GrRecordingContext_OwnedArenas_OwnedArenas_destructor","GrRecordingContext_OwnedArenas_get","GrRecordingContext_ProgramData","GrRecordingContext_ProgramData_ProgramData","GrRecordingContext_ProgramData_ProgramData1","GrRecordingContext_ProgramData_ProgramData_destructor","GrRecordingContext_Stats","GrRecordingContext_abandonContext","GrRecordingContext_addOnFlushCallbackObject","GrRecordingContext_colorTypeSupportedAsImage","GrRecordingContext_destroyDrawingManager","GrRecordingContext_detachArenas","GrRecordingContext_drawingManager","GrRecordingContext_dumpJSON","GrRecordingContext_getTextBlobRedrawCoordinator","GrRecordingContext_getTextBlobRedrawCoordinator1","GrRecordingContext_init","GrRecordingContext_maxRenderTargetSize","GrRecordingContext_maxTextureSize","GrRecordingContext_skCapabilities","GrRecordingContext_threadSafeCache","GrRecordingContext_threadSafeCache1","GrRenderTargetProxy","GrRenderable","GrSemaphoresSubmitted","GrSurfaceOrigin","GrTextureType","GrThreadSafeCache","GrThreadSafePipelineBuilder","GrVkDrawableInfo","GrYUVABackendTextureInfo","GrYUVABackendTextureInfo_GrYUVABackendTextureInfo","GrYUVABackendTextureInfo_kMaxPlanes","GrYUVABackendTextureInfo_toYUVALocations","GrYUVABackendTextures","GrYUVABackendTextures_GrYUVABackendTextures","GrYUVABackendTextures_toYUVALocations","HEIF","HSL","HWB","Hairline","Hairline","HardLight","HasAlpha","HighButSlow","Hue","I","ICO","IDA","IDC","ISA","ISC","Identity","Ignore","IncludeDataIfLocal","IncompleteInput","Increasing","Init","InitEffects","InitImageFilters","Inner","Int","Int2","Int3","Int4","InternalError","Intersect","Intersect","Intersect","Intersect","InvalidConversion","InvalidInput","InvalidMatrix","InvalidParameters","InvalidScale","InverseEvenOdd","InverseWinding","InvertBrightness","InvertLightness","Inverted","IsCubicDegenerate","IsLineDegenerate","IsQuadDegenerate","Italic","Italic","JPEG","JPEG","JPEGXL","JPEG_Full","KTX","Keep","LCH","LUMINANCE16F","LUMINANCE8","LUMINANCE8_ALPHA8","Lab","Large","Large","Last","Last","Last","Last","Last","Last","Last","Last","Last","Last","Last","Last","LastCoeffMode","LastColorFormat","LastColorSpace","LastEnum","LastEnum","LastEnum","LastEnum","LastEnum","LastHueMethod","LastMode","LastOp","LastSeparableMode","LastTileMode","LastType","Left","LeftBottom","LeftTop","Length","Length","Lighten","Line","Line","Line","Linear","Linear","Lines","Longer","LookAt","LowButFast","LowerLeft","LowerRight","Luminosity","MAX_ENUM","MAX_POINTS","MAX_POINTS","Make","Make","Make","Make","Make","Make","Make","Make1","Make1","Make2","Make3","MakeA8","MakeA81","MakeArrayProc","MakeBlur","MakeCanvas","MakeClipTable","MakeCompose","MakeCopy","MakeCopy","MakeCopy","MakeCopyArray","MakeCopyArrays","MakeDefault","MakeDeserialize","MakeDirect","MakeEmpty","MakeEmpty","MakeForBlender","MakeForColorFilter","MakeForShader","MakeFromBackendRenderTarget","MakeFromBackendTexture","MakeFromData","MakeFromData","MakeFromData","MakeFromData1","MakeFromFD","MakeFromFILE","MakeFromFile","MakeFromFile","MakeFromFileName","MakeFromMalloc","MakeFromName","MakeFromPosText","MakeFromPosTextH","MakeFromRSXform","MakeFromStream","MakeFromStream","MakeFromStream","MakeFromStream","MakeFromStream","MakeFromText","MakeGL","MakeGL1","MakeGL2","MakeGL3","MakeGammaTable","MakeLinear","MakeLinear1","MakeMock","MakeMock","MakeMock1","MakeN32","MakeN321","MakeN32Premul","MakeN32Premul1","MakeN32Premul2","MakeN32Premul3","MakeNull","MakePlaceholder","MakeRGB","MakeRadial","MakeRadial1","MakeRaster","MakeRaster1","MakeRasterDirect","MakeRasterDirect","MakeRasterDirect1","MakeRasterDirectReleaseProc","MakeRasterN32Premul","MakeRenderTarget","MakeRenderTarget1","MakeRenderTarget2","MakeRenderTarget3","MakeS32","MakeSRGB","MakeSRGBLinear","MakeSubset","MakeSum","MakeSweep","MakeSweep1","MakeTraced","MakeTwoPointConical","MakeTwoPointConical1","MakeUninitialized","MakeUnknown","MakeWithCString","MakeWithCopy","MakeWithProc","MakeZeroInitialized","Max_EnumValue","Metal","Metal","Mirror","Miter","Mock","Mock","Mode","Modulate","Morph","Move","Move","Multiply","NameToFactory","Nearest","Nearest","Next","NinePatch","No","No","No","No","No","No","No","No","No","NoAccess","NoInvert","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","None","Normal","Normal","Normal","Normal","Normalize","NotStarted","NumChannelsAndDataType","OKLCH","OKLab","Oblique","One","Op","Opaque","OpenGL","OpenGL_GrBackend","Outer","Oval","Oval","Oval1","Overlay","PKM","PNG","PVRTC1_2BPP_SRGB_BLOCK_IMG","PVRTC1_2BPP_UNORM_BLOCK_IMG","PVRTC1_4BPP_SRGB_BLOCK_IMG","PVRTC1_4BPP_UNORM_BLOCK_IMG","PVRTC2_2BPP_SRGB_BLOCK_IMG","PVRTC2_2BPP_UNORM_BLOCK_IMG","PVRTC2_4BPP_SRGB_BLOCK_IMG","PVRTC2_4BPP_UNORM_BLOCK_IMG","Perspective","PlaneDimensions","PlaneSubsamplingFactors","Plus","Points","Polygon","Polygon","PreferAnimation","PreferStillImage","Premul","Present","PurgeAllCaches","PurgeFontCache","PurgePinnedFontCache","PurgeResourceCache","Quad","Quad","R","R10X6G10X6B10X6A10X6_UNORM_4PACK16","R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR","R10X6G10X6_UNORM_2PACK16","R10X6G10X6_UNORM_2PACK16_KHR","R10X6_UNORM_PACK16","R10X6_UNORM_PACK16_KHR","R12X4G12X4B12X4A12X4_UNORM_4PACK16","R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR","R12X4G12X4_UNORM_2PACK16","R12X4G12X4_UNORM_2PACK16_KHR","R12X4_UNORM_PACK16","R12X4_UNORM_PACK16_KHR","R16","R16F","R16G16B16A16_SFLOAT","R16G16B16A16_SINT","R16G16B16A16_SNORM","R16G16B16A16_SSCALED","R16G16B16A16_UINT","R16G16B16A16_UNORM","R16G16B16A16_USCALED","R16G16B16_SFLOAT","R16G16B16_SINT","R16G16B16_SNORM","R16G16B16_SSCALED","R16G16B16_UINT","R16G16B16_UNORM","R16G16B16_USCALED","R16G16_SFLOAT","R16G16_SINT","R16G16_SNORM","R16G16_SSCALED","R16G16_UINT","R16G16_UNORM","R16G16_USCALED","R16_SFLOAT","R16_SINT","R16_SNORM","R16_SSCALED","R16_UINT","R16_UNORM","R16_USCALED","R32G32B32A32_SFLOAT","R32G32B32A32_SINT","R32G32B32A32_UINT","R32G32B32_SFLOAT","R32G32B32_SINT","R32G32B32_UINT","R32G32_SFLOAT","R32G32_SINT","R32G32_UINT","R32_SFLOAT","R32_SINT","R32_UINT","R4G4B4A4_UNORM_PACK16","R4G4_UNORM_PACK8","R5G5B5A1_UNORM_PACK16","R5G6B5_UNORM_PACK16","R64G64B64A64_SFLOAT","R64G64B64A64_SINT","R64G64B64A64_UINT","R64G64B64_SFLOAT","R64G64B64_SINT","R64G64B64_UINT","R64G64_SFLOAT","R64G64_SINT","R64G64_UINT","R64_SFLOAT","R64_SINT","R64_UINT","R8","R8G8B8A8_SINT","R8G8B8A8_SNORM","R8G8B8A8_SRGB","R8G8B8A8_SSCALED","R8G8B8A8_UINT","R8G8B8A8_UNORM","R8G8B8A8_USCALED","R8G8B8_SINT","R8G8B8_SNORM","R8G8B8_SRGB","R8G8B8_SSCALED","R8G8B8_UINT","R8G8B8_UNORM","R8G8B8_USCALED","R8G8_SINT","R8G8_SNORM","R8G8_SRGB","R8G8_SSCALED","R8G8_UINT","R8G8_UNORM","R8G8_USCALED","R8_SINT","R8_SNORM","R8_SRGB","R8_SSCALED","R8_UINT","R8_UNORM","R8_USCALED","RG16","RG16F","RG8","RGB10_A2","RGB565","RGB8","RGBA16","RGBA16F","RGBA4","RGBA8","RGBX8","RGBtoYUV","RRect","RRect1","RRect2","Rec601","Rec601_Limited","Rec709","Rec709_Full","Rec709_Limited","RecommendedRGBAColorType","Rect","Rect","RectToRect","RefDefault","RefEmpty","Register","Register","RegisterFlattenables","Relative","Repeat","Replace","RestoreBGColor","RestorePrevious","ResultToString","Retain","Reverse","ReverseDifference","ReverseDifference","ReverseDifference","Rewind","Right","RightBottom","RightTop","Rotate","Round","Round","RustStream","RustStream_RustStream","RustStream_getLength","RustStream_hasLength","RustStream_isAtEnd","RustStream_move","RustStream_read","RustStream_rewind","RustStream_seek","RustWStream","S8_UINT","SA","SC","SK_ColorBLACK","SK_ColorBLUE","SK_ColorCYAN","SK_ColorDKGRAY","SK_ColorGRAY","SK_ColorGREEN","SK_ColorLTGRAY","SK_ColorMAGENTA","SK_ColorRED","SK_ColorTRANSPARENT","SK_ColorWHITE","SK_ColorYELLOW","SRGB","SRGB8_ALPHA8","SRGBLinear","STENCIL_INDEX16","STENCIL_INDEX8","Saturation","Screen","SetAffineIdentity","SetFontCacheCountLimit","SetFontCacheLimit","SetImageGeneratorFromEncodedDataFactory","SetOpenTypeSVGDecoderFactory","SetResourceCacheSingleAllocationByteLimit","SetResourceCacheTotalByteLimit","Shader","Shorter","Simple","Simplify","Sink","SizeOfPackedUInt","Sk3DView","Sk3DView_Rec","Sk3DView_Sk3DView","Sk3DView_Sk3DView_destructor","Sk3DView_applyToCanvas","Sk3DView_dotWithNormal","Sk3DView_getMatrix","Sk3DView_restore","Sk3DView_rotateX","Sk3DView_rotateY","Sk3DView_rotateZ","Sk3DView_save","Sk3DView_translate","SkAdvancedTypefaceMetrics","SkAlphaType","SkAnnotateLinkToDestination","SkAnnotateNamedDestination","SkAnnotateRectWithURL","SkApplyPerspectiveClip","SkArenaAlloc","SkAutoCanvasRestore","SkBBHFactory","SkBBoxHierarchy","SkBBoxHierarchy_Metadata","SkBBoxHierarchy_insert1","SkBaseDevice","SkBitmap","SkBitmap_AllocFlags","SkBitmap_AllocFlags_kZeroPixels_AllocFlag","SkBitmap_Allocator","SkBitmap_Allocator_INHERITED","SkBitmap_HeapAllocator","SkBitmap_HeapAllocator_allocPixelRef","SkBitmap_SkBitmap","SkBitmap_SkBitmap1","SkBitmap_SkBitmap2","SkBitmap_SkBitmap_destructor","SkBitmap_allocN32Pixels","SkBitmap_allocPixels","SkBitmap_allocPixels1","SkBitmap_allocPixels2","SkBitmap_allocPixels3","SkBitmap_allocPixelsFlags","SkBitmap_asImage","SkBitmap_colorSpace","SkBitmap_erase","SkBitmap_erase1","SkBitmap_eraseColor","SkBitmap_eraseColor1","SkBitmap_extractAlpha","SkBitmap_extractSubset","SkBitmap_getAddr","SkBitmap_getBounds","SkBitmap_getBounds1","SkBitmap_getGenerationID","SkBitmap_installMaskPixels","SkBitmap_installPixels","SkBitmap_installPixels1","SkBitmap_isImmutable","SkBitmap_makeShader","SkBitmap_makeShader1","SkBitmap_makeShader2","SkBitmap_makeShader3","SkBitmap_notifyPixelsChanged","SkBitmap_peekPixels","SkBitmap_pixelRefOrigin","SkBitmap_readPixels","SkBitmap_readPixels1","SkBitmap_refColorSpace","SkBitmap_reset","SkBitmap_setAlphaType","SkBitmap_setImmutable","SkBitmap_setInfo","SkBitmap_setPixelRef","SkBitmap_setPixels","SkBitmap_swap","SkBitmap_tryAllocN32Pixels","SkBitmap_tryAllocPixels","SkBitmap_tryAllocPixels1","SkBitmap_tryAllocPixelsFlags","SkBitmap_writePixels","SkBlendMode","SkBlendModeCoeff","SkBlendMode_AsCoeff","SkBlendMode_Name","SkBlender","SkBlender","SkBlender_INHERITED","SkBlender_Mode","SkBlurStyle","SkCamera3D","SkCamera3D_SkCamera3D","SkCamera3D_patchToMatrix","SkCamera3D_reset","SkCamera3D_update","SkCanvas","SkCanvas_AutoUpdateQRBounds","SkCanvas_BackImage","SkCanvas_BackImage_BackImage","SkCanvas_BackImage_BackImage1","SkCanvas_BackImage_BackImage2","SkCanvas_BackImage_BackImage_destructor","SkCanvas_CheckForOverwrite","SkCanvas_ClipEdgeStyle","SkCanvas_DeviceCompatibleWithFilter","SkCanvas_INHERITED","SkCanvas_ImageSetEntry","SkCanvas_ImageSetEntry_ImageSetEntry","SkCanvas_ImageSetEntry_ImageSetEntry1","SkCanvas_ImageSetEntry_ImageSetEntry2","SkCanvas_ImageSetEntry_ImageSetEntry3","SkCanvas_ImageSetEntry_ImageSetEntry_destructor","SkCanvas_Lattice","SkCanvas_Lattice_RectType","SkCanvas_Layer","SkCanvas_Layer_Layer","SkCanvas_MCRec","SkCanvas_MCRec_MCRec","SkCanvas_MCRec_MCRec1","SkCanvas_MCRec_MCRec_destructor","SkCanvas_MCRec_newLayer","SkCanvas_MCRec_reset","SkCanvas_MakeRasterDirect","SkCanvas_PointMode","SkCanvas_QuadAAFlags","SkCanvas_QuadAAFlags_kAll_QuadAAFlags","SkCanvas_QuadAAFlags_kBottom_QuadAAFlag","SkCanvas_QuadAAFlags_kLeft_QuadAAFlag","SkCanvas_QuadAAFlags_kNone_QuadAAFlags","SkCanvas_QuadAAFlags_kRight_QuadAAFlag","SkCanvas_QuadAAFlags_kTop_QuadAAFlag","SkCanvas_SaveLayerFlags","SkCanvas_SaveLayerFlagsSet","SkCanvas_SaveLayerFlagsSet_kF16ColorType","SkCanvas_SaveLayerFlagsSet_kInitWithPrevious_SaveLayerFlag","SkCanvas_SaveLayerFlagsSet_kPreserveLCDText_SaveLayerFlag","SkCanvas_SaveLayerRec","SkCanvas_SaveLayerStrategy","SkCanvas_ShaderOverrideOpacity","SkCanvas_SkCanvas","SkCanvas_SkCanvas1","SkCanvas_SkCanvas2","SkCanvas_SkCanvas3","SkCanvas_SkCanvas4","SkCanvas_SkCanvas5","SkCanvas_SkCanvas_destructor","SkCanvas_SrcRectConstraint","SkCanvas__bindgen_vtable","SkCanvas_accessTopLayerPixels","SkCanvas_accessTopRasterHandle","SkCanvas_androidFramework_setDeviceClipRestriction","SkCanvas_clipPath","SkCanvas_clipRRect","SkCanvas_clipRect","SkCanvas_clipRegion","SkCanvas_clipShader","SkCanvas_concat","SkCanvas_concat1","SkCanvas_drawAnnotation","SkCanvas_drawArc","SkCanvas_drawAtlas","SkCanvas_drawCircle","SkCanvas_drawColor","SkCanvas_drawDRRect","SkCanvas_drawDrawable","SkCanvas_drawDrawable1","SkCanvas_drawGlyphs","SkCanvas_drawGlyphs1","SkCanvas_drawGlyphs2","SkCanvas_drawImage","SkCanvas_drawImageLattice","SkCanvas_drawImageNine","SkCanvas_drawImageRect","SkCanvas_drawImageRect1","SkCanvas_drawLine","SkCanvas_drawMesh","SkCanvas_drawOval","SkCanvas_drawPaint","SkCanvas_drawPatch","SkCanvas_drawPath","SkCanvas_drawPicture","SkCanvas_drawPoint","SkCanvas_drawPoints","SkCanvas_drawRRect","SkCanvas_drawRect","SkCanvas_drawRegion","SkCanvas_drawRoundRect","SkCanvas_drawSimpleText","SkCanvas_drawTextBlob","SkCanvas_drawVertices","SkCanvas_drawVertices1","SkCanvas_experimental_DrawEdgeAAImageSet","SkCanvas_experimental_DrawEdgeAAQuad","SkCanvas_flush","SkCanvas_getBaseLayerSize","SkCanvas_getBaseProps","SkCanvas_getDeviceClipBounds","SkCanvas_getLocalClipBounds","SkCanvas_getLocalToDevice","SkCanvas_getProps","SkCanvas_getSaveCount","SkCanvas_getSurface","SkCanvas_getTopProps","SkCanvas_getTotalMatrix","SkCanvas_imageInfo","SkCanvas_isClipEmpty","SkCanvas_isClipRect","SkCanvas_kMCRecCount","SkCanvas_kMCRecSize","SkCanvas_makeSurface","SkCanvas_onAccessTopLayerPixels","SkCanvas_onClipPath","SkCanvas_onClipRRect","SkCanvas_onClipRect","SkCanvas_onClipRegion","SkCanvas_onClipShader","SkCanvas_onConvertGlyphRunListToSlug","SkCanvas_onDiscard","SkCanvas_onDrawAnnotation","SkCanvas_onDrawArc","SkCanvas_onDrawAtlas2","SkCanvas_onDrawBehind","SkCanvas_onDrawDRRect","SkCanvas_onDrawDrawable","SkCanvas_onDrawEdgeAAImageSet2","SkCanvas_onDrawEdgeAAQuad","SkCanvas_onDrawGlyphRunList","SkCanvas_onDrawImage2","SkCanvas_onDrawImageLattice2","SkCanvas_onDrawImageRect2","SkCanvas_onDrawMesh","SkCanvas_onDrawOval","SkCanvas_onDrawPaint","SkCanvas_onDrawPatch","SkCanvas_onDrawPath","SkCanvas_onDrawPicture","SkCanvas_onDrawPoints","SkCanvas_onDrawRRect","SkCanvas_onDrawRect","SkCanvas_onDrawRegion","SkCanvas_onDrawShadowRec","SkCanvas_onDrawSlug","SkCanvas_onDrawTextBlob","SkCanvas_onDrawVerticesObject","SkCanvas_onFlush","SkCanvas_onGetProps","SkCanvas_onImageInfo","SkCanvas_onNewSurface","SkCanvas_onPeekPixels","SkCanvas_onResetClip","SkCanvas_peekPixels","SkCanvas_private_draw_shadow_rec","SkCanvas_quickReject","SkCanvas_quickReject1","SkCanvas_readPixels","SkCanvas_readPixels1","SkCanvas_readPixels2","SkCanvas_recorder","SkCanvas_recordingContext","SkCanvas_resetMatrix","SkCanvas_restore","SkCanvas_restoreToCount","SkCanvas_rotate","SkCanvas_rotate1","SkCanvas_save","SkCanvas_saveLayer","SkCanvas_saveLayer1","SkCanvas_saveLayerAlphaf","SkCanvas_scale","SkCanvas_setMatrix","SkCanvas_setMatrix1","SkCanvas_skew","SkCanvas_temporary_internal_getRgnClip","SkCanvas_translate","SkCanvas_writePixels","SkCanvas_writePixels1","SkCapabilities","SkClipOp","SkCodec","SkCodecAnimation_Blend","SkCodecAnimation_DisposalMethod","SkCodec_FrameInfo","SkCodec_GetPixelsCallback","SkCodec_MakeFromData","SkCodec_MakeFromStream","SkCodec_Options","SkCodec_Result","SkCodec_ResultToString","SkCodec_SelectionPolicy","SkCodec_SkCodec","SkCodec_SkCodec_destructor","SkCodec_SkScanlineOrder","SkCodec_XformFormat","SkCodec_XformTime","SkCodec_ZeroInitialized","SkCodec__bindgen_vtable","SkCodec_applyColorXform","SkCodec_conversionSupported","SkCodec_getFrameInfo","SkCodec_getImage","SkCodec_getImage1","SkCodec_getPixels","SkCodec_getScanlines","SkCodec_getYUVAPlanes","SkCodec_kNoFrame","SkCodec_kRepetitionCountInfinite","SkCodec_onOutputScanline","SkCodec_outputScanline","SkCodec_queryYUVAInfo","SkCodec_rewindIfNeeded","SkCodec_setSrcXformFormat","SkCodec_skipScanlines","SkCodec_startIncrementalDecode","SkCodec_startScanlineDecode","SkColor","SkColor4f","SkColorChannel","SkColorChannelFlag","SkColorFilter","SkColorFilter","SkColorFilter_Deserialize","SkColorFilter_INHERITED","SkColorFilter_asAColorMatrix","SkColorFilter_asAColorMode","SkColorFilter_filterColor","SkColorFilter_filterColor4f","SkColorFilter_isAlphaUnchanged","SkColorFilter_makeComposed","SkColorInfo","SkColorInfo_SkColorInfo","SkColorInfo_SkColorInfo1","SkColorInfo_SkColorInfo2","SkColorInfo_SkColorInfo3","SkColorInfo_SkColorInfo_destructor","SkColorInfo_bytesPerPixel","SkColorInfo_colorSpace","SkColorInfo_gammaCloseToSRGB","SkColorInfo_makeAlphaType","SkColorInfo_makeColorSpace","SkColorInfo_makeColorType","SkColorInfo_refColorSpace","SkColorInfo_shiftPerPixel","SkColorMatrix","SkColorMatrix_RGBtoYUV","SkColorMatrix_YUVtoRGB","SkColorMatrix_postTranslate","SkColorMatrix_setConcat","SkColorMatrix_setIdentity","SkColorMatrix_setSaturation","SkColorMatrix_setScale","SkColorSpace","SkColorSpacePrimaries","SkColorSpacePrimaries_toXYZD50","SkColorSpace_Deserialize","SkColorSpace_Equals","SkColorSpace_Make","SkColorSpace_MakeRGB","SkColorSpace_MakeSRGB","SkColorSpace_MakeSRGBLinear","SkColorSpace_gammaCloseToSRGB","SkColorSpace_gammaIsLinear","SkColorSpace_gamutTransformTo","SkColorSpace_invTransferFn","SkColorSpace_isNumericalTransferFn","SkColorSpace_isSRGB","SkColorSpace_makeColorSpin","SkColorSpace_makeLinearGamma","SkColorSpace_makeSRGBGamma","SkColorSpace_serialize","SkColorSpace_toProfile","SkColorSpace_toXYZD50","SkColorSpace_transferFn","SkColorSpace_transferFn1","SkColorSpace_writeToMemory","SkColorType","SkColorTypeBytesPerPixel","SkColorTypeIsAlwaysOpaque","SkColorTypeValidateAlphaType","SkContourMeasure","SkContourMeasureIter","SkContourMeasureIter_Impl","SkContourMeasureIter_SkContourMeasureIter","SkContourMeasureIter_SkContourMeasureIter1","SkContourMeasureIter_SkContourMeasureIter_destructor","SkContourMeasureIter_next","SkContourMeasureIter_reset","SkContourMeasure_MatrixFlags","SkContourMeasure_MatrixFlags_kGetPosAndTan_MatrixFlag","SkContourMeasure_MatrixFlags_kGetPosition_MatrixFlag","SkContourMeasure_MatrixFlags_kGetTangent_MatrixFlag","SkContourMeasure_Segment","SkContourMeasure_Segment_getScalarT","SkContourMeasure_getMatrix","SkContourMeasure_getPosTan","SkContourMeasure_getSegment","SkCoverageMode","SkCubicMap","SkCubicMap_SkCubicMap","SkCubicMap_Type","SkCubicMap_computeFromT","SkCubicMap_computeYFromX","SkCubicResampler","SkCustomTypefaceBuilder","SkCustomTypefaceBuilder_FactoryId","SkCustomTypefaceBuilder_GlyphRec","SkCustomTypefaceBuilder_MakeFromStream","SkCustomTypefaceBuilder_SkCustomTypefaceBuilder","SkCustomTypefaceBuilder_detach","SkCustomTypefaceBuilder_setFontStyle","SkCustomTypefaceBuilder_setGlyph","SkCustomTypefaceBuilder_setMetrics","SkData","SkDataTable","SkDataTable_Dir","SkDataTable_FreeProc","SkDataTable_INHERITED","SkDataTable_MakeArrayProc","SkDataTable_MakeCopyArray","SkDataTable_MakeCopyArrays","SkDataTable_MakeEmpty","SkDataTable__bindgen_ty_1","SkDataTable_at","SkDataTable_atSize","SkData_INHERITED","SkData_MakeEmpty","SkData_MakeFromFD","SkData_MakeFromFILE","SkData_MakeFromFileName","SkData_MakeFromMalloc","SkData_MakeFromStream","SkData_MakeSubset","SkData_MakeUninitialized","SkData_MakeWithCString","SkData_MakeWithCopy","SkData_MakeWithProc","SkData_MakeZeroInitialized","SkData_ReleaseProc","SkData_copyRange","SkData_equals","SkDeferredDisplayList","SkDeferredDisplayListPriv","SkDeferredDisplayListRecorder","SkDeferredDisplayListRecorder_PromiseImageTextureContext","SkDeferredDisplayListRecorder_PromiseImageTextureFulfillProc","SkDeferredDisplayListRecorder_PromiseImageTextureReleaseProc","SkDeferredDisplayListRecorder_SkDeferredDisplayListRecorder","SkDeferredDisplayListRecorder_SkDeferredDisplayListRecorder_destructor","SkDeferredDisplayListRecorder_detach","SkDeferredDisplayListRecorder_getCanvas","SkDeferredDisplayListRecorder_makePromiseTexture","SkDeferredDisplayListRecorder_makeYUVAPromiseTexture","SkDeferredDisplayList_LazyProxyData","SkDeferredDisplayList_ProgramIterator","SkDeferredDisplayList_ProgramIterator_ProgramIterator","SkDeferredDisplayList_ProgramIterator_ProgramIterator_destructor","SkDeferredDisplayList_ProgramIterator_compile","SkDeferredDisplayList_ProgramIterator_done","SkDeferredDisplayList_ProgramIterator_next","SkDeferredDisplayList_SkDeferredDisplayList_destructor","SkDeque","SkDeque_Block","SkDeque_F2BIter","SkDeque_F2BIter_INHERITED","SkDeque_Iter","SkDeque_Iter_Iter","SkDeque_Iter_Iter1","SkDeque_Iter_IterStart","SkDeque_Iter_next","SkDeque_Iter_prev","SkDeque_Iter_reset","SkDeque_SkDeque","SkDeque_SkDeque1","SkDeque_SkDeque_destructor","SkDeque_pop_back","SkDeque_pop_front","SkDeque_push_back","SkDeque_push_front","SkDescriptor","SkDeserialProcs","SkDocument","SkDocument_INHERITED","SkDocument_SkDocument","SkDocument_SkDocument_destructor","SkDocument_State","SkDocument_abort","SkDocument_beginPage","SkDocument_close","SkDocument_endPage","SkDrawLooper","SkDrawShadowRec","SkDrawable","SkDrawable","SkDrawable_GpuDrawHandler","SkDrawable_SkDrawable","SkDrawable_approximateBytesUsed","SkDrawable_draw","SkDrawable_draw1","SkDrawable_getBounds","SkDrawable_getGenerationID","SkDrawable_makePictureSnapshot","SkDrawable_notifyDrawingChanged","SkDrawable_onApproximateBytesUsed","SkDrawable_onMakePictureSnapshot","SkDynamicMemoryWStream","SkDynamicMemoryWStream_Block","SkDynamicMemoryWStream_INHERITED","SkDynamicMemoryWStream_SkDynamicMemoryWStream","SkDynamicMemoryWStream_SkDynamicMemoryWStream_destructor","SkDynamicMemoryWStream_bytesWritten","SkDynamicMemoryWStream_copyTo","SkDynamicMemoryWStream_copyToAndReset","SkDynamicMemoryWStream_detachAsData","SkDynamicMemoryWStream_detachAsStream","SkDynamicMemoryWStream_padToAlign4","SkDynamicMemoryWStream_prependToAndReset","SkDynamicMemoryWStream_read","SkDynamicMemoryWStream_reset","SkDynamicMemoryWStream_write","SkDynamicMemoryWStream_writeToAndReset","SkDynamicMemoryWStream_writeToAndReset1","SkDynamicMemoryWStream_writeToStream","SkEncodedImageFormat","SkEncodedInfo","SkEncodedInfo_Alpha","SkEncodedInfo_Color","SkEncodedInfo_ICCProfile","SkEncodedInfo_ICCProfile_Make","SkEncodedInfo_ICCProfile_Make1","SkEncodedOrigin","SkExecutor","SkFilterMode","SkFlattenable","SkFlattenable_Deserialize","SkFlattenable_Factory","SkFlattenable_FactoryToName","SkFlattenable_INHERITED","SkFlattenable_NameToFactory","SkFlattenable_PrivateInitializer","SkFlattenable_PrivateInitializer_InitEffects","SkFlattenable_PrivateInitializer_InitImageFilters","SkFlattenable_Register","SkFlattenable_Type","SkFlattenable_serialize","SkFlattenable_serialize1","SkFont","SkFontArguments","SkFontArguments_Palette","SkFontArguments_Palette_Override","SkFontArguments_VariationPosition","SkFontArguments_VariationPosition_Coordinate","SkFontDescriptor","SkFontHinting","SkFontMetrics","SkFontMetrics_FontMetricsFlags","SkFontMetrics_FontMetricsFlags_kBoundsInvalid_Flag","SkFontMetrics_FontMetricsFlags_kStrikeoutPositionIsValid_Flag","SkFontMetrics_FontMetricsFlags_kStrikeoutThicknessIsValid_Flag","SkFontMetrics_FontMetricsFlags_kUnderlinePositionIsValid_Flag","SkFontMetrics_FontMetricsFlags_kUnderlineThicknessIsValid_Flag","SkFontMgr","SkFontMgr_RefDefault","SkFontMgr_RefEmpty","SkFontMgr_countFamilies","SkFontMgr_createStyleSet","SkFontMgr_getFamilyName","SkFontMgr_legacyMakeTypeface","SkFontMgr_makeFromData","SkFontMgr_makeFromFile","SkFontMgr_makeFromStream","SkFontMgr_makeFromStream1","SkFontMgr_matchFamily","SkFontMgr_matchFamilyStyle","SkFontMgr_matchFamilyStyleCharacter","SkFontParameters_Variation_Axis","SkFontParameters_Variation_Axis_HIDDEN","SkFontStyle","SkFontStyleSet","SkFontStyleSet_CreateEmpty","SkFontStyleSet_matchStyleCSS3","SkFontStyle_Slant","SkFontStyle_Weight","SkFontStyle_Width","SkFontTableTag","SkFont_Edging","SkFont_PrivFlags","SkFont_PrivFlags_kBaselineSnap_PrivFlag","SkFont_PrivFlags_kEmbeddedBitmaps_PrivFlag","SkFont_PrivFlags_kEmbolden_PrivFlag","SkFont_PrivFlags_kForceAutoHinting_PrivFlag","SkFont_PrivFlags_kLinearMetrics_PrivFlag","SkFont_PrivFlags_kSubpixel_PrivFlag","SkFont_SkFont","SkFont_SkFont1","SkFont_SkFont2","SkFont_SkFont3","SkFont_dump","SkFont_getIntercepts","SkFont_getMetrics","SkFont_getPath","SkFont_getPaths","SkFont_getPos","SkFont_getTypefaceOrDefault","SkFont_getWidthsBounds","SkFont_getXPos","SkFont_kAllFlags","SkFont_makeWithSize","SkFont_measureText","SkFont_refTypefaceOrDefault","SkFont_setBaselineSnap","SkFont_setEdging","SkFont_setEmbeddedBitmaps","SkFont_setEmbolden","SkFont_setForceAutoHinting","SkFont_setHinting","SkFont_setLinearMetrics","SkFont_setScaleX","SkFont_setSize","SkFont_setSkewX","SkFont_setSubpixel","SkFont_sk_is_trivially_relocatable","SkFont_textToGlyphs","SkFont_unicharToGlyph","SkFont_unicharsToGlyphs","SkFourByteTag","SkGlyphID","SkGradientShader","SkGradientShader_Flags","SkGradientShader_Flags_kInterpolateColorsInPremul_Flag","SkGradientShader_Interpolation","SkGradientShader_Interpolation_ColorSpace","SkGradientShader_Interpolation_HueMethod","SkGradientShader_Interpolation_InPremul","SkGradientShader_Interpolation_kColorSpaceCount","SkGradientShader_Interpolation_kHueMethodCount","SkGradientShader_MakeLinear","SkGradientShader_MakeLinear1","SkGradientShader_MakeRadial","SkGradientShader_MakeRadial1","SkGradientShader_MakeSweep","SkGradientShader_MakeSweep1","SkGradientShader_MakeTwoPointConical","SkGradientShader_MakeTwoPointConical1","SkGraphics","SkGraphics_AllowJIT","SkGraphics_DumpMemoryStatistics","SkGraphics_GetFontCacheCountLimit","SkGraphics_GetFontCacheCountUsed","SkGraphics_GetFontCacheLimit","SkGraphics_GetFontCacheUsed","SkGraphics_GetOpenTypeSVGDecoderFactory","SkGraphics_GetResourceCacheSingleAllocationByteLimit","SkGraphics_GetResourceCacheTotalByteLimit","SkGraphics_GetResourceCacheTotalBytesUsed","SkGraphics_ImageGeneratorFromEncodedDataFactory","SkGraphics_Init","SkGraphics_OpenTypeSVGDecoderFactory","SkGraphics_PurgeAllCaches","SkGraphics_PurgeFontCache","SkGraphics_PurgePinnedFontCache","SkGraphics_PurgeResourceCache","SkGraphics_SetFontCacheCountLimit","SkGraphics_SetFontCacheLimit","SkGraphics_SetImageGeneratorFromEncodedDataFactory","SkGraphics_SetOpenTypeSVGDecoderFactory","SkGraphics_SetResourceCacheSingleAllocationByteLimit","SkGraphics_SetResourceCacheTotalByteLimit","SkHSVToColor","SkHighContrastConfig","SkHighContrastConfig_InvertStyle","SkIDChangeListener","SkIDChangeListener_List","SkIDChangeListener_List_List","SkIDChangeListener_List_List_destructor","SkIDChangeListener_List_add","SkIDChangeListener_List_changed","SkIDChangeListener_List_count","SkIDChangeListener_List_reset","SkIDChangeListener_SkIDChangeListener","SkIDChangeListener_SkIDChangeListener_destructor","SkIPoint","SkIRect","SkIRect_intersect","SkIRect_join","SkISize","SkImage","SkImageFilter","SkImageFilter","SkImageFilter_INHERITED","SkImageFilter_MapDirection","SkImageFilter_asAColorFilter","SkImageFilter_canComputeFastBounds","SkImageFilter_computeFastBounds","SkImageFilter_countInputs","SkImageFilter_filterBounds","SkImageFilter_getInput","SkImageFilter_isColorFilterNode","SkImageFilter_makeWithLocalMatrix","SkImageFilters_CropRect","SkImageFilters_Dither","SkImageGenerator","SkImageGenerator_Options","SkImageGenerator_SkImageGenerator","SkImageGenerator__bindgen_vtable","SkImageGenerator_getPixels","SkImageGenerator_getYUVAPlanes","SkImageGenerator_kNeedNewImageUniqueID","SkImageGenerator_queryYUVAInfo","SkImageInfo","SkImageInfo_Make","SkImageInfo_Make1","SkImageInfo_Make2","SkImageInfo_Make3","SkImageInfo_MakeA8","SkImageInfo_MakeA81","SkImageInfo_MakeN32","SkImageInfo_MakeN321","SkImageInfo_MakeN32Premul","SkImageInfo_MakeN32Premul1","SkImageInfo_MakeN32Premul2","SkImageInfo_MakeN32Premul3","SkImageInfo_MakeS32","SkImageInfo_MakeUnknown","SkImageInfo_colorSpace","SkImageInfo_computeByteSize","SkImageInfo_computeOffset","SkImageInfo_makeColorSpace","SkImageInfo_refColorSpace","SkImage_AsyncReadResult","SkImage_AsyncReadResult__bindgen_vtable","SkImage_CachingHint","SkImage_INHERITED","SkImage_LegacyBitmapMode","SkImage_ReadPixelsCallback","SkImage_ReadPixelsContext","SkImage_ReleaseContext","SkImage_RequiredProperties","SkImage_RescaleGamma","SkImage_RescaleMode","SkImage_TextureReleaseProc","SkImage_alphaType","SkImage_asLegacyBitmap","SkImage_asyncRescaleAndReadPixels","SkImage_asyncRescaleAndReadPixelsYUV420","SkImage_colorSpace","SkImage_colorType","SkImage_hasMipmaps","SkImage_isAlphaOnly","SkImage_makeColorSpace1","SkImage_makeColorTypeAndColorSpace1","SkImage_makeNonTextureImage","SkImage_makeRasterImage","SkImage_makeRawShader","SkImage_makeRawShader1","SkImage_makeRawShader2","SkImage_makeRawShader3","SkImage_makeShader","SkImage_makeShader1","SkImage_makeShader2","SkImage_makeShader3","SkImage_peekPixels","SkImage_readPixels","SkImage_readPixels1","SkImage_readPixels2","SkImage_readPixels3","SkImage_refColorSpace","SkImage_refEncodedData","SkImage_reinterpretColorSpace","SkImage_scalePixels","SkImage_withDefaultMipmaps","SkImages_BitDepth","SkImages_ReleaseContext","SkJSONWriter","SkJpegEncoder_AlphaOption","SkJpegEncoder_Downsample","SkM44","SkM44_LookAt","SkM44_NaN_Constructor","SkM44_Perspective","SkM44_RectToRect","SkM44_Uninitialized_Constructor","SkM44_dump","SkM44_getRowMajor","SkM44_invert","SkM44_map","SkM44_normalizePerspective","SkM44_postTranslate","SkM44_preConcat","SkM44_preScale","SkM44_preScale1","SkM44_preTranslate","SkM44_setConcat","SkM44_setRotate","SkM44_setRotateUnitSinCos","SkM44_transpose","SkMask","SkMaskFilter","SkMaskFilter","SkMaskFilter_Deserialize","SkMaskFilter_MakeBlur","SkMaskFilter_approximateFilteredBounds","SkMatrix","SkMatrix_I","SkMatrix_InvalidMatrix","SkMatrix_MapPtsProc","SkMatrix_MapXYProc","SkMatrix_ScaleToFit","SkMatrix_SetAffineIdentity","SkMatrix_TypeMask","SkMatrix_TypeMask_kAffine_Mask","SkMatrix_TypeMask_kIdentity_Mask","SkMatrix_TypeMask_kPerspective_Mask","SkMatrix_TypeMask_kScale_Mask","SkMatrix_TypeMask_kTranslate_Mask","SkMatrix_asAffine","SkMatrix_decomposeScale","SkMatrix_dump","SkMatrix_gMapPtsProcs","SkMatrix_gMapXYProcs","SkMatrix_getMaxScale","SkMatrix_getMinMaxScales","SkMatrix_getMinScale","SkMatrix_isSimilarity","SkMatrix_kAScaleX","SkMatrix_kAScaleY","SkMatrix_kASkewX","SkMatrix_kASkewY","SkMatrix_kATransX","SkMatrix_kATransY","SkMatrix_kAllMasks","SkMatrix_kMPersp0","SkMatrix_kMPersp1","SkMatrix_kMPersp2","SkMatrix_kMScaleX","SkMatrix_kMScaleY","SkMatrix_kMSkewX","SkMatrix_kMSkewY","SkMatrix_kMTransX","SkMatrix_kMTransY","SkMatrix_kORableMasks","SkMatrix_kOnlyPerspectiveValid_Mask","SkMatrix_kRectStaysRect_Mask","SkMatrix_kUnknown_Mask","SkMatrix_mapHomogeneousPoints","SkMatrix_mapHomogeneousPoints1","SkMatrix_mapPoints","SkMatrix_mapRadius","SkMatrix_mapRect","SkMatrix_mapRectScaleTranslate","SkMatrix_mapVectors","SkMatrix_mapXY","SkMatrix_postConcat","SkMatrix_postRotate","SkMatrix_postRotate1","SkMatrix_postScale","SkMatrix_postScale1","SkMatrix_postSkew","SkMatrix_postSkew1","SkMatrix_postTranslate","SkMatrix_preConcat","SkMatrix_preRotate","SkMatrix_preRotate1","SkMatrix_preScale","SkMatrix_preScale1","SkMatrix_preSkew","SkMatrix_preSkew1","SkMatrix_preTranslate","SkMatrix_preservesRightAngles","SkMatrix_reset","SkMatrix_set9","SkMatrix_setAffine","SkMatrix_setConcat","SkMatrix_setPolyToPoly","SkMatrix_setRSXform","SkMatrix_setRectToRect","SkMatrix_setRotate","SkMatrix_setRotate1","SkMatrix_setScale","SkMatrix_setScale1","SkMatrix_setSinCos","SkMatrix_setSinCos1","SkMatrix_setSkew","SkMatrix_setSkew1","SkMatrix_setTranslate","SkMemoryStream","SkMemoryStream_INHERITED","SkMemoryStream_Make","SkMemoryStream_MakeCopy","SkMemoryStream_MakeDirect","SkMemoryStream_SkMemoryStream","SkMemoryStream_SkMemoryStream1","SkMemoryStream_SkMemoryStream2","SkMemoryStream_SkMemoryStream3","SkMemoryStream_getAtPos","SkMemoryStream_getLength","SkMemoryStream_getMemoryBase","SkMemoryStream_getPosition","SkMemoryStream_isAtEnd","SkMemoryStream_move","SkMemoryStream_peek","SkMemoryStream_read","SkMemoryStream_rewind","SkMemoryStream_seek","SkMemoryStream_setData","SkMemoryStream_setMemory","SkMemoryStream_setMemoryOwned","SkMemoryStream_skipToAlign4","SkMesh","SkMipmap","SkMipmapMode","SkMutex","SkNVRefCnt","SkNoncopyable","SkOnce","SkOnce_State","SkOpBuilder","SkOpBuilder_add","SkOpBuilder_resolve","SkOpenTypeSVGDecoder","SkOrderedFontMgr","SkOrderedFontMgr_SkOrderedFontMgr","SkOrderedFontMgr_SkOrderedFontMgr_destructor","SkOrderedFontMgr_append","SkOrderedFontMgr_onCountFamilies","SkOrderedFontMgr_onCreateStyleSet","SkOrderedFontMgr_onGetFamilyName","SkOrderedFontMgr_onLegacyMakeTypeface","SkOrderedFontMgr_onMakeFromData","SkOrderedFontMgr_onMakeFromFile","SkOrderedFontMgr_onMakeFromStreamArgs","SkOrderedFontMgr_onMakeFromStreamIndex","SkOrderedFontMgr_onMatchFamily","SkOrderedFontMgr_onMatchFamilyStyle","SkOrderedFontMgr_onMatchFamilyStyleCharacter","SkPDFArray","SkPDF_AttributeList","SkPDF_AttributeList_AttributeList","SkPDF_AttributeList_AttributeList_destructor","SkPDF_AttributeList_appendFloat","SkPDF_AttributeList_appendFloatArray","SkPDF_AttributeList_appendInt","SkPDF_AttributeList_appendName","SkPDF_AttributeList_appendNodeIdArray","SkPDF_Metadata","SkPDF_Metadata_CompressionLevel","SkPDF_Metadata_Subsetter","SkPDF_StructureElementNode","SkPMColor","SkPaint","SkPaint_Cap","SkPaint_Join","SkPaint_SkPaint","SkPaint_SkPaint1","SkPaint_SkPaint2","SkPaint_SkPaint3","SkPaint_SkPaint_destructor","SkPaint_Style","SkPaint__bindgen_ty_1","SkPaint__bindgen_ty_1__bindgen_ty_1","SkPaint_asBlendMode","SkPaint_canComputeFastBounds","SkPaint_computeFastBounds","SkPaint_doComputeFastBounds","SkPaint_getBlendMode_or","SkPaint_isSrcOver","SkPaint_kCapCount","SkPaint_kJoinCount","SkPaint_kStyleCount","SkPaint_nothingToDraw","SkPaint_refBlender","SkPaint_refColorFilter","SkPaint_refImageFilter","SkPaint_refMaskFilter","SkPaint_refPathEffect","SkPaint_refShader","SkPaint_reset","SkPaint_setARGB","SkPaint_setAlphaf","SkPaint_setBlendMode","SkPaint_setBlender","SkPaint_setColor","SkPaint_setColor1","SkPaint_setColorFilter","SkPaint_setImageFilter","SkPaint_setMaskFilter","SkPaint_setPathEffect","SkPaint_setShader","SkPaint_setStroke","SkPaint_setStrokeCap","SkPaint_setStrokeJoin","SkPaint_setStrokeMiter","SkPaint_setStrokeWidth","SkPaint_setStyle","SkPaint_sk_is_trivially_relocatable","SkParsePath","SkParsePath_FromSVGString","SkParsePath_PathEncoding","SkParsePath_ToSVGString","SkPatch3D","SkPatch3D_SkPatch3D","SkPatch3D_dotWith","SkPatch3D_reset","SkPatch3D_transform","SkPath","SkPath1DPathEffect_Style","SkPathBuilder","SkPathBuilder_ArcSize","SkPathBuilder_IsA","SkPathBuilder_SkPathBuilder","SkPathBuilder_SkPathBuilder1","SkPathBuilder_SkPathBuilder2","SkPathBuilder_SkPathBuilder_destructor","SkPathBuilder_addArc","SkPathBuilder_addCircle","SkPathBuilder_addOval","SkPathBuilder_addPath","SkPathBuilder_addPolygon","SkPathBuilder_addRRect","SkPathBuilder_addRect","SkPathBuilder_arcTo","SkPathBuilder_arcTo1","SkPathBuilder_arcTo2","SkPathBuilder_close","SkPathBuilder_computeBounds","SkPathBuilder_conicTo","SkPathBuilder_cubicTo","SkPathBuilder_detach","SkPathBuilder_incReserve","SkPathBuilder_lineTo","SkPathBuilder_moveTo","SkPathBuilder_offset","SkPathBuilder_polylineTo","SkPathBuilder_quadTo","SkPathBuilder_rConicTo","SkPathBuilder_rCubicTo","SkPathBuilder_rLineTo","SkPathBuilder_rQuadTo","SkPathBuilder_reset","SkPathBuilder_snapshot","SkPathDirection","SkPathEffect","SkPathEffect","SkPathEffect_DashInfo","SkPathEffect_DashType","SkPathEffect_Deserialize","SkPathEffect_INHERITED","SkPathEffect_MakeCompose","SkPathEffect_MakeSum","SkPathEffect_asADash","SkPathEffect_filterPath","SkPathEffect_filterPath1","SkPathEffect_needsCTM","SkPathFillType","SkPathMeasure","SkPathMeasure_MatrixFlags","SkPathMeasure_MatrixFlags_kGetPosAndTan_MatrixFlag","SkPathMeasure_MatrixFlags_kGetPosition_MatrixFlag","SkPathMeasure_MatrixFlags_kGetTangent_MatrixFlag","SkPathMeasure_SkPathMeasure","SkPathMeasure_SkPathMeasure1","SkPathMeasure_SkPathMeasure_destructor","SkPathMeasure_getLength","SkPathMeasure_getMatrix","SkPathMeasure_getPosTan","SkPathMeasure_getSegment","SkPathMeasure_isClosed","SkPathMeasure_nextContour","SkPathMeasure_setPath","SkPathOp","SkPathRef","SkPathRef_ConicWeightsArray","SkPathRef_CreateEmpty","SkPathRef_CreateTransformedCopy","SkPathRef_Iter","SkPathRef_Iter_Iter","SkPathRef_Iter_Iter1","SkPathRef_Iter_next","SkPathRef_Iter_peek","SkPathRef_Iter_setPathRef","SkPathRef_PointsArray","SkPathRef_Rewind","SkPathRef_SerializationOffsets","SkPathRef_SkPathRef_destructor","SkPathRef_VerbsArray","SkPathRef__bindgen_ty_1","SkPathRef__bindgen_ty_2","SkPathRef_addGenIDChangeListener","SkPathRef_approximateBytesUsed","SkPathRef_dataMatchesVerbs","SkPathRef_genID","SkPathRef_genIDChangeListenerCount","SkPathRef_getRRect","SkPathRef_interpolate","SkPathRef_isRRect","SkPathRef_isValid","SkPathRef_kEmptyGenID","SkPathRef_kMinSize","SkPathRef_reset","SkPathSegmentMask","SkPathSegmentMask_kConic_SkPathSegmentMask","SkPathSegmentMask_kCubic_SkPathSegmentMask","SkPathSegmentMask_kLine_SkPathSegmentMask","SkPathSegmentMask_kQuad_SkPathSegmentMask","SkPathVerb","SkPath_AddPathMode","SkPath_ArcSize","SkPath_Circle","SkPath_ConvertConicToQuads","SkPath_IsCubicDegenerate","SkPath_IsLineDegenerate","SkPath_IsQuadDegenerate","SkPath_Iter","SkPath_Iter_Iter","SkPath_Iter_Iter1","SkPath_Iter_isClosedContour","SkPath_Iter_next","SkPath_Iter_setPath","SkPath_Make","SkPath_Oval","SkPath_Oval1","SkPath_Polygon","SkPath_RRect","SkPath_RRect1","SkPath_RRect2","SkPath_RangeIter","SkPath_RawIter","SkPath_RawIter_next","SkPath_RawIter_setPath","SkPath_Rect","SkPath_SegmentMask","SkPath_SegmentMask_kConic_SegmentMask","SkPath_SegmentMask_kCubic_SegmentMask","SkPath_SegmentMask_kLine_SegmentMask","SkPath_SegmentMask_kQuad_SegmentMask","SkPath_SkPath","SkPath_SkPath1","SkPath_SkPath_destructor","SkPath_Verb","SkPath_addArc","SkPath_addCircle","SkPath_addOval","SkPath_addOval1","SkPath_addPath","SkPath_addPath1","SkPath_addPoly","SkPath_addRRect","SkPath_addRRect1","SkPath_addRect","SkPath_addRoundRect","SkPath_addRoundRect1","SkPath_approximateBytesUsed","SkPath_arcTo","SkPath_arcTo1","SkPath_arcTo2","SkPath_close","SkPath_computeTightBounds","SkPath_conicTo","SkPath_conservativelyContainsRect","SkPath_contains","SkPath_countPoints","SkPath_countVerbs","SkPath_cubicTo","SkPath_dump","SkPath_dumpArrays","SkPath_getBounds","SkPath_getGenerationID","SkPath_getLastPt","SkPath_getPoint","SkPath_getPoints","SkPath_getSegmentMasks","SkPath_getVerbs","SkPath_incReserve","SkPath_interpolate","SkPath_isConvex","SkPath_isEmpty","SkPath_isFinite","SkPath_isInterpolatable","SkPath_isLastContourClosed","SkPath_isLine","SkPath_isOval","SkPath_isRRect","SkPath_isRect","SkPath_isValid","SkPath_lineTo","SkPath_moveTo","SkPath_offset","SkPath_quadTo","SkPath_rArcTo","SkPath_rConicTo","SkPath_rCubicTo","SkPath_rLineTo","SkPath_rMoveTo","SkPath_rQuadTo","SkPath_readFromMemory","SkPath_reset","SkPath_reverseAddPath","SkPath_rewind","SkPath_serialize","SkPath_setLastPt","SkPath_sk_is_trivially_relocatable","SkPath_swap","SkPath_transform","SkPath_writeToMemory","SkPicture","SkPictureRecorder","SkPictureRecorder_FinishFlags","SkPictureRecorder_SkPictureRecorder","SkPictureRecorder_SkPictureRecorder_destructor","SkPictureRecorder_beginRecording","SkPictureRecorder_beginRecording1","SkPictureRecorder_finishRecordingAsDrawable","SkPictureRecorder_finishRecordingAsPicture","SkPictureRecorder_finishRecordingAsPictureWithCull","SkPictureRecorder_getRecordingCanvas","SkPicture_AbortCallback","SkPicture_MakeFromData","SkPicture_MakeFromData1","SkPicture_MakeFromStream","SkPicture_MakePlaceholder","SkPicture_SkPicture_destructor","SkPicture_makeShader","SkPicture_serialize","SkPicture_serialize1","SkPixelGeometry","SkPixelRef","SkPixelRef_INHERITED","SkPixelRef_Mutability","SkPixelRef_SkPixelRef","SkPixelRef_SkPixelRef_destructor","SkPixelRef_addGenIDChangeListener","SkPixelRef_android_only_reset","SkPixelRef_getGenerationID","SkPixelRef_notifyPixelsChanged","SkPixelRef_setImmutable","SkPixmap","SkPixmap_colorSpace","SkPixmap_computeIsOpaque","SkPixmap_erase","SkPixmap_erase1","SkPixmap_extractSubset","SkPixmap_getAlphaf","SkPixmap_getColor","SkPixmap_getColor4f","SkPixmap_readPixels","SkPixmap_refColorSpace","SkPixmap_reset","SkPixmap_reset1","SkPixmap_reset2","SkPixmap_scalePixels","SkPixmap_setColorSpace","SkPngChunkReader","SkPngEncoder_FilterFlag","SkPoint","SkPoint3","SkPoint3_Length","SkPoint3_normalize","SkPoint_Length","SkPoint_Normalize","SkPoint_normalize","SkPoint_scale","SkPoint_setLength","SkPoint_setLength1","SkPoint_setNormalize","SkPreMultiplyARGB","SkPreMultiplyColor","SkPromiseImageTexture","SkRGBA4f_FromBytes_RGBA","SkRGBA4f_FromColor","SkRGBA4f_FromPMColor","SkRGBA4f_toBytes_RGBA","SkRGBA4f_toSkColor","SkRGBToHSV","SkRRect","SkRRect_Corner","SkRRect_Type","SkRRect_contains","SkRRect_dump","SkRRect_dumpToString","SkRRect_inset","SkRRect_isValid","SkRRect_kSizeInMemory","SkRRect_readFromMemory","SkRRect_setNinePatch","SkRRect_setOval","SkRRect_setRectRadii","SkRRect_setRectXY","SkRRect_transform","SkRRect_writeToMemory","SkRSXform","SkRSXform_toQuad","SkRSXform_toTriStrip","SkRasterHandleAllocator","SkRasterHandleAllocator_Handle","SkRasterHandleAllocator_MakeCanvas","SkRasterHandleAllocator_Rec","SkReadBuffer","SkRecord","SkRecorder","SkRect","SkRect_dump","SkRect_intersect","SkRect_intersect1","SkRect_join","SkRect_setBoundsCheck","SkRect_setBoundsNoCheck","SkRect_toQuad","SkRefCnt","SkRefCntBase","SkRefCntBase__bindgen_vtable","SkRegion","SkRegion_Cliperator","SkRegion_Cliperator_Cliperator","SkRegion_Cliperator_next","SkRegion_Iterator","SkRegion_Iterator_Iterator","SkRegion_Iterator_next","SkRegion_Iterator_reset","SkRegion_Iterator_rewind","SkRegion_Op","SkRegion_RunHead","SkRegion_RunType","SkRegion_SkRegion","SkRegion_SkRegion1","SkRegion_SkRegion2","SkRegion_SkRegion_destructor","SkRegion_Spanerator","SkRegion_Spanerator_Spanerator","SkRegion_Spanerator_next","SkRegion_computeRegionComplexity","SkRegion_contains","SkRegion_contains1","SkRegion_contains2","SkRegion_getBoundaryPath","SkRegion_intersects","SkRegion_intersects1","SkRegion_kOpCnt","SkRegion_kOpCount","SkRegion_kRectRegionRuns","SkRegion_kRectRunHeadPtr","SkRegion_op","SkRegion_op1","SkRegion_op2","SkRegion_readFromMemory","SkRegion_setEmpty","SkRegion_setPath","SkRegion_setRect","SkRegion_setRects","SkRegion_setRegion","SkRegion_sk_is_trivially_relocatable","SkRegion_swap","SkRegion_translate","SkRegion_writeToMemory","SkRuntimeEffect","SkRuntimeEffect_Child","SkRuntimeEffect_ChildPtr","SkRuntimeEffect_ChildPtr_ChildPtr","SkRuntimeEffect_ChildPtr_blender","SkRuntimeEffect_ChildPtr_colorFilter","SkRuntimeEffect_ChildPtr_shader","SkRuntimeEffect_ChildPtr_sk_is_trivially_relocatable","SkRuntimeEffect_ChildPtr_type","SkRuntimeEffect_ChildType","SkRuntimeEffect_Flags","SkRuntimeEffect_Flags_kAllowBlender_Flag","SkRuntimeEffect_Flags_kAllowColorFilter_Flag","SkRuntimeEffect_Flags_kAllowShader_Flag","SkRuntimeEffect_Flags_kAlphaUnchanged_Flag","SkRuntimeEffect_Flags_kAlwaysOpaque_Flag","SkRuntimeEffect_Flags_kSamplesOutsideMain_Flag","SkRuntimeEffect_Flags_kUsesColorTransform_Flag","SkRuntimeEffect_Flags_kUsesSampleCoords_Flag","SkRuntimeEffect_MakeForBlender","SkRuntimeEffect_MakeForColorFilter","SkRuntimeEffect_MakeForShader","SkRuntimeEffect_MakeTraced","SkRuntimeEffect_Options","SkRuntimeEffect_RegisterFlattenables","SkRuntimeEffect_Result","SkRuntimeEffect_SkRuntimeEffect_destructor","SkRuntimeEffect_TracedShader","SkRuntimeEffect_Uniform","SkRuntimeEffect_Uniform_Flags","SkRuntimeEffect_Uniform_Flags_kArray_Flag","SkRuntimeEffect_Uniform_Flags_kColor_Flag","SkRuntimeEffect_Uniform_Flags_kFragment_Flag","SkRuntimeEffect_Uniform_Flags_kHalfPrecision_Flag","SkRuntimeEffect_Uniform_Flags_kVertex_Flag","SkRuntimeEffect_Uniform_Type","SkRuntimeEffect_Uniform_sizeInBytes","SkRuntimeEffect_findChild","SkRuntimeEffect_findUniform","SkRuntimeEffect_makeBlender","SkRuntimeEffect_makeColorFilter","SkRuntimeEffect_makeColorFilter1","SkRuntimeEffect_makeColorFilter2","SkRuntimeEffect_makeImage","SkRuntimeEffect_makeShader","SkRuntimeEffect_makeShader1","SkRuntimeEffect_source","SkRuntimeEffect_uniformSize","SkSL","SkSL_DebugTrace","SkSL_Version","SkSVGCanvas","SkSVGCanvas_Make","SkSVGCanvas__bindgen_ty_1","SkSVGCanvas_kConvertTextToPaths_Flag","SkSVGCanvas_kNoPrettyXML_Flag","SkSVGCanvas_kRelativePathEncoding_Flag","SkSamplingOptions","SkScalar","SkScalerContext","SkScalerContextEffects","SkScalerContextRec","SkSerialProcs","SkShader","SkShader","SkShader_INHERITED","SkShader_isAImage","SkShader_makeWithColorFilter","SkShader_makeWithLocalMatrix","SkShadowFlags","SkShadowFlags_kAll_ShadowFlag","SkShadowFlags_kConcaveBlurOnly_ShadowFlag","SkShadowFlags_kDirectionalLight_ShadowFlag","SkShadowFlags_kGeometricOnly_ShadowFlag","SkShadowFlags_kNone_ShadowFlag","SkShadowFlags_kTransparentOccluder_ShadowFlag","SkShadowUtils","SkShadowUtils_ComputeTonalColors","SkShadowUtils_DrawShadow","SkShadowUtils_GetLocalBounds","SkSize","SkSpan","SkSpecialImage","SkStream","SkStreamAsset","SkStreamMemory","SkStream_MakeFromFile","SkStream_readPackedUInt","SkStream_readS16","SkStream_readS32","SkStream_readS8","SkStream_readScalar","SkString","SkString_Rec","SkString_Rec_Make","SkString_Rec_ref","SkString_Rec_unique","SkString_Rec_unref","SkString_SkString","SkString_SkString1","SkString_SkString2","SkString_SkString3","SkString_SkString4","SkString_SkString5","SkString_SkString6","SkString_SkString7","SkString_SkString_destructor","SkString_appendVAList","SkString_appendf","SkString_data","SkString_equals","SkString_equals1","SkString_equals2","SkString_gEmptyRec","SkString_insert","SkString_insert1","SkString_insertHex","SkString_insertS32","SkString_insertS64","SkString_insertScalar","SkString_insertU32","SkString_insertU64","SkString_insertUnichar","SkString_prependVAList","SkString_prependf","SkString_printVAList","SkString_printf","SkString_remove","SkString_reset","SkString_resize","SkString_set","SkString_set1","SkString_sk_is_trivially_relocatable","SkString_swap","SkStrings","SkStrokeRec","SkStrokeRec_GetInflationRadius","SkStrokeRec_GetInflationRadius1","SkStrokeRec_InitStyle","SkStrokeRec_SkStrokeRec","SkStrokeRec_SkStrokeRec1","SkStrokeRec_SkStrokeRec2","SkStrokeRec_Style","SkStrokeRec_applyToPaint","SkStrokeRec_applyToPath","SkStrokeRec_getInflationRadius","SkStrokeRec_getStyle","SkStrokeRec_kStyleCount","SkStrokeRec_setFillStyle","SkStrokeRec_setHairlineStyle","SkStrokeRec_setStrokeStyle","SkSurface","SkSurfaceCharacterization","SkSurfaceCharacterization_MipMapped","SkSurfaceCharacterization_Textureable","SkSurfaceCharacterization_UsesGLFBO0","SkSurfaceCharacterization_VkRTSupportsInputAttachment","SkSurfaceCharacterization_VulkanSecondaryCBCompatible","SkSurfaceCharacterization_createBackendFormat","SkSurfaceCharacterization_createColorSpace","SkSurfaceCharacterization_createFBO0","SkSurfaceCharacterization_createResized","SkSurfaceCharacterization_isCompatible","SkSurfaceProps","SkSurfaceProps_Flags","SkSurfaceProps_Flags_kAlwaysDither_Flag","SkSurfaceProps_Flags_kDynamicMSAA_Flag","SkSurfaceProps_Flags_kUseDeviceIndependentFonts_Flag","SkSurfaceProps_SkSurfaceProps","SkSurfaceProps_SkSurfaceProps1","SkSurfaceProps_SkSurfaceProps2","SkSurfaceProps_kUseDistanceFieldFonts_Flag","SkSurface_AsyncReadResult","SkSurface_BackendHandleAccess","SkSurface_BackendSurfaceAccess","SkSurface_Base","SkSurface_ContentChangeMode","SkSurface_INHERITED","SkSurface_MakeFromBackendRenderTarget","SkSurface_MakeFromBackendTexture","SkSurface_MakeNull","SkSurface_MakeRaster","SkSurface_MakeRaster1","SkSurface_MakeRasterDirect","SkSurface_MakeRasterDirect1","SkSurface_MakeRasterDirectReleaseProc","SkSurface_MakeRasterN32Premul","SkSurface_MakeRenderTarget","SkSurface_MakeRenderTarget1","SkSurface_MakeRenderTarget2","SkSurface_MakeRenderTarget3","SkSurface_ReadPixelsCallback","SkSurface_ReadPixelsContext","SkSurface_ReleaseContext","SkSurface_RenderTargetReleaseProc","SkSurface_RescaleGamma","SkSurface_RescaleMode","SkSurface_SkSurface","SkSurface_SkSurface1","SkSurface_TextureReleaseProc","SkSurface_asyncRescaleAndReadPixels","SkSurface_asyncRescaleAndReadPixelsYUV420","SkSurface_capabilities","SkSurface_characterize","SkSurface_draw","SkSurface_draw1","SkSurface_flush","SkSurface_flush1","SkSurface_flush2","SkSurface_flushAndSubmit","SkSurface_generationID","SkSurface_getBackendRenderTarget","SkSurface_getBackendTexture","SkSurface_getCanvas","SkSurface_isCompatible","SkSurface_kDiscardWrite_BackendHandleAccess","SkSurface_kFlushRead_BackendHandleAccess","SkSurface_kFlushWrite_BackendHandleAccess","SkSurface_makeImageSnapshot","SkSurface_makeImageSnapshot1","SkSurface_makeSurface","SkSurface_makeSurface1","SkSurface_notifyContentWillChange","SkSurface_peekPixels","SkSurface_readPixels","SkSurface_readPixels1","SkSurface_readPixels2","SkSurface_recorder","SkSurface_recordingContext","SkSurface_resolveMSAA","SkSurface_wait","SkSurface_writePixels","SkSurface_writePixels1","SkSwapRB","SkTDArray","SkTDStorage","SkTDStorage_SkTDStorage","SkTDStorage_SkTDStorage1","SkTDStorage_SkTDStorage2","SkTDStorage_SkTDStorage3","SkTDStorage_SkTDStorage_destructor","SkTDStorage_append","SkTDStorage_append1","SkTDStorage_append2","SkTDStorage_erase","SkTDStorage_insert","SkTDStorage_insert1","SkTDStorage_prepend","SkTDStorage_removeShuffle","SkTDStorage_reserve","SkTDStorage_reset","SkTDStorage_resize","SkTDStorage_shrink_to_fit","SkTDStorage_swap","SkTableMaskFilter","SkTableMaskFilter_Create","SkTableMaskFilter_CreateClip","SkTableMaskFilter_CreateGamma","SkTableMaskFilter_MakeClipTable","SkTableMaskFilter_MakeGammaTable","SkTextBlob","SkTextBlobBuilder","SkTextBlobBuilder_RunBuffer","SkTextBlobBuilder_SkTextBlobBuilder","SkTextBlobBuilder_SkTextBlobBuilder_destructor","SkTextBlobBuilder_allocRun","SkTextBlobBuilder_allocRunPos","SkTextBlobBuilder_allocRunPosH","SkTextBlobBuilder_allocRunRSXform","SkTextBlobBuilder_allocRunText","SkTextBlobBuilder_allocRunTextPos","SkTextBlobBuilder_allocRunTextPosH","SkTextBlobBuilder_allocRunTextRSXform","SkTextBlobBuilder_make","SkTextBlob_Deserialize","SkTextBlob_GlyphPositioning","SkTextBlob_INHERITED","SkTextBlob_Iter","SkTextBlob_Iter_ExperimentalRun","SkTextBlob_Iter_Iter","SkTextBlob_Iter_Run","SkTextBlob_Iter_experimentalNext","SkTextBlob_Iter_next","SkTextBlob_MakeFromPosText","SkTextBlob_MakeFromPosTextH","SkTextBlob_MakeFromRSXform","SkTextBlob_MakeFromText","SkTextBlob_RunRecord","SkTextBlob_getIntercepts","SkTextBlob_serialize","SkTextBlob_serialize1","SkTextEncoding","SkTextUtils","SkTextUtils_Align","SkTextUtils_Draw","SkTextUtils_GetPath","SkTextureCompressionType","SkTileMode","SkTime_DateTime","SkTime_DateTime_toISO8601","SkTraceMemoryDump","SkTrimPathEffect_Mode","SkTypeface","SkTypefaceID","SkTypeface_Equal","SkTypeface_FactoryId","SkTypeface_INHERITED","SkTypeface_LocalizedString","SkTypeface_LocalizedStrings","SkTypeface_MakeDefault","SkTypeface_MakeDeserialize","SkTypeface_MakeFromData","SkTypeface_MakeFromFile","SkTypeface_MakeFromName","SkTypeface_MakeFromStream","SkTypeface_Register","SkTypeface_SerializeBehavior","SkTypeface_SkTypeface","SkTypeface_SkTypeface_destructor","SkTypeface_Style","SkTypeface_UniqueID","SkTypeface_copyTableData","SkTypeface_countGlyphs","SkTypeface_countTables","SkTypeface_createFamilyNameIterator","SkTypeface_createScalerContext","SkTypeface_getBounds","SkTypeface_getFamilyName","SkTypeface_getKerningPairAdjustments","SkTypeface_getPostScriptName","SkTypeface_getTableData","SkTypeface_getTableSize","SkTypeface_getTableTags","SkTypeface_getUnitsPerEm","SkTypeface_getVariationDesignParameters","SkTypeface_getVariationDesignPosition","SkTypeface_makeClone","SkTypeface_onComputeBounds","SkTypeface_onCopyTableData","SkTypeface_onGetKerningPairAdjustments","SkTypeface_onOpenExistingStream","SkTypeface_openExistingStream","SkTypeface_openStream","SkTypeface_serialize","SkTypeface_serialize1","SkTypeface_textToGlyphs","SkTypeface_unicharToGlyph","SkTypeface_unicharsToGlyphs","SkUnichar","SkUnicode","SkV2","SkV3","SkV4","SkVector","SkVertices","SkVerticesPriv","SkVertices_Builder","SkVertices_BuilderFlags","SkVertices_BuilderFlags_kHasColors_BuilderFlag","SkVertices_BuilderFlags_kHasTexCoords_BuilderFlag","SkVertices_Builder_Builder","SkVertices_Builder_colors","SkVertices_Builder_detach","SkVertices_Builder_indices","SkVertices_Builder_positions","SkVertices_Builder_texCoords","SkVertices_Desc","SkVertices_MakeCopy","SkVertices_Sizes","SkVertices_VertexMode","SkVertices_approximateSize","SkWStream","SkWStream_SizeOfPackedUInt","SkWStream_SkWStream_destructor","SkWStream_flush","SkWStream_writeBigDecAsText","SkWStream_writeDecAsText","SkWStream_writeHexAsText","SkWStream_writePackedUInt","SkWStream_writeScalar","SkWStream_writeScalarAsText","SkWStream_writeStream","SkWeakRefCnt","SkWeakRefCnt_INHERITED","SkYUVAInfo","SkYUVAInfo_GetYUVALocations","SkYUVAInfo_HasAlpha","SkYUVAInfo_PlaneConfig","SkYUVAInfo_PlaneDimensions","SkYUVAInfo_PlaneSubsamplingFactors","SkYUVAInfo_Siting","SkYUVAInfo_SkYUVAInfo","SkYUVAInfo_Subsampling","SkYUVAInfo_SubsamplingFactors","SkYUVAInfo_YUVAChannels","SkYUVAInfo_YUVALocation","SkYUVAInfo_YUVALocations","SkYUVAInfo_computeTotalBytes","SkYUVAInfo_kMaxPlanes","SkYUVAInfo_kYUVAChannelCount","SkYUVAInfo_makeDimensions","SkYUVAInfo_makeSubsampling","SkYUVAInfo_toYUVALocations","SkYUVAPixmapInfo","SkYUVAPixmapInfo_DataType","SkYUVAPixmapInfo_NumChannelsAndDataType","SkYUVAPixmapInfo_PlaneConfig","SkYUVAPixmapInfo_SkYUVAPixmapInfo","SkYUVAPixmapInfo_SkYUVAPixmapInfo1","SkYUVAPixmapInfo_Subsampling","SkYUVAPixmapInfo_SupportedDataTypes","SkYUVAPixmapInfo_SupportedDataTypes_SupportedDataTypes","SkYUVAPixmapInfo_SupportedDataTypes_enableDataType","SkYUVAPixmapInfo_computeTotalBytes","SkYUVAPixmapInfo_initPixmapsFromSingleAllocation","SkYUVAPixmapInfo_isSupported","SkYUVAPixmapInfo_kDataTypeCnt","SkYUVAPixmapInfo_kMaxPlanes","SkYUVAPixmaps","SkYUVAPixmaps_Allocate","SkYUVAPixmaps_DataType","SkYUVAPixmaps_FromData","SkYUVAPixmaps_FromExternalMemory","SkYUVAPixmaps_FromExternalPixmaps","SkYUVAPixmaps_MakeCopy","SkYUVAPixmaps_RecommendedRGBAColorType","SkYUVAPixmaps_kMaxPlanes","SkYUVAPixmaps_pixmapsInfo","SkYUVAPixmaps_toYUVALocations","SkYUVColorSpace","Slight","Small","Small","SoftLight","Solid","Solver","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Some","Square","Src","Src","SrcATop","SrcIn","SrcOut","SrcOver","SrcOver","Start","Strict","Stroke","Stroke","StrokeAndFill","StrokeAndFill","SubpixelAntiAlias","SubsamplingFactors","Success","TightBounds","ToSVGString","TopDown","TopLeft","TopLeft","TopRight","TraitObject","Translate","Transparent","TriangleFan","TriangleStrip","Triangles","U8","U8CPU","UNDEFINED","UYV","UYVA","Unimplemented","Union","Union","Union","UniqueID","Unknown","Unknown","Unknown","Unorm10_Unorm2","Unorm16","Unorm8","Unpremul","UpperLeft","UpperRight","Upright","VecSink","VkCommandBuffer","VkCommandBuffer_T","VkExtent2D","VkFormat","VkOffset2D","VkPhysicalDeviceFeatures","VkPhysicalDeviceFeatures2","VkRect2D","VkRenderPass","VkRenderPass_T","Vulkan","Vulkan","WBMP","WEBP","WebGL","Winding","X8_D24_UNORM_PACK32","XOR","XOR","Xor","Xor","YUV","YUVA","YUVtoRGB","Y_UV","Y_UV_A","Y_U_V","Y_U_V_A","Y_VU","Y_VU_A","Y_V_U","Y_V_U_A","Yes","Yes","Yes","Yes","Yes","Yes","Yes","Yes","Yes","Zero","__BindgenBitfieldUnit","__BindgenUnionField","__alignment","__begin_","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_2","__bindgen_cannot_repr_c_on_empty_enum","__bindgen_cannot_repr_c_on_empty_enum","__bindgen_padding_0","__builtin_va_list","__cap_","__darwin_mbstate_t","__data","__data","__data","__data_","__data_","__end_","__end_cap_","__for_bool_","__i","__i","__i","__l","__lx","__lxx","__mask_","__mask_","__mbstate8","__mbstate8","__mbstate8","__mbstate8","__mbstate_t","__min_cap","__n_words","__off_","__off_","__off_","__r","__rep_","__rep_","__s","__seg_","__seg_","__size","__size","__size","__size_","__size_","__st_","__st_","__st_","__t","__t","__t","__t","__t","__words","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_address","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_base","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bindgen_opaque_blob","_bitfield_1","_bitfield_1","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_bitfield_align_1","_bitfield_align_1","_mbstateL","_mbstateL","_mbstateL","_mbstateL","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","_phantom_0","a","abort","accessTopLayerPixels","accessTopRasterHandle","add","add","add","addArc","addArc","addCircle","addCircle","addGenIDChangeListener","addGenIDChangeListener","addOnFlushCallbackObject","addOval","addOval","addOval1","addPath","addPath","addPath1","addPoly","addPolygon","addRRect","addRRect","addRRect1","addRect","addRect","addRoundRect","addRoundRect1","add_and_true_to_loop_condition","alias_of_table_entries","allocN32Pixels","allocPixels","allocPixels1","allocPixels2","allocPixels3","allocPixelsFlags","allocRun","allocRunPos","allocRunPosH","allocRunRSXform","allocRunText","allocRunTextPos","allocRunTextPosH","allocRunTextRSXform","allowPrivateAccess","alphaType","androidFramework_setDeviceClipRestriction","android_only_reset","append","append","append1","append2","appendFloat","appendFloatArray","appendInt","appendName","appendNodeIdArray","appendVAList","applyColorXform","applyOverrides","applyToCanvas","applyToPaint","applyToPath","approximateBytesUsed","approximateBytesUsed","approximateBytesUsed","approximateFilteredBounds","approximateSize","arcTo","arcTo","arcTo1","arcTo1","arcTo2","arcTo2","asAColorFilter","asAColorMatrix","asAColorMode","asADash","asAffine","asBlendMode","asGLFormat","asGLFormatEnum","asImage","asLegacyBitmap","asMockColorType","asMockCompressionType","as_coeff","as_mut","as_ref","assign","asyncRescaleAndReadPixels","asyncRescaleAndReadPixels","asyncRescaleAndReadPixelsYUV420","asyncRescaleAndReadPixelsYUV420","at","atSize","axis","b","beginPage","beginRecording","beginRecording1","bindgen_union_field","bindgen_union_field","blender","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","bytesPerPixel","c","canComputeFastBounds","canComputeFastBounds","capabilities","changed","channelMask","characterize","checkAsyncWorkCompletion","cleanup","clipPath","clipRRect","clipRect","clipRegion","clipShader","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","close","clusters","cmp","color","colorFilter","colorSpace","colorSpace","colorSpace","colorSpace","colorSpace","colorType","colorTypeSupportedAsImage","color_primaries","colors","compile","computeBounds","computeByteSize","computeFastBounds","computeFromT","computeIsOpaque","computeOffset","computeRegionComplexity","computeTightBounds","computeTotalBytes","computeTotalBytes","computeYFromX","concat","concat1","conicTo","conicTo","conservativelyContainsRect","contains","contains","contains","contains1","contains2","coordinateCount","coordinates","copyRange","copyTableData","copyTo","copyToAndReset","count","count","count","countFamilies","countGlyphs","countInputs","countPoints","countTables","countVerbs","createBackendFormat","createBackendTexture","createBackendTexture1","createBackendTexture2","createBackendTexture3","createBackendTexture4","createBackendTexture5","createBackendTexture6","createBackendTexture7","createColorSpace","createCompressedBackendTexture","createCompressedBackendTexture1","createCompressedBackendTexture2","createCompressedBackendTexture3","createFBO0","createFamilyNameIterator","createResized","createScalerContext","createStyleSet","cubic","cubicTo","cubicTo","current","current","current","current","current","d","data","data","dataMatchesVerbs","data_color_space","debugTrace","decomposeScale","def","default","default","default","default","default","default","default","default","default","default","default","default","deleteBackendTexture","desc","destroyDrawingManager","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","destruct","detach","detach","detach","detach","detachArenas","detachAsData","detachAsStream","disable_blend_equation_advanced","disable_discard_framebuffer","disable_dual_source_blending_support","disable_texture_storage","disallow_large_instanced_draw","doComputeFastBounds","done","dotWith","dotWithNormal","draw","draw","draw1","draw1","drawAnnotation","drawArc","drawAtlas","drawCircle","drawColor","drawDRRect","drawDrawable","drawDrawable1","drawGlyphs","drawGlyphs1","drawGlyphs2","drawImage","drawImageLattice","drawImageNine","drawImageRect","drawImageRect1","drawLine","drawMesh","drawOval","drawPaint","drawPatch","drawPath","drawPicture","drawPoint","drawPoints","drawRRect","drawRect","drawRegion","drawRoundRect","drawSimpleText","drawTextBlob","drawVertices","drawVertices1","drawingManager","dump","dump","dump","dump","dump","dump","dumpArrays","dumpJSON","dumpJSON","dumpMemoryStatistics","dumpToString","e","effect","emulate_abs_int_function","enableDataType","endPage","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals1","equals2","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erase","erase","erase","erase1","erase1","eraseColor","eraseColor1","errorText","experimentalNext","experimental_DrawEdgeAAImageSet","experimental_DrawEdgeAAQuad","extent","extractAlpha","extractSubset","extractSubset","f","fAAFlags","fABits","fActivelyRecording","fAdditionalNodeIds","fAdvance","fAllocator","fAllowMSAAOnNewIntel","fAllowMultipleGlyphCacheTextures","fAllowPathMaskCaching","fAlpha","fAlpha","fAlphaType","fAlphaType","fAlt","fAlwaysUseTexStorageWhenAvailable","fAntiAlias","fAscent","fAttributes","fAttrs","fAuthor","fAvgCharWidth","fAvoidStencilBuffers","fAxis","fBBH","fBBits","fBX","fBY","fBackImage","fBackdrop","fBackend","fBackend","fBackend","fBackend","fBackend","fBackendFormat","fBaseDevice","fBaseMipMapLevel","fBeginningOfData","fBindingsExported","fBitfields","fBitfieldsUInt","fBitsPerComponent","fBlend","fBlender","fBorderColorInvalid","fBottom","fBottom","fBottom","fBounds","fBounds","fBounds","fBounds","fBounds","fBounds","fBounds","fBounds","fBoundsOnce","fBufferMapThreshold","fBytesWrittenBeforeTail","fCacheID","fCacheMaxResourceBytes","fCamera","fCanvas","fCap","fCapHeight","fCapType","fCapacity","fCharacterization","fChild","fChildVector","fClip","fClipRestrictionRect","fClipRestrictionSaveCount","fCloseLine","fCoeff","fCollectionIndex","fColor","fColor4f","fColorAttachmentIndex","fColorDepth","fColorFilter","fColorInfo","fColorSpace","fColorSpace","fColorType","fColorType","fColorType","fColorType","fColors","fColors","fCompatibleRenderPass","fCompressedOptions","fCompressionLevel","fCompressionType","fCompressionType","fConfigOptions","fConicWeight","fConicWeights","fConicWeights","fConicWeights","fContext","fContext","fContextDeleteContext","fContextDeleteProc","fContextInfo","fContour","fContrast","fConvexity","fCount","fCreation","fCreator","fCropRect","fCullRect","fCurrScanline","fCurrentRunBuffer","fDContext","fDDLRecording","fData","fData","fData","fDataType","fDataType","fDataTypeSupport","fDay","fDayOfWeek","fDeferredBounds","fDeferredSaveCount","fDesc","fDescent","fDevice","fDevice","fDimensions","fDimensions","fDir","fDisableCoverageCountingPaths","fDisableDistanceFieldPaths","fDisableDriverCorrectnessWorkarounds","fDisableGpuYUVConversion","fDisableTessellationPathRenderer","fDiscard","fDisposalMethod","fDistance","fDither","fDoManualMipmapping","fDone","fDone","fDone","fDrawBounds","fDrawInstancedSupport","fDrawable","fDriverBugWorkarounds","fDstInfo","fDstProfile","fDstRect","fDstXformAlphaFormat","fDstXformFormat","fDualSourceBlendingSupport","fDuration","fEdging","fElems","fEnableExperimentalHardwareTessellation","fEncodedInfo","fEncoding","fEncodingQuality","fEnd","fExecutor","fExecutor","fExperimentalBackdropScale","fFBOID","fFailTextureAllocations","fFillType","fFillType","fFinishedContext","fFinishedProc","fFirstDirection","fFlags","fFlags","fFlags","fFlatInterpolationSupport","fForceClose","fFormat","fFormat","fFormat","fFormat","fFrameIndex","fFrameRect","fFramebufferOnly","fFromXYZD50","fFullyReceived","fGBits","fGLFormat","fGLInfo","fGLInfo","fGX","fGY","fGlyphCacheTextureMaximumBytes","fGlyphCount","fGlyphIndices","fGlyphRecs","fGlyphsAsPathsFontSize","fGrayBits","fGrayscale","fHalfFloatVertexAttributeSupport","fHandle","fHasAlphaWithinBounds","fHasClip","fHead","fHeight","fHeight","fHeight","fHeight","fHeight","fHinting","fHour","fHueMethod","fID","fID","fID","fID","fImage","fImage","fImageFilter","fImageFilter","fImageInfo","fImpl","fInPremul","fIndex","fIndexCount","fIndices","fInfo","fInfo","fInfo","fInfo","fInfo","fInitialRec","fInitialized","fIntegerSupport","fIntermediateFanIndices","fInternalMultisampleCount","fIntervals","fInvTransferFn","fInvertStyle","fIsA","fIsACCW","fIsAStart","fIsFixedPitch","fIsMipMapped","fIsProtected","fIsStencilFormat","fIsTextureable","fIsValid","fIsValid","fIsValid","fIsValid","fIsVolatile","fIsVolatile","fIter","fIter","fIter","fJoin","fJoinType","fKeywords","fLabel","fLang","fLanguage","fLastMoveIndex","fLastMovePoint","fLastMoveToIndex","fLastPt","fLastRun","fLayer","fLazyDstFieldsOnce","fLazyProxyData","fLeading","fLeft","fLeft","fLeft","fLength","fLevelCount","fList","fListeners","fLoc","fLocation","fMCRec","fMCRecStorage","fMCStack","fMagFilter","fMapBufferFlags","fMaskFilter","fMat","fMat","fMat","fMatrix","fMatrix","fMatrixIndex","fMaxAniso","fMaxCachedVulkanSecondaryCommandBuffers","fMaxCharWidth","fMaxFragmentSamplers","fMaxLOD","fMaxMipmapLevel","fMaxRenderTargetSize","fMaxTextureSize","fMaxTextureSizeOverride","fMaxVertexAttributes","fMaxVertexSamplers","fMaxWindowRectangles","fMetrics","fMinDistanceFieldFontSize","fMinFilter","fMinLOD","fMinute","fMipmapSupport","fMipmapped","fMipmapped","fMipmapped","fMips","fMiterLimit","fMiterLimit","fMock","fMockInfo","fMockInfo","fMode","fModified","fMonth","fMoveTo","fMutableState","fMutableState","fMutex","fNeedClose","fNeedToUpdate","fNeedsMoveVerb","fNeedsRewind","fNext","fNodeId","fNonsamplerState","fNumSemaphores","fObserver","fOffset","fOps","fOptions","fOrientation","fOrigin","fOrigin","fOrigin","fOrigin","fPDFA","fPadding","fPaint","fPaint","fPalette","fParams","fPath","fPathEffect","fPathRef","fPathRefs","fPersistentCache","fPhase","fPixelGeometry","fPixelRef","fPixels","fPixels","fPixmap","fPlaceholder","fPlaneConfig","fPlaneFormats","fPlaneInfos","fPlanes","fPoints","fPositions","fPreferExternalImagesOverES3","fPriorFrame","fProc","fProducer","fProfile","fProfile","fProgramData","fProps","fProtected","fProtected","fProtected","fProtected","fProtected","fPtIndex","fPtr","fPtr","fPtr","fPtr","fPts","fPts","fPts","fQuickRejectBounds","fRBits","fRX","fRY","fRadii","fRasterDPI","fRec","fRec","fRecord","fRecordTimeAllocator","fRecordTimeAllocator","fRecordTimeSubRunAllocator","fRecordTimeSubRunAllocator","fRecorder","fRect","fRect","fRect","fRectTypes","fReduceOpsTaskSplitting","fReducedShaderVariations","fRefCnt","fRefCnt","fRefCnt","fReleaseCtx","fReleaseProc","fReleaseProc","fReleaseProcContext","fRenderability","fReplayDest","fRequiredFrame","fResScale","fResetTimestamp","fRgn","fRight","fRight","fRight","fRowBytes","fRowBytes","fRowBytes","fRunCount","fRunHead","fRunRecord","fRuns","fRuns","fRuntimeProgramCacheSize","fSCos","fSSin","fSampleCnt","fSampleCnt","fSampleCount","fSamplerOverriddenState","fSaveCount","fSaveCount","fSaveLayerFlags","fScaleX","fScratchGlyphRunBuilder","fSecond","fSecondaryCommandBuffer","fSegmentMask","fShader","fShaderCacheStrategy","fShaderDerivativeSupport","fShaderErrorHandler","fSignalSemaphores","fSitingX","fSitingY","fSize","fSize","fSize","fSize","fSize","fSizeOfT","fSkewX","fSkipGLErrorChecks","fSrcRect","fSrcXformFormat","fStandard","fStartedIncrementalDecode","fState","fStencilBits","fStorage","fStorage","fStorage","fStorageSize","fStorageUsed","fStream","fStrikeoutPosition","fStrikeoutThickness","fString","fStrings","fStrokeAndFill","fStructureElementTreeRoot","fStyle","fStyle","fStyle","fSubject","fSubmittedContext","fSubmittedProc","fSubsampling","fSubset","fSubsetter","fSupportBilerpFromGlyphAtlas","fSuppressMipmapSupport","fSuppressPrints","fSurface","fSurfaceBase","fSurfaceProps","fSwizzleIsRGBA","fTValue","fTail","fTarget","fTarget","fTargetProxy","fTexs","fTexturable","fTextureOrigin","fTextureOrigin","fTextureType","fTextureType","fTextures","fTimeZoneMinutes","fTitle","fToXYZD50","fToXYZD50Hash","fTop","fTop","fTop","fTransferFn","fTransferFnHash","fTx","fTy","fType","fType","fType","fTypeMask","fTypeString","fTypeface","fTypeface","fU","fUnderlinePosition","fUnderlineThickness","fUniqueID","fUniqueID","fUniqueID","fUniqueID","fUniqueID","fUseDrawInsteadOfClear","fUsesGLFBO0","fUsingCallbackForHandleFrameIndex","fV","fValid","fValue","fVariationDesignPosition","fVerb","fVerbStop","fVerbStop","fVerbs","fVerbs","fVerbs","fVertexCount","fVertices","fVkInfo","fVkRTSupportsInputAttachment","fVulkanSecondaryCBCompatible","fWX","fWY","fWeights","fWidth","fWidth","fWidth","fWidth","fWidth","fWidth","fWidth","fWrapS","fWrapT","fX","fX","fX","fX","fXCount","fXDivs","fXHeight","fXMax","fXMin","fXformTime","fY","fY","fY","fY","fYCount","fYDivs","fYUVAInfo","fYUVAInfo","fYUVAInfo","fYUVAInfo","fYUVColorSpace","fYear","fZ","fZenith","fZeroInitialized","filter","filterBounds","filterColor","filterColor4f","filterPath","filterPath1","findChild","findUniform","finishRecordingAsDrawable","finishRecordingAsPicture","finishRecordingAsPictureWithCull","flags","flags","flush","flush","flush","flush1","flush1","flush2","flush2","flushAndSubmit","flushAndSubmit","flush_on_framebuffer_change","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_trait","fn_trait","font","forceUnoptimized","force_update_scissor_state_when_binding_fbo0","freeGpuResources","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","g","gammaCloseToSRGB","gammaCloseToSRGB","gammaIsLinear","gamutTransformTo","genID","genIDChangeListenerCount","generationID","get","get","getAddr","getAlphaf","getAtPos","getBackendFormat","getBackendFormat","getBackendFormat","getBackendFormat","getBackendRenderTarget","getBackendTexture","getBaseProps","getBlendMode_or","getBoundaryPath","getBounds","getBounds","getBounds","getBounds","getBounds1","getCanvas","getCanvas","getColor","getColor4f","getDeviceClipBounds","getFamilyName","getFamilyName","getFrameInfo","getGLFramebufferInfo","getGLTextureInfo","getGenerationID","getGenerationID","getGenerationID","getGenerationID","getImage","getImage1","getInflationRadius","getInput","getIntercepts","getIntercepts","getKerningPairAdjustments","getLastPt","getLength","getLocalClipBounds","getLocalToDevice","getMatrix","getMatrix","getMatrix","getMaxScale","getMetrics","getMinMaxScales","getMinScale","getMockRenderTargetInfo","getMockTextureInfo","getPath","getPaths","getPixels","getPixels","getPoint","getPoints","getPos","getPosTan","getPosTan","getPostScriptName","getProps","getRRect","getRecordingCanvas","getResourceCacheLimit","getResourceCacheLimits","getResourceCachePurgeableBytes","getResourceCacheUsage","getRowMajor","getSaveCount","getScalarT","getScanlines","getSegment","getSegment","getSegmentMasks","getStyle","getSurface","getTableData","getTableSize","getTableTags","getTextBlobRedrawCoordinator","getTextBlobRedrawCoordinator1","getTopProps","getTotalMatrix","getTypefaceOrDefault","getUnitsPerEm","getVariationDesignParameters","getVariationDesignPosition","getVerbs","getWidthsBounds","getXPos","getYUVAPlanes","getYUVAPlanes","get_bit","glTextureParametersModified","gl_clear_broken","glyphs","glyphs","grid_16","grid_16","grid_8","grid_8","grid_points","grid_points","has","hasMipmaps","has_A2B","has_B2A","has_CICP","has_toXYZD50","has_trc","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","imageInfo","incReserve","incReserve","index","index","index","indices","init","initPixmapsFromSingleAllocation","input_channels","input_channels","input_curves","input_curves","insert","insert","insert1","insert1","insertHex","insertS32","insertS64","insertScalar","insertU32","insertU64","insertUnichar","inset","installMaskPixels","installPixels","installPixels1","interpolate","interpolate","intersect","intersect","intersect1","intersects","intersects1","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","invTransferFn","invalidate","invalidate","invalidate","invert","isAImage","isAlphaOnly","isAlphaUnchanged","isClosed","isClosedContour","isColorFilterNode","isCompatible","isCompatible","isConvex","isDraw","isEmpty","isFinite","isImmutable","isInterpolatable","isLastContourClosed","isLine","isMockStencilFormat","isNumericalTransferFn","isOval","isProtected","isProtected","isRRect","isRRect","isRect","isSRGB","isSameTexture","isSimilarity","isSrcOver","isSupported","isValid","isValid","isValid","is_even_odd","is_inverse","is_opaque","join","join","k100","k2D","k300","k410","k411","k420","k420","k422","k422","k440","k444","k444","k565_Color","kA","kA16_float_SkColorType","kA16_unorm_SkColorType","kABGR_4444","kARGB_4444","kARGB_4444_SkColorType","kAll","kAll_GrBackendState","kAlpha_16","kAlpha_8","kAlpha_8_SkColorType","kAlpha_8xxx","kAlpha_F16","kAlpha_F32xxx","kAlpha_SkColorChannelFlag","kAvg","kBGRA_1010102","kBGRA_1010102_SkColorType","kBGRA_4444","kBGRA_8888","kBGRA_8888_SkColorType","kBGRA_Color","kBGRX_Color","kBGR_101010x_SkColorType","kBGR_101010x_XR_SkColorType","kBGR_565","kBGR_Color","kBGR_H_SkPixelGeometry","kBGR_V_SkPixelGeometry","kBack_IterStart","kBetweenPages_State","kBinary_Alpha","kBlack_Weight","kBlue_SkColorChannelFlag","kBold_Weight","kClosed_State","kCondensed_Width","kConvertTextToPaths_Flag","kDash_DashType","kDecodeRow_XformTime","kEmptyGenID","kExpanded_Width","kExternal","kExtraBlack_Weight","kExtraBold_Weight","kExtraCondensed_Width","kExtraExpanded_Width","kExtraLight_Weight","kFloat","kFront_IterStart","kFullLayer_SaveLayerStrategy","kGlyphID","kGrayAlpha_88","kGrayAlpha_Color","kGrayAlpha_SkColorChannelFlags","kGray_8","kGray_8_SkColorType","kGray_8xxx","kGray_Color","kGray_F16","kGray_SkColorChannelFlag","kGreen_SkColorChannelFlag","kHard_ClipEdgeStyle","kHarfbuzz_Subsetter","kImmutable","kInPage_State","kInvertedCMYK_Color","kInvisible_Weight","kIsA_JustMoves","kIsA_MoreThanMoves","kIsA_Oval","kIsA_RRect","kIsFinite_SerializationShift","kLast","kLast","kLast","kLastEnum_SkColorType","kLegacyIsOval_SerializationShift","kLegacyIsRRect_SerializationShift","kLegacyRRectOrOvalIsCCW_SerializationShift","kLegacyRRectOrOvalStartIdx_SerializationShift","kLight_Weight","kLinear","kLinear","kMSAA","kMedium_Weight","kMinSize","kMutable","kN32_SkColorType","kNaN_Constructor","kNearest","kNo","kNo","kNo","kNo","kNo","kNo","kNo","kNo","kNoLayer_SaveLayerStrategy","kNoPrettyXML_Flag","kNo_XformTime","kNonMSAA","kNone","kNone","kNone_DashType","kNone_ShaderOverrideOpacity","kNormal_Weight","kNormal_Width","kNotOpaque_ShaderOverrideOpacity","kOpaque_Alpha","kOpaque_ShaderOverrideOpacity","kPaeth","kPalette_Color","kPalette_XformTime","kR16G16B16A16_unorm_SkColorType","kR16G16_float_SkColorType","kR16G16_unorm_SkColorType","kR8G8_unorm_SkColorType","kR8_unorm_SkColorType","kRGBA_1010102","kRGBA_1010102_SkColorType","kRGBA_16161616","kRGBA_8888","kRGBA_8888_SRGB","kRGBA_8888_SkColorType","kRGBA_Color","kRGBA_F16","kRGBA_F16Norm_SkColorType","kRGBA_F16_Clamped","kRGBA_F16_SkColorType","kRGBA_F32","kRGBA_F32_SkColorType","kRGBA_SkColorChannelFlags","kRGB_101010x_SkColorType","kRGB_565_SkColorType","kRGB_888","kRGB_888x","kRGB_888x_SkColorType","kRGB_Color","kRGB_H_SkPixelGeometry","kRGB_SkColorChannelFlags","kRGB_V_SkPixelGeometry","kRG_1616","kRG_88","kRG_F16","kRG_SkColorChannelFlags","kRO_LegacyBitmapMode","kR_16","kR_8","kR_8xxx","kR_F16","kRectangle","kRed_SkColorChannelFlag","kRelativePathEncoding_Flag","kRepeatedCubic","kRepeatedLinear","kSRGBA_8888_SkColorType","kSRGBUnorm","kSegmentMask_SerializationShift","kSemiBold_Weight","kSemiCondensed_Width","kSemiExpanded_Width","kSfntly_Subsetter","kSoft_ClipEdgeStyle","kSrc","kSub","kTemporarilyImmutable","kThin_Weight","kU","kUTF16","kUTF32","kUTF8","kUltraCondensed_Width","kUltraExpanded_Width","kUninitialized_Constructor","kUnknown","kUnknown","kUnknown","kUnknown_SkColorType","kUnknown_SkPixelGeometry","kUnorm","kUnpremul_Alpha","kUp","kV","kXAlpha_Color","kY","kYCCK_Color","kYUVA_Color","kYUV_Color","kYes","kYes","kYes","kYes","kYes","kYes","kYes","kYes","kZero","legacyMakeTypeface","lineTo","lineTo","m_data","m_data","m_flush","m_isEof","m_length","m_length","m_read","m_seekAbsolute","m_seekRelative","m_write","make","makeAlphaType","makeBlender","makeClone","makeColorFilter","makeColorFilter1","makeColorFilter2","makeColorSpace","makeColorSpace","makeColorSpace","makeColorSpin","makeColorType","makeColorTypeAndColorSpace","makeComposed","makeDimensions","makeFromData","makeFromFile","makeFromStream","makeFromStream1","makeImage","makeImageSnapshot","makeImageSnapshot1","makeLinearGamma","makeNonTextureImage","makePictureSnapshot","makePromiseTexture","makeRasterImage","makeRawShader","makeRawShader1","makeRawShader2","makeRawShader3","makeSRGBGamma","makeShader","makeShader","makeShader","makeShader","makeShader1","makeShader1","makeShader1","makeShader2","makeShader2","makeShader3","makeShader3","makeSubsampling","makeSurface","makeSurface","makeSurface1","makeTexture2D","makeWithColorFilter","makeWithLocalMatrix","makeWithLocalMatrix","makeWithSize","makeYUVAPromiseTexture","map","mapHomogeneousPoints","mapHomogeneousPoints1","mapPoints","mapRadius","mapRect","mapRectScaleTranslate","mapVectors","mapXY","matchFamily","matchFamilyStyle","matchFamilyStyleCharacter","matchStyleCSS3","matrix","matrix","matrix_channels","matrix_channels","matrix_coefficients","matrix_curves","matrix_curves","max","maxAniso","maxRenderTargetSize","maxTextureSize","maxVersionAllowed","max_fragment_uniform_vectors_32","max_msaa_sample_count_4","mbstate_t","measureText","min","mipmap","moveTo","moveTo","name","name","name","needsCTM","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new1","new2","new2","new2","new2","new2","new2","new2","new2","new2","new2","new2","new2","new2","new2","new2","new2","new3","new3","new3","new3","new3","new3","new3","new3","new3","new3","new4","new4","new5","new5","new6","new7","newLayer","new_bitfield_1","new_bitfield_1","new_bitfield_1","new_bitfield_1","next","next","next","next","next","next","next","next","next","next","nextContour","normalize","normalize","normalizePerspective","nothingToDraw","notifyContentWillChange","notifyDrawingChanged","notifyPixelsChanged","notifyPixelsChanged","offset","offset","offset","offset","onGetSmallPathAtlasMgr","oomed","op","op1","op2","openExistingStream","openStream","outputScanline","output_channels","output_channels","output_curves","output_curves","overrideCount","overrides","pack_parameters_workaround_with_pack_buffer","padToAlign4","parametric","partial_cmp","patchToMatrix","pcs","peek","peekPixels","peekPixels","peekPixels","peekPixels","performDeferredCleanup","pixelRefOrigin","pixmapsInfo","points","points","polylineTo","pop_back","pop_front","pos","positions","positions","postConcat","postRotate","postRotate1","postScale","postScale1","postSkew","postSkew1","postTranslate","postTranslate","postTranslate","preConcat","preConcat","preRotate","preRotate1","preScale","preScale","preScale1","preScale1","preSkew","preSkew1","preTranslate","preTranslate","precompileShader","prepend","prependToAndReset","prependVAList","preservesRightAngles","prev","printVAList","private_draw_shadow_rec","purgeUnlockedResources","purgeUnlockedResources1","push_back","push_front","quadTo","quadTo","queryYUVAInfo","queryYUVAInfo","quickReject","quickReject1","rArcTo","rConicTo","rConicTo","rCubicTo","rCubicTo","rLineTo","rLineTo","rMoveTo","rQuadTo","rQuadTo","read","readFromMemory","readFromMemory","readFromMemory","readPackedUInt","readPixels","readPixels","readPixels","readPixels","readPixels","readPixels1","readPixels1","readPixels1","readPixels1","readPixels2","readPixels2","readPixels2","readPixels3","readS16","readS32","readS8","readScalar","recorder","recordingContext","refBlender","refColorFilter","refColorSpace","refColorSpace","refColorSpace","refColorSpace","refColorSpace","refEncodedData","refImageFilter","refMaskFilter","refPathEffect","refShader","refTypefaceOrDefault","ref_","reinterpretColorSpace","releaseResourcesAndAbandonContext","remove","remove","removeShuffle","remove_pow_with_constant_exponent","reserve","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset1","reset2","resetContext","resetGLTextureBindings","resetMatrix","resize","resize","resolve","resolveMSAA","restore","restore","restoreToCount","reverseAddPath","rewind","rewind","rewindIfNeeded","rewrite_do_while_loops","rotate","rotate1","rotateX","rotateY","rotateZ","save","save","saveLayer","saveLayer1","saveLayerAlphaf","scale","scale","scalePixels","scalePixels","serialize","serialize","serialize","serialize","serialize","serialize","serialize1","serialize1","serialize1","serialize1","set","set","set","set1","set9","setARGB","setAffine","setAlphaType","setAlphaf","setBackendRenderTargetState","setBackendTextureState","setBaselineSnap","setBlendMode","setBlender","setBoundsCheck","setBoundsNoCheck","setColor","setColor1","setColorFilter","setColorSpace","setConcat","setConcat","setConcat","setData","setEdging","setEmbeddedBitmaps","setEmbolden","setEmpty","setFillStyle","setFontStyle","setForceAutoHinting","setGlyph","setHairlineStyle","setHinting","setIdentity","setImageFilter","setImmutable","setImmutable","setInfo","setLastPt","setLength","setLength1","setLinearMetrics","setMaskFilter","setMatrix","setMatrix1","setMemoryOwned","setMetrics","setMutableState","setMutableState","setNinePatch","setNormalize","setOval","setPath","setPath","setPath","setPath","setPathEffect","setPathRef","setPixelRef","setPixels","setPolyToPoly","setRSXform","setRect","setRectRadii","setRectToRect","setRectXY","setRects","setRegion","setResourceCacheLimit","setResourceCacheLimits","setRotate","setRotate","setRotate1","setRotateUnitSinCos","setSaturation","setScale","setScale","setScale1","setScaleX","setShader","setSinCos","setSinCos1","setSize","setSkew","setSkew1","setSkewX","setSrcXformFormat","setStroke","setStrokeCap","setStrokeJoin","setStrokeMiter","setStrokeStyle","setStrokeWidth","setStyle","setSubpixel","setTranslate","set_bit","set_fAntiAlias","set_fCap","set_fCapType","set_fDither","set_fFillType","set_fIsVolatile","set_fJoin","set_fJoinType","set_fPadding","set_fStrokeAndFill","set_fStyle","set_fTValue","set_fType","set_fn","set_fn","shader","shader","shiftPerPixel","shrink_to_fit","size","sizeInBytes","skCapabilities","sk_sp","sk_sp_element_type","sk_sp_sk_is_trivially_relocatable","skcms_A2B","skcms_AlphaFormat","skcms_AlphaFormat_Opaque","skcms_AlphaFormat_PremulAsEncoded","skcms_AlphaFormat_Unpremul","skcms_B2A","skcms_CICP","skcms_Curve","skcms_Curve__bindgen_ty_1","skcms_Curve__bindgen_ty_2","skcms_ICCProfile","skcms_Matrix3x3","skcms_Matrix3x4","skcms_PixelFormat","skcms_PixelFormat_ABGR_4444","skcms_PixelFormat_ARGB_4444","skcms_PixelFormat_A_8","skcms_PixelFormat_A_8_","skcms_PixelFormat_BGRA_1010102","skcms_PixelFormat_BGRA_16161616BE","skcms_PixelFormat_BGRA_16161616LE","skcms_PixelFormat_BGRA_8888","skcms_PixelFormat_BGRA_8888_Palette8","skcms_PixelFormat_BGRA_8888_sRGB","skcms_PixelFormat_BGRA_ffff","skcms_PixelFormat_BGRA_hhhh","skcms_PixelFormat_BGRA_hhhh_Norm","skcms_PixelFormat_BGR_101010x_XR","skcms_PixelFormat_BGR_161616BE","skcms_PixelFormat_BGR_161616LE","skcms_PixelFormat_BGR_565","skcms_PixelFormat_BGR_888","skcms_PixelFormat_BGR_fff","skcms_PixelFormat_BGR_hhh","skcms_PixelFormat_BGR_hhh_Norm","skcms_PixelFormat_G_8","skcms_PixelFormat_G_8_","skcms_PixelFormat_RGBA_1010102","skcms_PixelFormat_RGBA_16161616BE","skcms_PixelFormat_RGBA_16161616LE","skcms_PixelFormat_RGBA_8888","skcms_PixelFormat_RGBA_8888_Palette8","skcms_PixelFormat_RGBA_8888_sRGB","skcms_PixelFormat_RGBA_ffff","skcms_PixelFormat_RGBA_hhhh","skcms_PixelFormat_RGBA_hhhh_Norm","skcms_PixelFormat_RGB_101010x_XR","skcms_PixelFormat_RGB_161616BE","skcms_PixelFormat_RGB_161616LE","skcms_PixelFormat_RGB_565","skcms_PixelFormat_RGB_888","skcms_PixelFormat_RGB_fff","skcms_PixelFormat_RGB_hhh","skcms_PixelFormat_RGB_hhh_Norm","skcms_TransferFunction","skew","skgpu_BackendApi","skgpu_Budgeted","skgpu_Mipmapped","skgpu_MutableTextureState","skgpu_MutableTextureStateRef","skgpu_MutableTextureState__bindgen_ty_1","skgpu_Protected","skgpu_Renderable","skgpu_SingleOwner","skgpu_ganesh_SmallPathAtlasMgr","skgpu_graphite_Recorder","skia_private_AutoTMalloc","skia_private_STArray_Storage","skia_private_TArray_value_type","skipScanlines","skipToAlign4","sktext_GlyphRunBuilder","sktext_GlyphRunList","sktext_gpu_Slug","sktext_gpu_SubRunAllocator","sktext_gpu_TextBlobRedrawCoordinator","snapshot","source","startIncrementalDecode","startScanlineDecode","std__If","std__Or","std___allocator_traits_rebind_t","std___allocator_traits_rebind_type","std___bit_const_reference","std___bit_const_reference___storage_pointer","std___bit_const_reference___storage_type","std___bit_iterator___storage_pointer","std___bit_iterator___storage_type","std___bit_iterator_difference_type","std___bit_iterator_iterator_category","std___bit_iterator_pointer","std___bit_iterator_reference","std___bit_iterator_value_type","std___bit_reference___storage_pointer","std___bit_reference___storage_type","std___bitset___bits_per_word","std___bitset___const_storage_pointer","std___bitset___self","std___bitset___storage_pointer","std___bitset___storage_type","std___bitset_all","std___bitset_any","std___bitset_const_iterator","std___bitset_const_reference","std___bitset_difference_type","std___bitset_flip","std___bitset_iterator","std___bitset_reference","std___bitset_size_type","std___compressed_pair","std___compressed_pair__Base1","std___compressed_pair__Base2","std___compressed_pair_elem__ParamT","std___compressed_pair_elem_const_reference","std___compressed_pair_elem_reference","std___pointer_type","std___unique_ptr_deleter_sfinae","std___unique_ptr_deleter_sfinae___enable_rval_overload","std___unique_ptr_deleter_sfinae___good_rval_ref_type","std___unique_ptr_deleter_sfinae___lval_ref_type","std___vector_base","std___vector_base___alloc_traits","std___vector_base_allocator_type","std___vector_base_common___throw_length_error","std___vector_base_common___throw_out_of_range","std___vector_base_const_iterator","std___vector_base_const_pointer","std___vector_base_const_reference","std___vector_base_difference_type","std___vector_base_iterator","std___vector_base_pointer","std___vector_base_reference","std___vector_base_size_type","std___vector_base_value_type","std___wrap_iter","std___wrap_iter_difference_type","std___wrap_iter_iterator_category","std___wrap_iter_iterator_type","std___wrap_iter_pointer","std___wrap_iter_reference","std___wrap_iter_value_type","std_allocator","std_allocator_const_pointer","std_allocator_const_reference","std_allocator_difference_type","std_allocator_is_always_equal","std_allocator_pointer","std_allocator_propagate_on_container_move_assignment","std_allocator_rebind","std_allocator_rebind_other","std_allocator_reference","std_allocator_size_type","std_allocator_traits","std_allocator_traits_allocator_type","std_allocator_traits_const_pointer","std_allocator_traits_const_void_pointer","std_allocator_traits_difference_type","std_allocator_traits_is_always_equal","std_allocator_traits_pointer","std_allocator_traits_propagate_on_container_copy_assignment","std_allocator_traits_propagate_on_container_move_assignment","std_allocator_traits_propagate_on_container_swap","std_allocator_traits_rebind_alloc","std_allocator_traits_rebind_traits","std_allocator_traits_size_type","std_allocator_traits_value_type","std_allocator_traits_void_pointer","std_allocator_value_type","std_atomic","std_atomic___base","std_atomic_difference_type","std_atomic_value_type","std_basic_string","std_basic_string___alignment","std_basic_string___alloc_traits","std_basic_string___long","std_basic_string___min_cap","std_basic_string___n_words","std_basic_string___raw","std_basic_string___rep","std_basic_string___rep__bindgen_ty_1","std_basic_string___self","std_basic_string___self_view","std_basic_string___short","std_basic_string___short__bindgen_ty_1","std_basic_string___ulx","std_basic_string__bindgen_ty_1","std_basic_string__bindgen_ty_2","std_basic_string__bindgen_ty_3","std_basic_string_allocator_type","std_basic_string_const_iterator","std_basic_string_const_pointer","std_basic_string_const_reference","std_basic_string_const_reverse_iterator","std_basic_string_difference_type","std_basic_string_iterator","std_basic_string_pointer","std_basic_string_reference","std_basic_string_reverse_iterator","std_basic_string_size_type","std_basic_string_traits_type","std_basic_string_value_type","std_basic_string_view","std_basic_string_view_const_iterator","std_basic_string_view_const_pointer","std_basic_string_view_const_reference","std_basic_string_view_const_reverse_iterator","std_basic_string_view_difference_type","std_basic_string_view_iterator","std_basic_string_view_pointer","std_basic_string_view_reference","std_basic_string_view_reverse_iterator","std_basic_string_view_size_type","std_basic_string_view_traits_type","std_basic_string_view_value_type","std_bidirectional_iterator_tag","std_bitset___n_words","std_bitset_base","std_bitset_const_reference","std_bitset_reference","std_bitset_reset","std_bitset_set","std_bitset_test","std_byte","std_char_traits","std_char_traits_char_type","std_char_traits_int_type","std_char_traits_off_type","std_char_traits_pos_type","std_char_traits_state_type","std_chrono_duration","std_chrono_duration___no_overflow","std_chrono_duration___no_overflow_type","std_chrono_duration_period","std_chrono_duration_rep","std_chrono_milliseconds","std_conditional_type","std_default_delete","std_forward_iterator_tag","std_fpos","std_input_iterator_tag","std_integral_constant_type","std_integral_constant_value_type","std_iterator","std_iterator_difference_type","std_iterator_iterator_category","std_iterator_pointer","std_iterator_reference","std_iterator_traits","std_iterator_traits___primary_template","std_iterator_value_type","std_milli","std_optional","std_optional__CheckOptionalArgsConstructor","std_optional__CheckOptionalArgsCtor","std_optional__CheckOptionalLikeAssign","std_optional__CheckOptionalLikeConstructor","std_optional__CheckOptionalLikeConstructor___check_assignable_from_opt","std_optional__CheckOptionalLikeConstructor___check_constructible_from_opt","std_optional__CheckOptionalLikeCtor","std_optional___base","std_optional_value_type","std_random_access_iterator_tag","std_ratio___da","std_ratio___gcd","std_ratio___na","std_ratio___s","std_ratio_den","std_ratio_num","std_reverse_iterator","std_reverse_iterator_difference_type","std_reverse_iterator_iterator_category","std_reverse_iterator_iterator_type","std_reverse_iterator_pointer","std_reverse_iterator_reference","std_reverse_iterator_value_type","std_streamoff","std_streampos","std_string","std_string_view","std_true_type","std_tuple","std_tuple__BaseT","std_tuple__EnableCopyFromOtherTuple","std_tuple__EnableExplicitCopyFromPair","std_tuple__EnableExplicitMoveFromPair","std_tuple__EnableImplicitCopyFromPair","std_tuple__EnableImplicitMoveFromPair","std_tuple__EnableMoveFromOtherTuple","std_tuple__EnableUTypesCtor","std_tuple__IsThisTuple","std_unique_ptr","std_unique_ptr__BadRValRefType","std_unique_ptr__DeleterSFINAE","std_unique_ptr__EnableIfDeleterAssignable","std_unique_ptr__EnableIfDeleterConstructible","std_unique_ptr__EnableIfDeleterConvertible","std_unique_ptr__EnableIfDeleterDefaultConstructible","std_unique_ptr__EnableIfMoveConvertible","std_unique_ptr__GoodRValRefType","std_unique_ptr__LValRefType","std_unique_ptr___nat","std_unique_ptr_deleter_type","std_unique_ptr_element_type","std_unique_ptr_pointer","storeVkPipelineCacheData","strings","submit","supportsDistanceFieldText","swap","swap","swap","swap","swap","table_16","table_8","table_entries","tag","tag_count","temporary_internal_getRgnClip","texCoords","textToGlyphs","textToGlyphs","threadSafeCache","threadSafeCache1","threadSafeProxy","toISO8601","toProfile","toQuad","toQuad","toTriStrip","toXYZD50","toXYZD50","toXYZD50","toYUVALocations","toYUVALocations","toYUVALocations","toYUVALocations","to_non_inverse","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transferFn","transferFn1","transfer_characteristics","transform","transform","transform","translate","translate","translate","transpose","trc","tryAllocN32Pixels","tryAllocPixels","tryAllocPixels1","tryAllocPixelsFlags","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbind_attachments_on_bound_render_fbo_delete","unfold_short_circuit_as_ternary_operation","unicharToGlyph","unicharToGlyph","unicharsToGlyphs","unicharsToGlyphs","uniformSize","unique","unref","update","updateBackendTexture","updateBackendTexture1","updateBackendTexture2","updateBackendTexture3","updateCompressedBackendTexture","updateCompressedBackendTexture1","useCubic","utf8text","va_list","validate","vals","vals","value","video_full_range_flag","vtable","vtable_","vtable_","vtable_","vtable_","vtable_","vtable_","w","wait","wait","width","withDefaultMipmaps","writeBigDecAsText","writeDecAsText","writeHexAsText","writePackedUInt","writePixels","writePixels","writePixels","writePixels1","writePixels1","writeScalar","writeScalarAsText","writeStream","writeToAndReset","writeToAndReset1","writeToMemory","writeToMemory","writeToMemory","writeToMemory","writeToStream","x","x","x","x","y","y","y","y","z","z"],"q":[[0,"skia_bindings"],[11782,"core::ffi"],[11783,"core::ffi"],[11784,"core::ffi"],[11785,"core::cmp"],[11786,"core::cmp"],[11787,"core::cmp"],[11788,"core::fmt"],[11789,"core::convert"],[11790,"core::hash"],[11791,"core::any"]],"dhe maximum number of points an iterator will return for …","The maximum number of points an iterator will return for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No value.","No valueome value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</code>.","Some value of type <code>T</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchangedalls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codehe number of points an iterator will return for the verb.","The number of points an iterator will return for the verbi":[224,468,53,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,153,375,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,375,120,394,2,371,397,394,132,0,433,228,224,468,468,468,468,468,468,468,53,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,93,93,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,153,375,113,113,113,113,113,113,113,347,347,40,454,447,393,393,112,71,112,254,41,228,4,53,153,153,153,153,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,28,233,5,236,88,104,309,310,257,104,104,104,447,415,462,309,310,5,82,451,451,11,13,451,13,319,309,310,468,468,468,468,468,257,257,153,375,104,289,324,88,439,302,346,433,112,41,40,17,20,21,10,22,23,438,104,170,317,410,127,324,371,422,423,423,391,236,310,391,463,462,104,104,104,104,104,397,468,468,468,468,468,93,468,468,468,468,468,468,93,415,223,32,17,82,54,104,132,370,0,20,300,223,39,420,421,302,446,116,446,446,446,446,446,446,423,423,423,423,264,2,2,2,461,260,224,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,375,327,327,0,397,397,397,397,146,146,462,397,463,397,397,397,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,375,438,438,420,421,104,37,433,104,14,375,257,257,257,257,113,454,391,82,439,397,263,263,59,446,446,446,446,82,170,317,410,127,82,82,14,82,82,54,54,441,441,452,5,5,5,383,393,375,113,375,113,375,250,438,153,153,153,438,148,149,112,226,227,44,116,41,40,317,153,93,62,441,104,153,438,51,113,224,59,435,439,104,410,104,88,415,28,112,112,7,29,104,309,310,319,226,227,299,439,47,433,416,416,104,468,309,310,548,49,52,17,5,515,456,548,52,52,52,52,52,58,10,271,451,23,2,515,64,58,58,32,32,515,36,58,444,444,444,74,74,143,32,78,78,36,36,32,65,36,36,32,22,22,22,143,495,36,32,78,22,87,87,87,87,451,436,436,94,87,87,52,52,52,52,52,52,74,78,17,436,436,74,74,24,74,74,74,74,74,74,74,74,52,17,17,36,23,436,436,444,436,436,36,52,36,36,36,36,170,289,324,88,40,289,324,105,104,435,309,310,104,20,226,227,106,415,222,252,290,291,292,326,346,437,450,424,441,549,550,103,34,57,484,551,552,160,553,531,532,119,43,76,162,72,554,555,556,557,558,227,260,327,93,433,59,260,393,452,7,236,1,438,438,383,257,0,51,324,324,59,5,415,5,104,375,375,468,468,468,468,468,468,468,468,47,37,37,104,299,5,299,83,83,51,424,397,397,397,397,309,310,224,468,468,468,468,468,468,468,468,468,468,468,468,153,153,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,153,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,468,153,153,153,153,153,153,153,153,153,153,153,114,5,5,5,113,113,113,113,113,2,5,415,47,117,117,20,32,444,120,88,410,250,250,143,422,264,317,410,127,13,28,112,112,435,41,40,0,0,0,0,0,0,0,0,0,0,468,257,257,0,0,0,0,0,0,0,0,0,0,0,0,438,153,438,153,153,104,104,14,397,397,397,397,397,397,447,439,415,0,0,55,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,347,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,260,148,149,104,59,319,549,550,103,34,57,484,551,552,160,553,531,532,119,43,76,162,72,554,555,556,557,558,41,251,104,104,104,104,251,104,223,300,39,421,39,421,394,37,82,0,461,254,112,71,112,0,435,302,62,62,62,370,0,468,44,44,82,317,410,127,32,51,44,153,116,116,116,51,416,416,383,0,0,0,0,0,0,0,0,0,0,0,289,324,375,375,327,54,468,410,127,104,317,44,44,114,44,44,44,44,44,44,44,44,222,252,290,291,292,326,346,437,450,257,0,0,215,503,559,27,75,70,211,238,293,94,238,216,428,5,0,209,0,483,560,206,209,211,503,503,195,561,562,201,563,564,564,565,566,567,568,569,217,0,210,213,570,571,207,563,541,196,563,565,566,483,560,206,209,212,570,571,207,572,573,574,575,200,214,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,197,198,199,202,203,204,205,208,249,263,296,359,367,397,398,436,451,456,461,462,463,602,603,604,605,606,607,608,609,610,611,612,613,139,614,503,505,36,17,150,322,510,511,137,32,515,482,22,64,105,518,519,615,616,617,618,619,620,621,622,623,85,624,625,134,259,20,271,273,275,277,21,314,58,348,69,369,147,373,122,384,392,11,117,10,399,125,13,89,78,405,165,166,130,65,417,418,55,74,23,444,87,472,270,5,315,146,270,5,315,146,567,568,569,217,570,541,571,483,572,573,560,561,562,574,575,196,200,201,206,207,12,219,220,358,96,122,24,24,124,126,128,5,129,5,129,13,130,69,5,129,5,5,129,5,5,129,5,129,5,5,129,5,5,144,239,133,133,133,133,133,133,135,135,135,135,135,135,135,135,67,137,24,130,139,140,140,140,141,141,141,141,141,66,143,144,145,146,146,5,147,13,10,64,5,129,5,129,5,129,150,21,21,23,14,27,94,94,133,137,94,94,104,156,156,157,137,74,137,74,58,58,377,96,122,164,164,564,563,167,626,537,627,538,628,629,630,631,632,156,565,564,559,563,633,634,1,2,548,635,143,27,636,535,75,70,100,637,487,638,639,114,495,139,85,624,625,536,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,503,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,504,505,506,12,66,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,168,52,224,225,226,227,228,229,230,38,36,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,17,507,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,133,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,24,298,299,300,301,302,488,303,304,305,306,489,490,307,308,508,21,54,4,309,5,148,132,310,311,312,313,140,509,314,315,491,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,510,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,144,345,86,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,492,493,367,368,369,479,511,370,137,371,512,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,32,391,513,392,393,26,394,395,11,117,396,31,397,514,398,10,399,125,124,13,400,401,402,403,129,149,404,494,88,89,78,405,165,406,166,407,408,164,130,409,29,171,410,411,412,413,414,115,415,416,81,65,417,418,55,515,482,419,146,420,421,74,422,423,424,22,425,426,427,498,428,135,136,64,429,430,62,478,431,432,141,516,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,68,167,102,449,450,127,126,451,452,453,454,455,456,457,458,459,145,460,517,461,120,462,463,28,518,519,464,87,106,520,128,465,466,467,468,469,470,471,472,473,474,475,626,537,627,538,628,629,630,631,632,156,565,564,559,563,633,634,1,2,548,635,143,27,636,535,75,70,100,637,487,638,639,114,495,139,85,624,625,536,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,503,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,504,505,506,12,66,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,168,52,224,225,226,227,228,229,230,38,36,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,17,507,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,133,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,24,298,299,300,301,302,488,303,304,305,306,489,490,307,308,508,21,54,4,309,5,148,132,310,311,312,313,140,509,314,315,491,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,510,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,144,345,86,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,492,493,367,368,369,479,511,370,137,371,512,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,32,391,513,392,393,26,394,395,11,117,396,31,397,514,398,10,399,125,124,13,400,401,402,403,129,149,404,494,88,89,78,405,165,406,166,407,408,164,130,409,29,171,410,411,412,413,414,115,415,416,81,65,417,418,55,515,482,419,146,420,421,74,422,423,424,22,425,426,427,498,428,135,136,64,429,430,62,478,431,432,141,516,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,68,167,102,449,450,127,126,451,452,453,454,455,456,457,458,459,145,460,517,461,120,462,463,28,518,519,464,87,106,520,128,465,466,467,468,469,470,471,472,473,474,475,53,168,96,27,150,74,124,94,74,87,157,24,24,24,24,24,156,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,224,225,226,227,228,229,230,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,21,54,4,309,148,132,310,311,312,313,314,315,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,367,368,369,370,371,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,11,117,396,31,397,398,10,399,125,13,400,401,402,403,149,404,88,89,78,405,165,406,166,407,408,130,409,29,410,411,412,413,414,115,415,416,81,65,417,418,55,419,146,420,421,74,422,423,424,425,426,427,428,136,429,430,62,431,432,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,449,450,127,451,452,453,454,455,456,457,458,459,460,461,120,462,463,28,464,87,106,465,466,467,468,469,470,471,472,473,474,475,156,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,224,225,226,227,228,229,230,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,21,54,4,309,148,132,310,311,312,313,314,315,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,367,368,369,370,371,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,11,117,396,31,397,398,10,399,125,13,400,401,402,403,149,404,88,89,78,405,165,406,166,407,408,130,409,29,410,411,412,413,414,115,415,416,81,65,417,418,55,419,146,420,421,74,422,423,424,425,426,427,428,136,429,430,62,431,432,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,449,450,127,451,452,453,454,455,456,457,458,459,460,461,120,462,463,28,464,87,106,465,466,467,468,469,470,471,472,473,474,475,5,122,129,136,173,379,167,168,52,38,133,137,137,69,243,478,479,129,52,27,318,38,52,171,5,1,37,318,24,24,5,129,5,5,171,115,171,171,376,376,36,32,482,482,124,498,445,117,32,150,5,32,5,100,87,87,87,87,87,87,87,87,100,87,87,87,87,100,32,100,32,117,229,5,129,572,573,574,575,200,96,66,218,13,53,102,14,380,156,173,113,104,59,170,41,40,302,4,88,120,87,94,69,27,75,70,487,66,168,133,273,488,489,490,5,140,491,144,492,493,369,479,124,13,129,494,164,171,135,141,145,487,495,129,478,69,482,482,144,144,144,144,144,27,479,458,145,147,74,147,74,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,69,42,14,47,5,26,115,5,69,128,87,115,96,68,144,234,122,156,173,210,213,215,216,222,223,112,51,50,113,224,225,226,227,231,44,111,233,116,236,244,245,247,248,250,251,82,83,252,254,256,104,257,59,170,25,260,18,264,267,268,39,41,40,272,276,289,99,290,291,292,299,300,302,303,304,305,306,307,54,4,309,148,132,310,317,319,324,71,326,327,153,93,334,92,335,340,346,347,351,352,353,354,355,370,371,158,159,155,374,375,381,382,383,391,393,394,401,402,403,149,404,88,409,410,415,416,420,421,422,423,424,428,62,433,434,435,152,437,438,439,441,442,446,447,450,127,452,453,454,455,457,120,28,468,66,36,66,66,156,173,210,213,215,216,222,223,112,51,50,113,224,225,226,227,231,44,111,233,116,236,244,245,247,248,250,251,82,83,252,254,256,104,257,59,170,25,260,18,264,267,268,39,41,40,272,276,289,99,290,291,292,299,300,302,303,304,305,306,307,54,4,309,148,132,310,317,319,324,71,326,327,153,93,334,92,335,340,346,347,351,352,353,354,355,370,371,158,159,155,374,375,381,382,383,391,393,394,401,402,403,149,404,88,409,410,415,416,420,421,422,423,424,428,62,433,434,435,152,437,438,439,441,442,446,447,450,127,452,453,454,455,457,120,28,468,38,133,140,38,133,133,133,68,426,24,24,471,133,38,133,96,488,336,164,639,517,24,86,86,86,507,488,168,255,639,86,270,395,639,141,516,395,86,459,164,336,246,246,490,298,75,70,293,94,474,100,24,332,49,465,269,269,507,255,27,331,138,42,395,298,301,32,171,22,135,64,517,32,86,482,22,100,145,508,146,395,270,140,487,167,639,412,24,24,311,318,84,507,27,473,507,27,52,168,91,168,337,338,342,301,64,473,95,516,337,342,95,313,311,400,129,487,520,86,86,100,494,440,5,151,516,516,449,164,143,135,479,492,2,548,515,1,2,234,431,431,135,490,493,395,535,490,52,37,321,86,86,86,86,86,535,255,315,270,86,411,412,413,473,95,517,86,143,143,488,143,143,95,255,26,321,86,143,336,516,313,86,516,298,329,95,5,129,325,325,5,61,26,395,95,311,328,329,330,473,253,255,70,17,255,336,341,343,344,246,246,86,427,427,495,86,336,440,95,60,255,488,482,75,70,56,221,507,26,431,91,328,337,338,106,488,489,27,535,100,491,91,479,64,64,38,157,493,137,514,145,128,95,478,86,151,17,440,129,129,129,32,100,100,342,100,75,70,293,474,5,129,313,494,412,146,270,516,75,639,513,129,129,5,311,135,490,17,487,395,138,42,413,49,330,139,124,489,459,24,24,24,331,95,27,114,14,47,490,460,488,331,86,395,95,331,332,95,95,86,95,95,95,495,86,331,331,431,95,75,372,475,133,27,146,341,343,344,64,516,431,311,75,70,124,311,459,129,143,460,639,510,325,459,515,126,143,459,143,100,37,458,516,270,535,298,84,157,517,27,5,126,86,151,61,133,38,60,133,294,37,475,1,2,312,64,86,253,520,516,548,507,479,24,328,329,330,337,338,315,12,36,320,358,311,400,129,24,336,246,246,115,516,66,145,164,366,492,366,492,164,411,412,115,301,86,86,504,506,49,60,36,60,36,339,511,255,146,510,411,138,42,413,1,38,60,135,171,426,411,413,86,81,81,70,100,330,510,24,508,298,26,24,431,473,129,27,86,95,86,325,37,37,36,140,320,358,26,140,26,86,488,143,465,143,235,70,140,509,135,135,135,143,395,395,513,128,146,516,270,495,32,516,325,325,37,253,516,86,86,86,487,24,100,332,315,482,328,330,487,64,339,536,475,75,94,536,431,516,17,17,138,42,395,17,17,81,81,315,318,115,14,639,26,427,458,395,395,137,32,514,22,64,86,100,143,458,94,80,84,312,311,400,311,400,129,64,478,474,100,100,246,246,312,27,75,70,56,221,507,146,331,331,107,101,7,29,301,301,395,395,395,143,107,101,7,29,301,301,1,2,536,475,37,431,29,459,253,229,150,21,21,23,23,444,444,164,164,164,380,445,24,74,87,74,87,74,87,74,87,144,156,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,503,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,504,505,506,12,66,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,168,52,224,225,226,227,228,229,230,38,36,37,231,232,44,111,233,116,234,235,236,97,237,96,239,240,243,244,245,246,17,507,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,133,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,295,296,297,24,298,299,300,301,302,488,303,304,305,306,489,490,307,308,508,21,54,4,309,5,148,132,310,311,312,313,140,509,314,315,491,316,317,318,319,58,320,323,324,71,325,326,327,153,328,329,330,510,331,332,157,93,333,334,92,335,336,337,338,95,339,340,342,144,345,86,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,492,493,367,368,369,479,511,370,137,371,512,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,32,391,513,392,393,26,394,395,11,117,396,31,397,514,398,10,399,125,124,13,400,401,402,403,129,149,404,494,88,89,78,405,165,406,166,407,408,164,130,409,29,171,410,411,412,413,414,115,415,416,81,65,417,418,55,515,482,419,146,420,421,74,422,423,424,22,425,426,427,498,428,135,136,64,429,430,62,478,431,432,141,516,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,68,167,102,449,450,127,126,451,452,453,454,455,456,457,458,459,145,460,517,461,120,462,463,28,518,519,464,87,106,520,128,466,467,468,469,470,471,472,473,474,219,220,498,67,144,87,626,537,627,538,628,629,630,631,632,156,565,564,559,563,633,634,1,2,548,635,143,27,636,535,154,75,70,100,637,487,638,639,114,495,139,85,624,625,536,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,503,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,504,505,506,12,66,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,168,52,224,225,226,227,228,229,230,38,36,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,17,507,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,133,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,24,298,299,300,301,302,488,303,304,305,306,489,490,307,308,508,21,54,4,309,5,148,132,310,310,311,312,313,140,509,314,315,491,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,153,328,329,330,510,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,144,345,86,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,492,493,367,368,369,479,511,370,137,371,512,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,32,391,513,392,393,26,394,395,11,117,396,31,397,514,398,10,399,125,124,13,400,401,402,403,129,149,404,494,88,89,78,405,165,406,166,407,408,164,130,409,29,171,410,411,412,413,414,115,415,416,81,65,417,418,55,515,482,419,146,420,421,74,422,423,424,22,425,426,427,498,428,135,136,64,429,430,62,478,431,432,141,516,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,68,167,102,449,450,127,126,451,452,453,454,455,456,457,458,459,145,460,517,461,120,462,463,28,518,519,464,87,106,520,128,465,466,467,468,469,470,471,472,473,474,475,96,168,17,17,17,13,13,74,173,492,133,38,515,75,70,337,338,74,74,24,27,171,133,5,147,32,133,487,74,38,38,24,32,117,143,70,75,133,5,147,130,143,143,146,150,26,22,32,5,494,24,24,314,494,145,14,26,14,14,70,75,26,26,143,514,5,5,26,314,494,32,24,13,164,87,87,87,87,47,24,315,143,314,494,5,146,24,32,32,32,69,69,24,24,26,32,32,32,5,26,26,143,514,173,75,144,498,136,241,242,241,242,241,242,128,137,53,53,53,53,53,156,173,210,213,215,216,222,223,112,51,50,113,224,225,226,227,231,44,111,233,116,236,244,245,247,248,250,251,82,83,252,254,256,104,257,59,170,25,260,18,264,267,268,39,41,40,272,276,289,99,290,291,292,299,300,302,303,304,305,306,307,54,4,309,148,132,310,317,319,324,71,326,327,153,93,334,92,335,340,346,347,351,352,353,354,355,370,371,158,159,155,374,375,381,382,383,391,393,394,401,402,403,149,404,88,409,410,415,416,420,421,422,423,424,428,62,433,434,435,152,437,438,439,441,442,446,447,450,127,452,453,454,455,457,120,28,468,469,24,5,129,378,379,448,478,128,1,241,242,241,242,66,140,66,140,66,66,66,66,66,66,66,115,133,133,133,5,13,138,42,42,171,171,0,626,537,627,538,628,629,630,631,632,156,565,564,559,563,633,634,1,2,548,635,143,27,636,535,75,70,100,637,487,638,639,114,495,139,85,624,625,536,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,503,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,504,505,506,12,66,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,168,52,224,225,226,227,228,229,230,38,36,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,17,507,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,133,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,24,298,299,300,301,302,488,303,304,305,306,489,490,307,308,508,21,54,4,309,5,148,132,310,311,312,313,140,509,314,315,491,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,510,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,144,345,86,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,492,493,367,368,369,479,511,370,137,371,512,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,32,391,513,392,393,26,394,395,11,117,396,31,397,514,398,10,399,125,124,13,400,401,402,403,129,149,404,494,88,89,78,405,165,406,166,407,408,164,130,409,29,171,410,411,412,413,414,115,415,416,81,65,417,418,55,515,482,419,146,420,421,74,422,423,424,22,425,426,427,498,428,135,136,64,429,430,62,478,431,432,141,516,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,68,167,102,449,450,127,126,451,452,453,454,455,456,457,458,459,145,460,517,461,120,462,463,28,518,519,464,87,106,520,128,465,466,467,468,469,470,471,472,473,474,475,17,510,331,332,47,89,137,21,494,311,150,100,74,5,406,5,5,133,5,5,5,94,17,5,75,70,5,13,5,17,75,14,27,1,5,13,115,54,54,51,138,42,442,334,442,111,111,111,455,111,455,111,111,455,248,231,50,50,92,92,50,453,0,92,92,50,92,92,92,225,453,92,50,92,92,50,248,248,50,50,92,248,272,272,276,374,247,381,225,381,374,382,457,152,256,403,382,334,381,381,382,382,381,335,276,303,25,92,248,225,92,50,92,248,92,225,225,304,434,409,374,248,381,404,404,404,404,401,231,111,92,50,401,401,401,401,381,158,159,340,381,402,409,50,268,159,99,306,340,351,352,353,354,355,303,457,256,340,334,453,152,305,381,382,305,247,305,453,248,256,50,50,50,50,50,92,50,92,92,92,50,248,92,50,92,50,92,50,225,50,50,92,92,50,248,272,225,272,92,92,92,225,155,92,92,92,92,334,225,457,159,159,50,335,401,381,382,382,434,304,158,453,409,381,231,25,25,25,382,382,267,111,307,92,50,272,335,247,453,231,248,231,248,248,248,99,306,307,351,352,353,354,355,453,117,5,129,518,519,519,518,518,519,518,518,518,519,135,168,444,32,444,444,444,168,52,137,17,168,137,21,37,117,117,117,117,444,74,74,17,137,147,487,137,137,137,137,137,17,133,137,78,444,133,137,444,133,137,133,137,37,24,74,74,94,89,150,89,26,487,47,14,14,14,14,14,14,14,14,117,117,117,11,241,242,241,242,243,241,242,380,229,69,69,67,144,144,0,26,380,229,5,129,104,445,448,23,156,1,143,27,535,75,70,487,495,139,85,536,173,66,168,37,234,133,61,273,275,24,488,489,490,5,311,140,491,318,331,332,94,144,69,366,492,493,479,147,122,32,26,514,125,124,400,129,494,164,130,171,411,412,413,515,482,146,74,426,135,478,141,167,458,459,145,518,87,128,475,1,27,75,70,66,168,133,61,273,275,24,488,489,490,5,311,140,491,144,493,26,400,129,494,171,515,146,74,27,75,70,66,168,133,61,24,488,489,140,26,129,171,515,146,27,75,70,66,168,24,488,140,26,515,66,24,66,24,66,66,490,270,5,315,146,275,311,313,491,479,400,411,412,413,426,494,7,29,47,27,74,147,133,130,5,129,445,471,87,87,171,171,171,32,32,143,241,242,241,242,378,378,144,482,239,173,459,53,400,133,24,137,74,87,133,2,309,310,129,273,273,136,478,498,14,14,14,14,14,14,14,114,14,47,14,47,14,14,14,47,14,47,14,14,14,47,87,140,482,66,14,275,66,24,87,87,273,273,5,129,143,514,24,24,5,5,129,5,129,5,129,5,5,129,482,5,171,115,65,38,133,24,137,74,133,24,137,74,24,137,74,137,65,65,65,65,74,74,27,27,168,52,38,133,137,137,27,27,27,27,26,49,137,87,66,128,140,144,140,27,66,14,38,133,275,490,5,140,491,124,13,129,411,482,458,459,38,38,87,87,24,66,140,126,74,24,145,24,5,5,411,143,144,24,24,145,145,145,24,145,24,24,24,7,24,38,137,17,20,5,32,78,22,20,32,78,22,173,66,510,66,14,27,14,133,27,87,87,26,27,27,42,42,27,27,27,38,114,14,47,515,26,26,26,171,146,495,26,495,146,26,114,27,133,130,133,5,7,7,26,27,24,24,515,495,75,70,115,7,115,311,313,494,171,27,400,133,133,14,14,171,115,14,115,171,171,87,87,14,47,14,47,114,114,14,14,26,27,14,14,26,14,14,26,143,27,27,27,27,146,27,27,26,14,173,270,146,270,270,5,5,146,270,270,146,270,315,315,219,220,167,102,168,140,53,445,69,0,0,0,0,0,245,245,245,0,0,0,0,0,0,0,0,0,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,515,0,0,0,0,0,129,444,143,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,634,87,87,66,133,5,140,171,240,240,240,380,53,24,478,32,26,69,69,87,431,17,42,81,81,246,17,53,2,536,37,475,54,156,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,224,225,226,227,228,229,230,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,21,54,4,309,148,132,310,311,312,313,314,315,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,367,368,369,370,371,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,11,117,396,31,397,398,10,399,125,13,400,401,402,403,149,404,88,89,78,405,165,406,166,407,408,130,409,29,410,411,412,413,414,115,415,416,81,65,417,418,55,419,146,420,421,74,422,423,424,425,426,427,428,136,429,430,62,431,432,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,449,450,127,451,452,453,454,455,456,457,458,459,460,461,120,462,463,28,464,87,106,465,466,467,468,469,470,471,472,473,474,475,17,17,243,5,115,458,24,171,145,47,53,133,133,133,133,626,537,627,538,628,629,630,631,632,156,565,564,559,563,633,634,1,2,548,635,143,27,636,535,75,70,100,637,487,638,639,114,495,139,85,624,625,536,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,503,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,504,505,506,12,66,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,168,52,224,225,226,227,228,229,230,38,36,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,17,507,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,133,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,24,298,299,300,301,302,488,303,304,305,306,489,490,307,308,508,21,54,4,309,5,148,132,310,311,312,313,140,509,314,315,491,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,510,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,144,345,86,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,492,493,367,368,369,479,511,370,137,371,512,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,32,391,513,392,393,26,394,395,11,117,396,31,397,514,398,10,399,125,124,13,400,401,402,403,129,149,404,494,88,89,78,405,165,406,166,407,408,164,130,409,29,171,410,411,412,413,414,115,415,416,81,65,417,418,55,515,482,419,146,420,421,74,422,423,424,22,425,426,427,498,428,135,136,64,429,430,62,478,431,432,141,516,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,68,167,102,449,450,127,126,451,452,453,454,455,456,457,458,459,145,460,517,461,120,462,463,28,518,519,464,87,106,520,128,465,466,467,468,469,470,471,472,473,474,475,626,537,627,538,628,629,630,631,632,156,565,564,559,563,633,634,1,2,548,635,143,27,636,535,75,70,100,637,487,638,639,114,495,139,85,624,625,536,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,503,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,504,505,506,12,66,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,168,52,224,225,226,227,228,229,230,38,36,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,17,507,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,133,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,24,298,299,300,301,302,488,303,304,305,306,489,490,307,308,508,21,54,4,309,5,148,132,310,311,312,313,140,509,314,315,491,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,510,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,144,345,86,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,492,493,367,368,369,479,511,370,137,371,512,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,32,391,513,392,393,26,394,395,11,117,396,31,397,514,398,10,399,125,124,13,400,401,402,403,129,149,404,494,88,89,78,405,165,406,166,407,408,164,130,409,29,171,410,411,412,413,414,115,415,416,81,65,417,418,55,515,482,419,146,420,421,74,422,423,424,22,425,426,427,498,428,135,136,64,429,430,62,478,431,432,141,516,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,68,167,102,449,450,127,126,451,452,453,454,455,456,457,458,459,145,460,517,461,120,462,463,28,518,519,464,87,106,520,128,465,466,467,468,469,470,471,472,473,474,475,167,445,448,626,537,627,538,628,629,630,631,632,156,565,564,559,563,633,634,1,2,548,635,143,27,636,535,75,70,100,637,487,638,639,114,495,139,85,624,625,536,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,503,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,504,505,506,12,66,49,218,219,220,101,7,56,221,138,42,222,14,223,112,51,50,113,168,52,224,225,226,227,228,229,230,38,36,37,231,232,44,111,233,116,234,235,236,97,237,96,238,239,240,241,242,243,53,244,245,246,17,507,247,248,249,77,250,251,82,83,252,253,254,255,256,104,257,258,133,134,259,59,170,25,260,261,19,262,20,18,263,150,264,265,46,266,47,267,268,39,41,40,269,270,271,60,272,61,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,99,290,291,292,293,294,295,296,297,24,298,299,300,301,302,488,303,304,305,306,489,490,307,308,508,21,54,4,309,5,148,132,310,311,312,313,140,509,314,315,491,316,317,318,319,58,320,321,322,323,324,71,325,326,327,153,328,329,330,510,331,332,157,93,333,334,92,335,336,337,338,95,339,340,94,341,342,343,344,144,345,86,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,131,362,363,364,169,365,69,366,492,493,367,368,369,479,511,370,137,371,512,158,159,372,155,147,373,122,374,375,84,376,377,378,379,380,80,381,382,383,384,385,386,387,388,389,390,32,391,513,392,393,26,394,395,11,117,396,31,397,514,398,10,399,125,124,13,400,401,402,403,129,149,404,494,88,89,78,405,165,406,166,407,408,164,130,409,29,171,410,411,412,413,414,115,415,416,81,65,417,418,55,515,482,419,146,420,421,74,422,423,424,22,425,426,427,498,428,135,136,64,429,430,62,478,431,432,141,516,433,434,435,105,23,152,151,436,91,437,438,439,440,441,442,443,444,445,446,447,448,67,68,167,102,449,450,127,126,451,452,453,454,455,456,457,458,459,145,460,517,461,120,462,463,28,518,519,464,87,106,520,128,465,466,467,468,469,470,471,472,473,474,475,144,144,32,26,32,26,444,49,49,459,87,87,87,87,87,87,229,136,0,85,97,237,377,243,218,143,640,504,24,512,514,266,74,87,469,137,55,55,55,55,133,24,74,24,74,55,55,55,482,482,17,5,171,115,482,265,46,266,470,265,46,266,470,46,266],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,3,3,4],5],0,0,0,0,0,0,0,0,0,0,0,[[6,6,6,6]],0,0,[[7,7,7,3,7,8],8],0,[9,10],[[9,9],10],[[],[[12,[11]]]],[[],13],[3,10],[[12,13,14]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[15,16],[[12,[17]]]],[[18,15,16,19],[[12,[20]]]],[[15,16,19],[[12,[21]]]],[[15,16,19],[[12,[10]]]],[[15,16,19],[[12,[22]]]],[[15,16,19],[[12,[23]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[24,15,16,25,3,3,26,27,28]],[[24,5,29,29,3,6,6,30]],0,0,0,0,0,[31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[32,32],33],[[17,17],33],0,0,0,0,0,0,[34,35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[12,[36]]],2],[[1,15],2],[[37,38],2],[[35,5],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],16],[[],16],[[27,39],3],[[40,3,41,3],3],[[14,5,29,29,3,30,42],33],[[],43],[[15,16,25,3,3,26,5]],[[],16],[[],16],[[],16],[[44,30],45],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[44,33],0,0,[[],14],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],14],0,0,0,0,0,0,0,[[7,7,7,7,33],33],[[7,7,33],33],[[7,7,7,33],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[3,3],3],[[3,3,3],3],0,0,0,0,0,0,0,0,[[46,46,46],47],0,0,0,0,0,0,0,[[[12,[36]]],48],[[35,16],[[12,[49]]]],[[8,8,50,51],52],[53,[[12,[17]]]],[[7,8,9,8,3,8,54,33],5],[[[12,[36]]],48],[[42,55,30],48],[53,48],[[8,8,50,51,[12,[17]]],52],[[56,50,51],52],[[56,50,51,[12,[17]]],52],[[8,8],52],[56,52],[[15,16,8,57,15],[[12,[58]]]],[[59,3,33],[[12,[10]]]],[[48,52,60,61],48],[[9,9,9]],[[[12,[23]],[12,[23]]],[[12,[23]]]],[2,2],[[15,16],48],[[62,8,7,7,6,8,63],[[12,[64]]]],[[15,16,8],[[12,[58]]]],[[15,16,8],[[12,[58]]]],[[],[[12,[32]]]],[65,[[12,[32]]]],[[15,16],48],[[],[[12,[36]]]],[[],[[12,[58]]]],[[66,67],68],[[66,67],68],[[66,67],68],[[69,70,71,50,[12,[17]],61,72,73],[[12,[74]]]],[[69,75,71,8,50,[12,[17]],61,76,73],[[12,[74]]]],[[[12,[36]],77],48],[[[12,[36]],8],[[12,[32]]]],[[36,19],[[12,[78]]]],[[15,16,19],[[12,[78]]]],[8,[[12,[36]]]],[79,[[12,[36]]]],[[35,8],[[12,[32]]]],[35,48],[35,[[12,[36]]]],[[15,16],[[12,[36]]]],[[35,80],[[12,[32]]]],[[15,16,7,26,25],[[12,[22]]]],[[15,16,3,3,26,25],[[12,[22]]]],[[15,16,81,26,25],[[12,[22]]]],[[48,82,77,83],48],[[48,84],[[12,[32]]]],[[65,16],[[12,[36]]]],[[48,8],[[12,[32]]]],[[65,19],[[12,[78]]]],[[15,16,26,25],[[12,[22]]]],[[[12,[85]],86],[[12,[87]]]],[[[12,[85]]],[[12,[87]]]],[86,[[12,[87]]]],[[],[[12,[87]]]],[[9,3]],[[7,6,3,8,88,30,14],[[12,[89]]]],[[7,90,[12,[17]],3,8,88,91,14],[[12,[89]]]],[[92,93,33],94],[[95,86],[[12,[87]]]],[95,[[12,[87]]]],[[8,8,51],52],[[8,8,51,[12,[17]]],52],[[8,8],52],[[8,8,[12,[17]]],52],[56,52],[[56,[12,[17]]],52],[[8,8],[[12,[74]]]],[42,[[12,[78]]]],[[96,97],[[12,[17]]]],[[7,3,6,3,8,88,30,14],[[12,[89]]]],[[7,3,90,[12,[17]],3,8,88,91,14],[[12,[89]]]],[[52,16,61],[[12,[74]]]],[[52,61],[[12,[74]]]],[[52,15,16,61],48],[[52,15,16,61],[[12,[74]]]],[[38,61],[[12,[74]]]],[[52,15,16,98,15,61],[[12,[74]]]],[[8,8,61],[[12,[74]]]],[[69,99,52,8,71,61,33],[[12,[74]]]],[[69,99,52,8,61],[[12,[74]]]],[[69,99,52],[[12,[74]]]],[[69,100,99],[[12,[74]]]],[[8,8,51],52],[[],[[12,[17]]]],[[],[[12,[17]]]],[[36,16,16],[[12,[36]]]],[[[12,[23]],[12,[23]]],[[12,[23]]]],[[3,3,6,3,8,88,3,3,30,14],[[12,[89]]]],[[3,3,90,[12,[17]],3,8,88,3,3,91,14],[[12,[89]]]],[[[12,[89]],101],102],[[7,3,7,3,6,3,8,88,30,14],[[12,[89]]]],[[7,3,7,3,90,[12,[17]],3,8,88,91,14],[[12,[89]]]],[16,[[12,[36]]]],[[8,8],52],[35,[[12,[36]]]],[[15,16],[[12,[36]]]],[[15,16,103,15],[[12,[36]]]],[16,[[12,[36]]]],0,0,0,0,0,0,0,[104,[[12,[105]]]],0,0,0,0,0,[35,34],0,0,[[],106],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[107,3],0,[50,[[108,[30]]]],0,0,0,0,0,0,0,0,0,[[42,4],5],0,[[42,4,109],5],0,0,0,0,0,0,0,0,0,0,0,[[110,110,110],47],[[56,44,111,112,56],8],[[44,111,8],[[108,[30]]]],0,0,[[7,8,33,54,33],5],0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[113,114],[[115,4],5],[[115,4,109],5],[[42,3,3,4],5],0,0,0,0,0,[116,50],[[42,4,109],5],0,[[42,42],47],[[],[[12,[117]]]],[[],[[12,[117]]]],[[35,34]],[[118,98]],[[]],0,0,0,0,0,[82,35],0,0,0,0,0,[12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3],[8,8],[16,16],[119,119],[43,43],[16,16],[16,16],0,0,0,0,0,[16,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[111,[[108,[30]]]],0,0,[[5,120],66],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[32,121],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[113,114],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[122],[[24,52,16,101],15],[24,123],[[124,[12,[125]]]],[[126,5,127]],[[128,35]],[[5,42,3,3],5],[[129,42,3,3],129],[[5,3,3,3,4],5],[[129,3,3,3,4],129],[[13,[12,[125]]]],[[130,[12,[125]]]],[[69,131]],[[5,42,4],5],[[129,42,4,109],129],[[5,42,4,109],5],[[5,5,3,3,132],5],[[129,5],129],[[5,5,14,132],5],[[5,7,8,33],5],[[129,7,8,33],129],[[5,115,4],5],[[129,115,4,109],129],[[5,115,4,109],5],[[5,42,4,109],5],[[129,42,4,109],129],[[5,42,3,3,4],5],[[5,42,3,4],5],0,0,[[133,8,8,33]],[[133,52,16]],[[133,52]],[133],[[133,134]],[[133,52,30]],[[135,26,8,3,3,42],136],[[135,26,8,42],136],[[135,26,8,3,42],136],[[135,26,8],136],[[135,26,8,3,3,8,42],136],[[135,26,8,8,42],136],[[135,26,8,3,8,42],136],[[135,26,8,8,42],136],0,[137,51],[[24,138]],[[130,8,8,16]],[[139,[12,[117]]]],[140],[[140,8]],[[140,15,8],15],[[141,35,35,110]],[[141,35,35,108]],[[141,35,35,8]],[[141,35,35,35]],[[141,35,35,108]],[[66,35,142]],[[143,15,15,8]],[[144,144]],[[145,24]],[[146,27]],[[146,5,5],33],[5,16],[147,16],[13,16],[[10,42],42],[64,16],[[5,42,3,3,33],5],[[129,42,3,3,33],129],[[5,3,3,3,3,3],5],[[129,7,7,3],129],[[5,3,3,3,148,4,3,3],5],[[129,7,3,149,4,7],129],[[150,21],33],[[21,110],33],[[21,6,104],33],[[23,151],152],[[14,3],33],[27,[[108,[30]]]],[94,153],[94,154],[133,[[12,[137]]]],[[137,133,155],33],[94,92],[94,93],[104,98],[156],[156],[[157,157,33]],[[137,52,138,158,159,160,161]],[[74,52,138,158,159,162,163]],[[137,113,[12,[17]],138,56,158,159,160,161]],[[74,113,[12,[17]],138,56,158,159,162,163]],[[58,8,16],15],[[58,8],16],0,0,[[122,3,3,42],24],[[164,42,[12,[165]]],24],[[164,42,166],24],0,0,[167,105],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[168,8],0,[27,33],[150,33],[74,[[12,[169]]]],[124],[94,30],[[74,100],33],[87],[157],[[24,5,170,33]],[[24,115,170,33]],[[24,42,170,33]],[[24,171,170]],[[24,[12,[89]],170]],[156,156],[[[173,[172]]],[[173,[172]]]],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[[[196,[172]]],[[196,[172]]]],[197,197],[198,198],[199,199],[[[200,[172]]],[[200,[172]]]],[[[201,[172]]],[[201,[172]]]],[202,202],[203,203],[204,204],[205,205],[[[206,[172]]],[[206,[172]]]],[[[207,[172]]],[[207,[172]]]],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[49,49],[218,218],[[[219,[172]]],[[219,[172]]]],[[[220,[172]]],[[220,[172]]]],[101,101],[7,7],[56,56],[221,221],[138,138],[42,42],[222,222],[14,14],[223,223],[112,112],[51,51],[50,50],[113,113],[224,224],[225,225],[226,226],[227,227],[228,228],[229,229],[230,230],[37,37],[231,231],[232,232],[44,44],[111,111],[233,233],[116,116],[234,234],[235,235],[236,236],[97,97],[237,237],[96,96],[238,238],[239,239],[240,240],[241,241],[242,242],[243,243],[53,53],[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[77,77],[250,250],[251,251],[82,82],[83,83],[252,252],[253,253],[254,254],[255,255],[256,256],[104,104],[257,257],[258,258],[134,134],[259,259],[59,59],[170,170],[25,25],[260,260],[261,261],[19,19],[262,262],[20,20],[18,18],[263,263],[150,150],[264,264],[265,265],[46,46],[266,266],[47,47],[267,267],[268,268],[39,39],[41,41],[40,40],[269,269],[270,270],[271,271],[60,60],[272,272],[61,61],[273,273],[274,274],[275,275],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[284,284],[285,285],[286,286],[287,287],[288,288],[289,289],[99,99],[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[301,301],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[308,308],[21,21],[54,54],[4,4],[309,309],[148,148],[132,132],[310,310],[311,311],[312,312],[313,313],[314,314],[315,315],[316,316],[317,317],[318,318],[319,319],[58,58],[320,320],[321,321],[322,322],[323,323],[324,324],[71,71],[325,325],[326,326],[327,327],[153,153],[328,328],[329,329],[330,330],[331,331],[332,332],[157,157],[93,93],[333,333],[334,334],[92,92],[335,335],[336,336],[337,337],[338,338],[95,95],[339,339],[340,340],[94,94],[341,341],[342,342],[343,343],[344,344],[345,345],[346,346],[347,347],[348,348],[349,349],[350,350],[351,351],[352,352],[353,353],[354,354],[355,355],[356,356],[357,357],[[[358,[172]]],[[358,[172]]]],[359,359],[360,360],[361,361],[131,131],[362,362],[363,363],[364,364],[169,169],[365,365],[69,69],[366,366],[367,367],[368,368],[369,369],[370,370],[371,371],[158,158],[159,159],[372,372],[155,155],[147,147],[373,373],[122,122],[374,374],[375,375],[84,84],[376,376],[377,377],[378,378],[379,379],[380,380],[80,80],[381,381],[382,382],[383,383],[384,384],[385,385],[386,386],[387,387],[388,388],[389,389],[390,390],[391,391],[392,392],[393,393],[394,394],[395,395],[11,11],[117,117],[396,396],[31,31],[397,397],[398,398],[10,10],[399,399],[125,125],[13,13],[400,400],[401,401],[402,402],[403,403],[149,149],[404,404],[88,88],[89,89],[78,78],[405,405],[165,165],[406,406],[166,166],[407,407],[408,408],[130,130],[409,409],[29,29],[410,410],[411,411],[412,412],[413,413],[414,414],[115,115],[415,415],[416,416],[81,81],[65,65],[417,417],[418,418],[55,55],[419,419],[146,146],[420,420],[421,421],[74,74],[422,422],[423,423],[424,424],[425,425],[426,426],[427,427],[428,428],[136,136],[429,429],[430,430],[62,62],[431,431],[432,432],[433,433],[434,434],[435,435],[105,105],[23,23],[152,152],[151,151],[436,436],[91,91],[437,437],[438,438],[439,439],[440,440],[441,441],[442,442],[443,443],[444,444],[445,445],[446,446],[447,447],[448,448],[67,67],[449,449],[450,450],[127,127],[451,451],[452,452],[453,453],[454,454],[455,455],[456,456],[457,457],[458,458],[459,459],[460,460],[461,461],[120,120],[462,462],[463,463],[28,28],[464,464],[87,87],[106,106],[465,465],[466,466],[467,467],[468,468],[469,469],[470,470],[471,471],[472,472],[473,473],[474,474],[475,475],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[122],[129,129],0,[[[173,[476]],[173,[476]]],477],0,[167,21],[168,17],[52,17],[38,17],[133,17],[137,17],[137,50],[[69,50],33],0,[478,6],[479,33],[129,42],[[52,16],16],[[27,42,42],42],[[318,110],7],[38,33],[[52,8,8,16],16],[171,8],[5,42],[[1,16],16],[[37,16,16],16],[[318,110],110],[[24,14]],[[24,47]],[[5,3,3,3,3,3],5],[[129,7,7,3],129],[[5,42],33],[[5,3,3],33],[[171,480,480],33],[[115,42],33],[[171,138],33],[[171,171],33],0,0,[[36,16,16,15],16],[[32,481],[[12,[36]]]],[[482,15]],[[482,15]],[124,8],0,0,[117,8],[32,8],[150,8],[5,8],[32,8],[5,8],[[100,50,94],100],[[87,8,8,94,290,292,291,483],75],[[87,8,8,50,290,292,291,483],75],[[87,8,8,94,90,290,292,291,484,485,483],75],[[87,8,8,50,90,290,292,291,484,485,483],75],[[87,38,8,71,292,291,484,485,483],75],[[87,38,71,292,291,484,485,483],75],[[87,38,8,292,291,484,485,483],75],[[87,38,292,291,484,485,483],75],[[100,[12,[17]]],100],[[87,8,8,94,90,290,291,484,485],75],[[87,8,8,93,90,290,291,484,485],75],[[87,8,8,94,15,16,290,291,484,485],75],[[87,8,8,93,15,16,290,291,484,485],75],[[100,33],100],[32,392],[[100,8,8],100],[[32,389,385],9],[[117,8],[[12,[11]]]],0,[[5,3,3,3,3,3,3],5],[[129,7,7,7],129],0,0,0,0,0,0,[66,35],0,[13,33],0,0,[[14,221,14],33],0,[[],156],[[],[[173,[486]]]],[[],113],[[],104],[[],59],[[],170],[[],41],[[],40],[[],302],[[],4],[[],88],[[],120],[[87,75]],[94,336],[69],[27],[75],[70],[487],[66],[168],[133],[273],[488],[489],[490],[5],[140],[491],[144],[492],[493],[369],[479],[124],[13],[129],[494],[164],[171],[135],[141],[145],[487,[[12,[369]]]],[495,[[12,[32]]]],[129,5],[478,[[12,[64]]]],[69,492],[482,[[12,[36]]]],[482,48],0,0,0,0,0,[[27,42,42,39],42],[479,33],[[458,3,3,3],3],[[145,3,3,3],3],[[147,24,14]],[[74,24,3,3,229,27]],[[147,24,3,3]],[[74,[12,[369]],8,8],33],[[24,42,35,36]],[[24,42,3,3,33,27]],[[24,137,81,42,6,8,104,229,42,27]],[[24,3,3,3,27]],[[24,90,104]],[[24,115,115,27]],[[24,147,14]],[[24,147,3,3]],[[24,8,496,7,30,8,35,7,26,27]],[[24,8,496,7,7,26,27]],[[24,8,496,81,7,26,27]],[[24,137,3,3,229,27]],[[24,137,301,42,226,27]],[[24,137,138,42,226,27]],[[24,137,42,42,229,27,300]],[[24,137,42,229,27]],[[24,3,3,3,3,27]],[[24,284,[12,[105]],27]],[[24,42,27]],[[24,27]],[[24,7,6,7,104,27]],[[24,5,27]],[[24,78,14,27]],[[24,3,3,27]],[[24,299,16,7,27]],[[24,115,27]],[[24,42,27]],[[24,171,27]],[[24,42,3,3,27]],[[24,15,16,25,3,3,26,27]],[[24,22,3,3,27]],[[24,64,104,27]],[[24,12,104,27]],[69,361],[[42,33]],[14],[47],[[5,55,33]],[26],[[115,33]],[[5,55,33]],[[69,365]],[[128,365]],[[87,31]],[[115,33],66],0,0,0,[[234,116,8]],[122],[[156,156],33],[[[173,[497]],[173,[497]]],33],[[210,210],33],[[213,213],33],[[215,215],33],[[216,216],33],[[222,222],33],[[223,223],33],[[112,112],33],[[51,51],33],[[50,50],33],[[113,113],33],[[224,224],33],[[225,225],33],[[226,226],33],[[227,227],33],[[231,231],33],[[44,44],33],[[111,111],33],[[233,233],33],[[116,116],33],[[236,236],33],[[244,244],33],[[245,245],33],[[247,247],33],[[248,248],33],[[250,250],33],[[251,251],33],[[82,82],33],[[83,83],33],[[252,252],33],[[254,254],33],[[256,256],33],[[104,104],33],[[257,257],33],[[59,59],33],[[170,170],33],[[25,25],33],[[260,260],33],[[18,18],33],[[264,264],33],[[267,267],33],[[268,268],33],[[39,39],33],[[41,41],33],[[40,40],33],[[272,272],33],[[276,276],33],[[289,289],33],[[99,99],33],[[290,290],33],[[291,291],33],[[292,292],33],[[299,299],33],[[300,300],33],[[302,302],33],[[303,303],33],[[304,304],33],[[305,305],33],[[306,306],33],[[307,307],33],[[54,54],33],[[4,4],33],[[309,309],33],[[148,148],33],[[132,132],33],[[310,310],33],[[317,317],33],[[319,319],33],[[324,324],33],[[71,71],33],[[326,326],33],[[327,327],33],[[153,153],33],[[93,93],33],[[334,334],33],[[92,92],33],[[335,335],33],[[340,340],33],[[346,346],33],[[347,347],33],[[351,351],33],[[352,352],33],[[353,353],33],[[354,354],33],[[355,355],33],[[370,370],33],[[371,371],33],[[158,158],33],[[159,159],33],[[155,155],33],[[374,374],33],[[375,375],33],[[381,381],33],[[382,382],33],[[383,383],33],[[391,391],33],[[393,393],33],[[394,394],33],[[401,401],33],[[402,402],33],[[403,403],33],[[149,149],33],[[404,404],33],[[88,88],33],[[409,409],33],[[410,410],33],[[415,415],33],[[416,416],33],[[420,420],33],[[421,421],33],[[422,422],33],[[423,423],33],[[424,424],33],[[428,428],33],[[62,62],33],[[433,433],33],[[434,434],33],[[435,435],33],[[152,152],33],[[437,437],33],[[438,438],33],[[439,439],33],[[441,441],33],[[442,442],33],[[446,446],33],[[447,447],33],[[450,450],33],[[127,127],33],[[452,452],33],[[453,453],33],[[454,454],33],[[455,455],33],[[457,457],33],[[120,120],33],[[28,28],33],[[468,468],33],[[66,66],33],[[36,36],33],[[66,35],33],[[66,35,16],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[38,6,138],33],[[133,90,138]],[[140,8,8]],[[38,90,138],33],[[133,6,138]],[[133,90]],[[133,6]],0,[[426,498],33],[[24,488,8,7,14,229,27,300]],[[24,42,7,499,90,104]],0,[[133,133,27,134,101],33],[[38,38,138],33],[[133,133,138],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[270,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[146,30],0,[270,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[270,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,9],0,0,0,0,[146,30],[270,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[270,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[146,30],0,[270,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[315,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[315,109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[150,138,14,264,138],138],[[21,6],6],[[21,90,17,17],90],[[23,5,5,146,42],33],[[23,5,5,146,42,14],33],[[444,483],448],[[444,483],445],[164,[[12,[147]]]],[164,[[12,[78]]]],[[164,42],[[12,[78]]]],0,0,[24],[[74,424,325],326],[[87,325],326],[[74,325,293],326],[[87,[12,[137]],325],326],[74],[[87,[12,[137]]]],[[74,33]],[[87,[12,[137]]]],0,[[156,500],501],[[[173,[502]],500],501],[[174,500],501],[[175,500],501],[[176,500],501],[[177,500],501],[[178,500],501],[[179,500],501],[[180,500],501],[[181,500],501],[[182,500],501],[[183,500],501],[[184,500],501],[[185,500],501],[[186,500],501],[[187,500],501],[[188,500],501],[[189,500],501],[[190,500],501],[[191,500],501],[[192,500],501],[[193,500],501],[[194,500],501],[[195,500],501],[[[196,[502]],500],501],[[197,500],501],[[198,500],501],[[199,500],501],[[[200,[502]],500],501],[[[201,[502]],500],501],[[503,500],501],[[202,500],501],[[203,500],501],[[204,500],501],[[205,500],501],[[[206,[502]],500],501],[[[207,[502]],500],501],[[208,500],501],[[209,500],501],[[210,500],501],[[211,500],501],[[212,500],501],[[213,500],501],[[214,500],501],[[215,500],501],[[216,500],501],[[504,500],501],[[505,500],501],[[506,500],501],[[[12,[502]],500],501],[[66,500],501],[[49,500],501],[[218,500],501],[[[219,[502]],500],501],[[[220,[502]],500],501],[[101,500],501],[[7,500],501],[[56,500],501],[[221,500],501],[[138,500],501],[[42,500],501],[[222,500],501],[[14,500],501],[[223,500],501],[[112,500],501],[[51,500],501],[[50,500],501],[[113,500],501],[[168,500],501],[[52,500],501],[[224,500],501],[[225,500],501],[[226,500],501],[[227,500],501],[[228,500],501],[[229,500],501],[[230,500],501],[[38,500],501],[[36,500],501],[[37,500],501],[[231,500],501],[[232,500],501],[[44,500],501],[[111,500],501],[[233,500],501],[[116,500],501],[[234,500],501],[[235,500],501],[[236,500],501],[[97,500],501],[[237,500],501],[[96,500],501],[[239,500],501],[[240,500],501],[[243,500],501],[[244,500],501],[[245,500],501],[[246,500],501],[[17,500],501],[[507,500],501],[[247,500],501],[[248,500],501],[[249,500],501],[[77,500],501],[[250,500],501],[[251,500],501],[[82,500],501],[[83,500],501],[[252,500],501],[[253,500],501],[[254,500],501],[[255,500],501],[[256,500],501],[[104,500],501],[[257,500],501],[[258,500],501],[[133,500],501],[[134,500],501],[[259,500],501],[[59,500],501],[[170,500],501],[[25,500],501],[[260,500],501],[[261,500],501],[[19,500],501],[[262,500],501],[[20,500],501],[[18,500],501],[[263,500],501],[[150,500],501],[[264,500],501],[[265,500],501],[[46,500],501],[[266,500],501],[[47,500],501],[[267,500],501],[[268,500],501],[[39,500],501],[[41,500],501],[[40,500],501],[[270,500],501],[[271,500],501],[[60,500],501],[[272,500],501],[[61,500],501],[[273,500],501],[[274,500],501],[[275,500],501],[[276,500],501],[[277,500],501],[[278,500],501],[[279,500],501],[[280,500],501],[[281,500],501],[[282,500],501],[[283,500],501],[[284,500],501],[[285,500],501],[[286,500],501],[[287,500],501],[[288,500],501],[[289,500],501],[[99,500],501],[[290,500],501],[[291,500],501],[[292,500],501],[[295,500],501],[[296,500],501],[[297,500],501],[[24,500],501],[[298,500],501],[[299,500],501],[[300,500],501],[[301,500],501],[[302,500],501],[[488,500],501],[[303,500],501],[[304,500],501],[[305,500],501],[[306,500],501],[[489,500],501],[[490,500],501],[[307,500],501],[[308,500],501],[[508,500],501],[[21,500],501],[[54,500],501],[[4,500],501],[[309,500],501],[[5,500],501],[[148,500],501],[[132,500],501],[[310,500],501],[[311,500],501],[[312,500],501],[[313,500],501],[[140,500],501],[[509,500],501],[[314,500],501],[[315,500],501],[[491,500],501],[[316,500],501],[[317,500],501],[[318,500],501],[[319,500],501],[[58,500],501],[[320,500],501],[[323,500],501],[[324,500],501],[[71,500],501],[[325,500],501],[[326,500],501],[[327,500],501],[[153,500],501],[[328,500],501],[[329,500],501],[[330,500],501],[[510,500],501],[[331,500],501],[[332,500],501],[[157,500],501],[[93,500],501],[[333,500],501],[[334,500],501],[[92,500],501],[[335,500],501],[[336,500],501],[[337,500],501],[[338,500],501],[[95,500],501],[[339,500],501],[[340,500],501],[[342,500],501],[[144,500],501],[[345,500],501],[[86,500],501],[[346,500],501],[[347,500],501],[[348,500],501],[[349,500],501],[[350,500],501],[[351,500],501],[[352,500],501],[[353,500],501],[[354,500],501],[[355,500],501],[[356,500],501],[[357,500],501],[[[358,[502]],500],501],[[359,500],501],[[360,500],501],[[361,500],501],[[131,500],501],[[362,500],501],[[363,500],501],[[364,500],501],[[169,500],501],[[365,500],501],[[69,500],501],[[366,500],501],[[492,500],501],[[493,500],501],[[367,500],501],[[368,500],501],[[369,500],501],[[479,500],501],[[511,500],501],[[370,500],501],[[137,500],501],[[371,500],501],[[512,500],501],[[158,500],501],[[159,500],501],[[372,500],501],[[155,500],501],[[147,500],501],[[373,500],501],[[122,500],501],[[374,500],501],[[375,500],501],[[84,500],501],[[376,500],501],[[377,500],501],[[378,500],501],[[379,500],501],[[380,500],501],[[80,500],501],[[381,500],501],[[382,500],501],[[383,500],501],[[384,500],501],[[385,500],501],[[386,500],501],[[387,500],501],[[388,500],501],[[389,500],501],[[390,500],501],[[32,500],501],[[391,500],501],[[513,500],501],[[392,500],501],[[393,500],501],[[26,500],501],[[394,500],501],[[395,500],501],[[11,500],501],[[117,500],501],[[396,500],501],[[31,500],501],[[397,500],501],[[514,500],501],[[398,500],501],[[10,500],501],[[399,500],501],[[125,500],501],[[124,500],501],[[13,500],501],[[400,500],501],[[401,500],501],[[402,500],501],[[403,500],501],[[129,500],501],[[149,500],501],[[404,500],501],[[494,500],501],[[88,500],501],[[89,500],501],[[78,500],501],[[405,500],501],[[165,500],501],[[406,500],501],[[166,500],501],[[407,500],501],[[408,500],501],[[164,500],501],[[130,500],501],[[409,500],501],[[29,500],501],[[171,500],501],[[410,500],501],[[411,500],501],[[412,500],501],[[413,500],501],[[414,500],501],[[115,500],501],[[415,500],501],[[416,500],501],[[81,500],501],[[65,500],501],[[417,500],501],[[418,500],501],[[55,500],501],[[515,500],501],[[482,500],501],[[419,500],501],[[146,500],501],[[420,500],501],[[421,500],501],[[74,500],501],[[422,500],501],[[423,500],501],[[424,500],501],[[22,500],501],[[425,500],501],[[426,500],501],[[427,500],501],[[498,500],501],[[428,500],501],[[135,500],501],[[136,500],501],[[64,500],501],[[429,500],501],[[430,500],501],[[62,500],501],[[478,500],501],[[431,500],501],[[432,500],501],[[141,500],501],[[516,500],501],[[433,500],501],[[434,500],501],[[435,500],501],[[105,500],501],[[23,500],501],[[152,500],501],[[151,500],501],[[436,500],501],[[91,500],501],[[437,500],501],[[438,500],501],[[439,500],501],[[440,500],501],[[441,500],501],[[442,500],501],[[443,500],501],[[444,500],501],[[445,500],501],[[446,500],501],[[447,500],501],[[448,500],501],[[67,500],501],[[68,500],501],[[167,500],501],[[102,500],501],[[449,500],501],[[450,500],501],[[127,500],501],[[126,500],501],[[451,500],501],[[452,500],501],[[453,500],501],[[454,500],501],[[455,500],501],[[456,500],501],[[457,500],501],[[458,500],501],[[459,500],501],[[145,500],501],[[460,500],501],[[517,500],501],[[461,500],501],[[120,500],501],[[462,500],501],[[463,500],501],[[28,500],501],[[518,500],501],[[519,500],501],[[464,500],501],[[87,500],501],[[106,500],501],[[520,500],501],[[128,500],501],[[466,500],501],[[467,500],501],[[468,500],501],[[469,500],501],[[470,500],501],[[471,500],501],[[472,500],501],[[473,500],501],[[474,500],501],0,0,0,0,0,[87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[153,154],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[309,310],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[154,153],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[168,33],[17,33],[17,33],[[17,17,97]],[[13,9],30],[13,8],[74,30],[[[173,[[0,[[522,[[521,[9]]]],[523,[[521,[9]]]]]]]],16,9],48],[492,366],[[133,8,8],15],[[38,8,8],110],[515,15],[75,94],[70,94],[337,94],[338,94],[[74,423],70],[[74,423],75],[24,61],[[27,104],104],[[171,5],33],[[133,42]],[5,42],[147,42],[32,42],[[133,138]],[487,24],[74,24],[[38,8,8],6],[[38,8,8],90],[24,138],[[32,66]],[[117,8,66]],[143,9],[[70,329],33],[[75,328],33],[133,30],[5,30],[147,30],[130,30],[[143,52,253],[[108,[48]]]],[143,[[108,[48]]]],[146,3],[[150,8],150],[[26,496,8,7,3,3,27],[[108,[48]]]],[[22,3,3,27],8],[[32,496,8,480],33],[[5,7],33],[494,3],[24,42],[24,47],[[314,3,14,524],33],[[494,3,14,525],33],[[145,14]],[14,3],[[26,395],3],[[14,3],33],[14,3],[[70,338],33],[[75,337],33],[[26,496,5],33],[[26,496,8,98,15]],[[143,52,15,16,253],82],[[514,52,15,16],33],[[5,8],7],[[5,7,8],8],[[26,496,8,7,7]],[[314,3,7,107],33],[[494,3,7,107],33],[[32,66],33],[[24,61],33],[13,115],[164,24],[87,16],[[87,8,16]],[87,16],[[87,8,16]],[[47,3]],[24,8],[315,3],[[143,15,8,16],8],[[314,3,3,5,33],33],[[494,3,3,5,33],33],[5,30],[146,421],[24,74],[[32,481,16,16,15],16],[[32,481],16],[[32,481],8],[69,281],[69,281],[24,61],[24,14],[26,32],[32,8],[[32,380,8],8],[[32,377,8],8],[[5,9,8],8],[[26,496,8,3,42,27]],[[26,496,8,3,3]],[[143,2],82],[[514,2],33],[[[173,[[0,[[522,[[521,[9]]]],[523,[[521,[9]]]]]]]],16],33],[75],0,0,0,0,0,0,0,0,0,[[128,35],33],[137,33],0,0,0,0,0,[[156,526]],[[[173,[527]],526]],[[210,526]],[[213,526]],[[215,526]],[[216,526]],[[222,526]],[[223,526]],[[112,526]],[[51,526]],[[50,526]],[[113,526]],[[224,526]],[[225,526]],[[226,526]],[[227,526]],[[231,526]],[[44,526]],[[111,526]],[[233,526]],[[116,526]],[[236,526]],[[244,526]],[[245,526]],[[247,526]],[[248,526]],[[250,526]],[[251,526]],[[82,526]],[[83,526]],[[252,526]],[[254,526]],[[256,526]],[[104,526]],[[257,526]],[[59,526]],[[170,526]],[[25,526]],[[260,526]],[[18,526]],[[264,526]],[[267,526]],[[268,526]],[[39,526]],[[41,526]],[[40,526]],[[272,526]],[[276,526]],[[289,526]],[[99,526]],[[290,526]],[[291,526]],[[292,526]],[[299,526]],[[300,526]],[[302,526]],[[303,526]],[[304,526]],[[305,526]],[[306,526]],[[307,526]],[[54,526]],[[4,526]],[[309,526]],[[148,526]],[[132,526]],[[310,526]],[[317,526]],[[319,526]],[[324,526]],[[71,526]],[[326,526]],[[327,526]],[[153,526]],[[93,526]],[[334,526]],[[92,526]],[[335,526]],[[340,526]],[[346,526]],[[347,526]],[[351,526]],[[352,526]],[[353,526]],[[354,526]],[[355,526]],[[370,526]],[[371,526]],[[158,526]],[[159,526]],[[155,526]],[[374,526]],[[375,526]],[[381,526]],[[382,526]],[[383,526]],[[391,526]],[[393,526]],[[394,526]],[[401,526]],[[402,526]],[[403,526]],[[149,526]],[[404,526]],[[88,526]],[[409,526]],[[410,526]],[[415,526]],[[416,526]],[[420,526]],[[421,526]],[[422,526]],[[423,526]],[[424,526]],[[428,526]],[[62,526]],[[433,526]],[[434,526]],[[435,526]],[[152,526]],[[437,526]],[[438,526]],[[439,526]],[[441,526]],[[442,526]],[[446,526]],[[447,526]],[[450,526]],[[127,526]],[[452,526]],[[453,526]],[[454,526]],[[455,526]],[[457,526]],[[120,526]],[[28,526]],[[468,526]],0,[24,52],[[5,8]],[[129,8,8]],0,0,0,[478,63],[[128,327,[108,[48]],[108,[48]],[108,[48]],[108,[48]],528],33],[[1,15,38],33],0,0,0,0,[[66,16,35]],[[140,8],15],[[66,16,35,16]],[[140,8,8,15],15],[[66,16,30,8]],[[66,16,480]],[[66,16,529,8]],[[66,16,3]],[[66,16,30]],[[66,16,48,8]],[[66,16,530]],[[115,3,3,115]],[[133,230],33],[[133,52,15,16,98,15],33],[[133,38],33],[[5,5,3,5],33],[[13,13,3,13]],[[138,138,138],33],[[42,42],33],[[42,42,42],33],[[171,138],33],[[171,171],33],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,96]],[510],[331],[332],[[47,47],33],[[89,14,88],137],[137,33],[21,33],[494,33],[311,33],[[150,21],33],[[100,75],33],[[74,100],33],[5,33],0,[5,33],[5,33],[133,33],[[5,5],33],[5,33],[[5,7],33],[94,33],[[17,96],33],[[5,42],33],[75,33],[70,33],[[5,115],33],[[13,115,33,109],33],[[5,42,33,4],33],[17,33],[[75,75],33],[[14,3],33],[27,33],[[1,234],33],[5,33],[13,33],[115,33],[54,33],[54,33],[51,33],[[138,138]],[[42,42]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[117,35,80],[[12,[32]]]],[[5,3,3],5],[[129,7],129],0,0,0,0,0,0,0,0,0,0,[135,[[12,[22]]]],[[168,51],168],[[444,[12,[36]],[358,[167]]],[[12,[105]]]],[[32,84],[[12,[32]]]],[[444,[12,[36]]],[[12,[21]]]],[[444,[12,[36]],12,16],[[12,[21]]]],[[444,[12,[36]],[358,[167]]],[[12,[21]]]],[[168,[12,[17]]],168],[[52,[12,[17]]],52],[[137,[12,[17]],87],[[12,[137]]]],[17,[[12,[17]]]],[[168,50],168],[[137,50,[12,[17]],87],[[12,[137]]]],[[21,[12,[21]]],[[12,[21]]]],[[37,56],37],[[117,[12,[36]],8],[[12,[32]]]],[[117,35,8],[[12,[32]]]],[[117,48,8],[[12,[32]]]],[[117,48,84],[[12,[32]]]],[[444,69,[12,[36]],[358,[167]],14,52,33],[[12,[137]]]],[74,[[12,[137]]]],[[74,138],[[12,[137]]]],[17,[[12,[17]]]],[[137,87],[[12,[137]]]],[147,[[12,[78]]]],[[487,94,8,8,290,71,50,51,[12,[17]],531,532,533],[[12,[137]]]],[[137,87,371],[[12,[137]]]],[[137,88,88,229,14],[[12,[89]]]],[[137,88,88,229,14],[[12,[89]]]],[[137,229,14],[[12,[89]]]],[[137,229,14],[[12,[89]]]],[17,[[12,[17]]]],[[133,88,88,229,14],[[12,[89]]]],[[137,88,88,229,14],[[12,[89]]]],[[78,88,88,226,14,42],[[12,[89]]]],[[444,[12,[36]],12,16,14],[[12,[89]]]],[[133,88,88,229,14],[[12,[89]]]],[[137,88,88,229,14],[[12,[89]]]],[[444,[12,[36]],[358,[167]],14],[[12,[89]]]],[[133,229,14],[[12,[89]]]],[[137,229,14],[[12,[89]]]],[[133,229,14],[[12,[89]]]],[[137,229,14],[[12,[89]]]],[[37,111],37],[[24,52,61],[[12,[74]]]],[[74,52],[[12,[74]]]],[[74,8,8],[[12,[74]]]],[94,94],[[89,[12,[21]]],[[12,[89]]]],[[150,14],[[12,[150]]]],[[89,14],[[12,[89]]]],[[26,3],26],[[487,475,[12,[17]],531,532,533],[[12,[137]]]],[[47,110,110,110,110],266],[[14,29,29,8]],[[14,29,7,8]],[[14,7,7,8]],[[14,3],3],[[14,42,42,222],33],[[14,42,42]],[[14,107,107,8]],[[14,3,3,7]],[[117,35],[[12,[11]]]],[[117,35,80],[[12,[32]]]],[[117,35,80,35,8,530],[[12,[32]]]],[[11,80],[[12,[32]]]],0,0,0,0,0,0,0,0,0,[69,8],[69,8],0,0,0,0,[[26,15,16,25,42,27],3],0,0,[[5,3,3],5],[[129,7],129],[104,534],0,0,[23,33],[[],156],[[37,50,16],1],[[507,244,48,112],143],[[],27],[[[12,[283]],[12,[150]],27],535],[[],75],[[],70],[100,487],[[],495],[[],139],[[],85],[[37,75,71],536],[[],173],[[],66],[[],168],[[56,44,111,113,112,233,233],37],[537,234],[[],133],[[],61],[[16,8],273],[[],275],[[],24],[[[12,[137]],42,42,8,110,109,33],488],[[[12,[285]],101],489],[283,490],[[],5],[[],311],[8,140],[[],491],[[7,7],318],[[],331],[[],332],[94,94],[[],144],[[[12,[538]],33],69],[[364,282],366],[33,492],[[48,363],493],[[87,369],479],[[],147],[55,122],[[80,33],32],[[],26],[[52,30],514],[[],125],[[],124],[[],400],[[],129],[[],494],[[],164],[[8,8,15,16],130],[[],171],[171,411],[[171,138],412],[[171,8,8,8],413],[[],515],[482,482],[420,146],[[8,8,61],74],[22,426],[[],135],[[62,8,8,30],478],[[],141],[[[12,[20]]],167],[[],458],[[],459],[[],145],[[15,16,98,98,98],518],[[324,86],87],[128,128],[[37,94,290,71],475],[[37,116,16],1],[[90,17],27],[[8,8,290,328,483],75],[[8,8,8,8,329],70],[16,66],[[50,51,[12,[17]]],168],[133,133],[[30,272],61],[[16,15,16,8],273],[[273,276],275],[[8,8,61],24],[[[12,[137]],42,42,110,109],488],[489,489],[490,490],[5,5],[[5,33],311],[[15,8,8],140],[[5,33,3],491],[108,144],[493,493],[[[12,[32]],3],26],[13,400],[54,129],[[5,33,3],494],[171,171],[16,515],[[27,39,3],146],[[52,61],74],[27,27],[[8,8,290,337,483],75],[[8,8,8,8,338],70],[35,66],[168,168],[133,133],[61,61],[[[12,[283]]],24],[[],488],[489,489],[140,140],[[[12,[32]]],26],[5,129],[138,171],[[15,16,33],515],[[27,3],146],[27,27],[75,75],[70,70],[[35,16],66],[168,168],[133,24],[488,488],[140,140],[[[12,[32]],3,3,3],26],[[[12,[36]]],515],[66,66],[[133,61],24],[66,66],[138,24],[539,66],[483,66],[[490,[12,[283]],[12,[150]],27]],[[109,109,109,109,109,109],[[173,[[108,[9]]]]]],[[9,9],[[173,[[108,[9]]]]]],[[109,109],[[173,[[108,[9]]]]]],[[30,30,30],[[173,[[108,[9]]]]]],[275,15],[[311,7],310],[[313,7],310],[491,[[12,[314]]]],[479],[[400,7],9],[411],[412],[[413,8,8],33],[[426,427],33],[494,33],[7,33],[29,33],[47],[27,33],[[74,422]],[147],[133],[130],[[5,3,3,5]],[[129,3,3],129],0,0,[87,297],[87,33],[[171,138,171,410],33],[[171,171,138,410],33],[[171,171,171,410],33],[[32,8],48],[[32,8],48],[[143,8],8],0,0,0,0,0,0,0,[482],0,[[[173,[540]],[173,[540]]],[[98,[477]]]],[[459,458,14]],0,[400,9],[[133,38],33],[[24,38],33],[[137,38],33],[[74,38],33],[[87,541,33]],[133,101],[2,1],[309,16],[310,16],[[129,7,8],129],[273],[273],0,[478,7],0,[[14,14],14],[[14,3,3,3],14],[[14,3],14],[[14,3,3,3,3],14],[[14,3,3],14],[[14,3,3,3,3],14],[[14,3,3],14],[[114,110,110,110,110]],[[14,3,3],14],[[47,3,3,3],47],[[14,14],14],[[47,14],47],[[14,3,3,3],14],[[14,3],14],[[14,3,3,3,3],14],[[47,3,3],47],[[14,3,3],14],[[47,3,3,3],47],[[14,3,3,3,3],14],[[14,3,3],14],[[14,3,3],14],[[47,3,3,3],47],[[87,36,36],33],[140,15],[[482,482]],[[66,35,142]],[[14,3],33],[275,15],[[66,35,142]],[[24,5,287]],[[87,16,33]],[[87,33]],[273,15],[273,15],[[5,3,3,3,3],5],[[129,7,7],129],[[143,234,1],33],[[514,234,1],33],[[24,42],33],[[24,5],33],[[5,3,3,3,148,4,3,3],5],[[5,3,3,3,3,3],5],[[129,7,7,3],129],[[5,3,3,3,3,3,3],5],[[129,7,7,7],129],[[5,3,3],5],[[129,7],129],[[5,3,3],5],[[5,3,3,3,3],5],[[129,7,7],129],[[482,15,16,16],33],[[5,15,16],16],[[171,15,16],16],[[115,15,16],16],[[65,16],33],[[38,52,15,16,8,8],33],[[133,52,15,16,8,8],33],[[24,52,15,16,8,8],33],[[137,87,52,15,16,8,8,371],33],[[74,38,8,8],33],[[133,38,8,8],33],[[24,38,8,8],33],[[137,87,38,8,8,371],33],[[74,52,15,16,8,8],33],[[24,133,8,8],33],[[137,52,15,16,8,8,371],33],[[74,133,8,8],33],[[137,38,8,8,371],33],[[65,542],33],[[65,480],33],[[65,543],33],[[65,3],33],[74,288],[74,69],[27,[[12,[105]]]],[27,[[12,[21]]]],[168,[[12,[17]]]],[52,[[12,[17]]]],[38,[[12,[17]]]],[133,[[12,[17]]]],[137,[[12,[17]]]],[137,[[12,[36]]]],[27,[[12,[150]]]],[27,[[12,[10]]]],[27,[[12,[23]]]],[27,[[12,[89]]]],[26,[[12,[32]]]],[49],[[137,[12,[17]]],[[12,[137]]]],[87],[[66,16,16]],[[128,35],33],[[140,8]],0,[[140,8]],[27],[66],[14,14],[38],[133],[[275,273,276]],[[490,283]],[5,5],[140],[[491,5,33,3]],[124],[13],[129,129],[[411,171]],[482],[458],[459],[[38,52,15,16]],[[38,230],33],[[87,30]],[87],[24],[[66,16]],[[140,8]],[[126,5],33],[74],[24],[145],[[24,8]],[[5,5],5],[5,5],[411,33],[143,33],0,[[24,3]],[[24,3,3,3]],[[145,3]],[[145,3]],[[145,3]],[24,8],[145],[[24,42,27],8],[[24,298],8],[[24,42,110],8],[[7,3,7]],[[24,3,3]],[[38,38,229],33],[[137,38,229,371],33],[17,[[12,[36]]]],[[20,262],[[12,[36]]]],[5,[[12,[36]]]],[[32,55,391]],[[78,262],[[12,[36]]]],[[22,262,15,16],16],[[20,15,16,262],16],[[32,391],[[12,[36]]]],[[78,55,262]],[[22,262],[[12,[36]]]],[[[173,[[0,[[522,[[521,[9]]]],[523,[[521,[9]]]]]]]],16,9,48]],[[66,35]],[[510,331,332,544]],[[66,35,16]],[[14,3],14],[[27,545,545,545,545]],[[14,3],14],[[133,51],33],[[27,110]],[[87,70,293,293,484,485],33],[[87,75,293,293,484,485],33],[[26,33]],[[27,104]],[[27,[12,[105]]]],[[42,7,8],33],[[42,7,8]],[[27,6]],[[27,90,17]],[[27,[12,[21]]]],[[38,[12,[17]]]],[[114,114,114]],[[14,14,14],14],[[47,47,47],47],[[515,[12,[36]]]],[[26,394]],[[26,33]],[[26,33]],[171,33],[146],[[495,80]],[[26,33]],[[495,496,110,5]],[146],[[26,260]],[114],[[27,[12,[150]]]],[133],[130],[[133,52,16],33],[[5,3,3]],[[7,3],33],[[7,3,3,3],33],[[26,33]],[[27,[12,[10]]]],[[24,47]],[[24,14]],[[515,15,16]],[[495,395,110]],[[75,293]],[[70,293]],[[115,42,3,3,3,3]],[[7,3,3],33],[[115,42]],[[311,5,33]],[[313,5]],[[494,5,33]],[[171,5,171],33],[[27,[12,[23]]]],[[400,13]],[[133,[12,[130]],8,8]],[[133,15]],[[14,7,7,8],33],[[14,81],14],[[171,138],33],[[115,42,107]],[[14,42,42,223],33],[[115,42,3,3]],[[171,138,8],33],[[171,171],33],[[87,16]],[[87,8,16]],[[14,3,3,3],14],[[47,46,3],47],[[14,3],14],[[47,46,3,3],47],[[114,110]],[[114,110,110,110,110]],[[14,3,3,3,3],14],[[14,3,3],14],[[26,3]],[[27,[12,[89]]]],[[14,3,3,3,3],14],[[14,3,3],14],[[26,3]],[[14,3,3,3,3],14],[[14,3,3],14],[[26,3]],[[143,244]],[[27,33]],[[27,41]],[[27,40]],[[27,3]],[[146,3,33]],[[27,3]],[[27,39]],[[26,33]],[[14,3,3],14],[[[173,[[0,[[522,[[521,[9]]]],[523,[[521,[9]]]]]]]],16,33]],[[270,109]],[[146,30]],[[270,109]],[[270,109]],[[5,9]],[[5,9]],[[146,30]],[[270,109]],[[270,109]],[[146,30]],[[270,109]],[[315,109]],[[315,109]],0,0,[167,89],0,[168,8],[140],0,[445,16],[69,[[12,[169]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[24,3,3]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[143,8],33],[515],0,0,0,0,0,[129,5],[444,539],[[143,52,15,16,253],82],[[143,52,253],82],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[87],0,[[87,33],33],[87,33],[[66,66]],[[133,133]],[[5,5]],[[140,140]],[[171,171]],0,0,0,0,0,[[24,171]],[478,7],[[32,15,16,25,496,8],8],[[26,15,16,25,496,8],8],[69,349],[69,349],[87,[[12,[538]]]],[[431,66]],[[17,53]],[[42,7]],[[81,3,3,7]],[[81,3,3,7]],[[246,97],33],[[17,97],33],0,[2,45],[536,45],[[37,30],45],[475,45],[54,54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,110]],[[17,96]],0,[[5,14,5,222]],[[115,14,115],33],[[458,47,458]],[[24,3,3]],[[171,8,8,171]],[[145,3,3,3]],[47,47],0,[[133,8,8,33],33],[[133,52,16],33],[[133,134],33],[[133,52,30],33],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[[],546],[167,9],0,0,[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],[[],547],0,0,[[32,530],496],[[26,530],496],[[32,530,8,496]],[[26,530,8,496]],[444,16],[49,33],[49],[459],[[87,75,90,484,485],33],[[87,75,50,90,484,485],33],[[87,75,38,8,71,484,485],33],[[87,75,38,8,484,485],33],[[87,75,90,484,485],33],[[87,75,15,16,484,485],33],0,0,0,[85,33],0,0,0,0,0,0,0,0,0,0,0,0,[[74,8,323,33],33],[[87,8,323,33],33],0,[137,[[12,[137]]]],[[55,529,8],33],[[55,480],33],[[55,30,8],33],[[55,16],33],[[133,38,8,8],33],[[24,52,15,16,8,8],33],[[74,38,8,8]],[[24,133,8,8],33],[[74,133,8,8]],[[55,3],33],[[55,3],33],[[55,65,16],33],[[482,55],33],[[482,482],33],[[17,15],16],[[5,15],16],[[171,15],16],[[115,15],16],[[482,55],33],0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"SkYUVAPixmapInfo",0],[3,"SkYUVAPixmaps",0],[6,"SkScalar",0],[4,"SkPathDirection",0],[3,"SkPath",0],[6,"SkColor",0],[3,"SkPoint",0],[6,"c_int",11782],[15,"u8"],[3,"SkMaskFilter",0],[3,"SkFontStyleSet",0],[3,"sk_sp",0],[3,"SkPathRef",0],[3,"SkMatrix",0],[4,"c_void",11782],[15,"usize"],[3,"SkColorSpace",0],[4,"SkFlattenable_Type",0],[3,"SkDeserialProcs",0],[3,"SkFlattenable",0],[3,"SkColorFilter",0],[3,"SkTextBlob",0],[3,"SkPathEffect",0],[3,"SkCanvas",0],[4,"SkTextEncoding",0],[3,"SkFont",0],[3,"SkPaint",0],[4,"SkTextUtils_Align",0],[3,"SkPoint3",0],[15,"u32"],[3,"SkTraceMemoryDump",0],[3,"SkTypeface",0],[15,"bool"],[6,"SkFlattenable_Factory",0],[6,"c_char",11782],[3,"SkData",0],[3,"SkYUVAInfo",0],[3,"SkPixmap",0],[4,"SkPaint_Style",0],[4,"SkPaint_Join",0],[4,"SkPaint_Cap",0],[3,"SkRect",0],[6,"SkGraphics_OpenTypeSVGDecoderFactory",0],[4,"SkYUVAInfo_PlaneConfig",0],[6,"SkYUVAInfo_YUVALocations",0],[3,"SkV3",0],[3,"SkM44",0],[15,"u64"],[3,"SkString_Rec",0],[4,"SkColorType",0],[4,"SkAlphaType",0],[3,"SkImageInfo",0],[3,"skcms_ICCProfile",0],[4,"SkPathFillType",0],[3,"SkWStream",0],[3,"SkISize",0],[6,"SkDataTable_FreeProc",0],[3,"SkDataTable",0],[4,"SkBlurStyle",0],[3,"SkRasterHandleAllocator_Rec",0],[3,"SkSurfaceProps",0],[4,"SkVertices_VertexMode",0],[15,"u16"],[3,"SkVertices",0],[3,"SkStream",0],[3,"SkString",0],[3,"SkRuntimeEffect_Options",0],[3,"SkRuntimeEffect_Result",0],[3,"GrRecordingContext",0],[3,"GrBackendRenderTarget",0],[4,"GrSurfaceOrigin",0],[6,"SkSurface_RenderTargetReleaseProc",0],[6,"SkSurface_ReleaseContext",0],[3,"SkSurface",0],[3,"GrBackendTexture",0],[6,"SkSurface_TextureReleaseProc",0],[3,"SkPngChunkReader",0],[3,"SkPicture",0],[6,"FILE",0],[3,"SkFontStyle",0],[3,"SkRSXform",0],[4,"SkCodec_Result",0],[4,"SkCodec_SelectionPolicy",0],[3,"SkFontArguments",0],[3,"GrGLInterface",0],[3,"GrContextOptions",0],[3,"GrDirectContext",0],[4,"SkTileMode",0],[3,"SkShader",0],[6,"SkColor4f",0],[3,"SkGradientShader_Interpolation",0],[4,"GrColorType",0],[4,"SkTextureCompressionType",0],[3,"GrBackendFormat",0],[3,"GrMockOptions",0],[3,"skcms_TransferFunction",0],[3,"skcms_Matrix3x3",0],[4,"Option",11783],[4,"skgpu_Budgeted",0],[3,"SkSurfaceCharacterization",0],[3,"SkIPoint",0],[3,"SkRuntimeEffect_TracedShader",0],[6,"SkData_ReleaseProc",0],[4,"SkBlendMode",0],[3,"SkBlender",0],[3,"GrDirectContext_DirectContextID",0],[6,"SkVector",0],[15,"array"],[6,"c_uint",11782],[15,"f32"],[4,"SkYUVAInfo_Subsampling",0],[4,"SkEncodedOrigin",0],[4,"SkYUVColorSpace",0],[3,"SkColorMatrix",0],[3,"SkRRect",0],[4,"SkYUVAPixmapInfo_DataType",0],[3,"SkFontMgr",0],[6,"SkTypeface_FactoryId",0],[6,"SkGraphics_ImageGeneratorFromEncodedDataFactory",0],[4,"SkParsePath_PathEncoding",0],[6,"SkTypefaceID",0],[3,"SkDocument",0],[6,"SkRasterHandleAllocator_Handle",0],[3,"SkIDChangeListener_List",0],[3,"SkIDChangeListener",0],[3,"SkOpBuilder",0],[4,"SkPathOp",0],[3,"GrGLExtensions",0],[3,"SkPathBuilder",0],[3,"SkPixelRef",0],[3,"GrOnFlushCallbackObject",0],[4,"SkPath_AddPathMode",0],[3,"SkBitmap",0],[3,"SkBitmap_Allocator",0],[3,"SkTextBlobBuilder",0],[3,"SkTextBlobBuilder_RunBuffer",0],[3,"SkImage",0],[3,"SkIRect",0],[3,"SkOrderedFontMgr",0],[3,"SkTDStorage",0],[3,"SkPDF_AttributeList",0],[6,"va_list",0],[3,"SkCodec",0],[3,"GrDriverBugWorkarounds",0],[3,"Sk3DView",0],[3,"SkStrokeRec",0],[3,"SkDrawable",0],[4,"SkPath_ArcSize",0],[4,"SkPathBuilder_ArcSize",0],[3,"SkImageFilter",0],[3,"SkPathEffect_DashInfo",0],[4,"SkPathEffect_DashType",0],[4,"GrGLFormat",0],[6,"GrGLenum",0],[4,"SkImage_LegacyBitmapMode",0],[3,"__BindgenUnionField",0],[3,"GrGLBackendTextureInfo",0],[4,"SkImage_RescaleGamma",0],[4,"SkImage_RescaleMode",0],[6,"SkImage_ReadPixelsCallback",0],[6,"SkImage_ReadPixelsContext",0],[6,"SkSurface_ReadPixelsCallback",0],[6,"SkSurface_ReadPixelsContext",0],[3,"SkPictureRecorder",0],[3,"SkBBoxHierarchy",0],[3,"SkBBHFactory",0],[3,"SkRuntimeEffect_ChildPtr",0],[3,"SkColorInfo",0],[3,"SkCapabilities",0],[4,"SkClipOp",0],[3,"SkRegion",0],[8,"Clone",11784],[3,"__BindgenBitfieldUnit",0],[3,"std_tuple",0],[3,"std_tuple__IsThisTuple",0],[3,"std_tuple__EnableUTypesCtor",0],[3,"std_tuple__EnableCopyFromOtherTuple",0],[3,"std_tuple__EnableMoveFromOtherTuple",0],[3,"std_tuple__EnableImplicitCopyFromPair",0],[3,"std_tuple__EnableExplicitCopyFromPair",0],[3,"std_tuple__EnableImplicitMoveFromPair",0],[3,"std_tuple__EnableExplicitMoveFromPair",0],[3,"std_input_iterator_tag",0],[3,"std_forward_iterator_tag",0],[3,"std_bidirectional_iterator_tag",0],[3,"std_random_access_iterator_tag",0],[3,"std_iterator_traits",0],[3,"std_allocator_traits",0],[3,"std___compressed_pair",0],[3,"std_allocator",0],[3,"std_allocator_rebind",0],[3,"std_default_delete",0],[3,"std___unique_ptr_deleter_sfinae",0],[3,"std_unique_ptr",0],[3,"std_unique_ptr___nat",0],[3,"std_chrono_duration",0],[3,"std_chrono_duration___no_overflow",0],[3,"std_atomic",0],[3,"std_iterator",0],[3,"std_reverse_iterator",0],[3,"std___wrap_iter",0],[3,"std_optional",0],[3,"std_optional__CheckOptionalArgsConstructor",0],[3,"std_optional__CheckOptionalLikeConstructor",0],[3,"std_char_traits",0],[3,"std_basic_string_view",0],[3,"std_fpos",0],[3,"std_basic_string",0],[3,"std_basic_string___long",0],[4,"std_basic_string__bindgen_ty_1",0],[3,"std_basic_string___short",0],[3,"std_basic_string___short__bindgen_ty_1",0],[4,"std_basic_string__bindgen_ty_2",0],[3,"std_basic_string___raw",0],[4,"std_basic_string__bindgen_ty_3",0],[4,"std_byte",0],[19,"__mbstate_t",0],[3,"TraitObject",0],[3,"VecSink",0],[3,"Sink",0],[3,"SkSize",0],[4,"SkApplyPerspectiveClip",0],[4,"SkMatrix_ScaleToFit",0],[4,"SkColorChannel",0],[4,"SkColorChannelFlag",0],[4,"SkFilterMode",0],[4,"SkMipmapMode",0],[3,"SkCubicResampler",0],[3,"SkSamplingOptions",0],[3,"SkMask",0],[4,"SkYUVAInfo_YUVAChannels",0],[3,"SkYUVAInfo_YUVALocation",0],[4,"SkYUVAInfo_Siting",0],[3,"SkYUVAPixmapInfo_SupportedDataTypes",0],[3,"SkOnce",0],[4,"SkOnce_State",0],[3,"skcms_Matrix3x4",0],[19,"skcms_Curve",0],[3,"skcms_Curve__bindgen_ty_1",0],[3,"skcms_Curve__bindgen_ty_2",0],[3,"skcms_A2B",0],[3,"skcms_B2A",0],[3,"skcms_CICP",0],[4,"skcms_PixelFormat",0],[4,"skcms_AlphaFormat",0],[3,"SkColorSpacePrimaries",0],[4,"SkEncodedInfo_Alpha",0],[4,"SkEncodedInfo_Color",0],[3,"SkNoncopyable",0],[4,"SkCodecAnimation_DisposalMethod",0],[4,"SkCodecAnimation_Blend",0],[4,"SkCodec_ZeroInitialized",0],[3,"SkCodec_Options",0],[4,"SkCodec_SkScanlineOrder",0],[3,"SkCodec_FrameInfo",0],[4,"SkCodec_XformTime",0],[4,"SkBlendModeCoeff",0],[3,"SkMipmap",0],[3,"SkBitmap_HeapAllocator",0],[4,"SkFontHinting",0],[3,"SkReadBuffer",0],[3,"SkSerialProcs",0],[3,"SkFlattenable_PrivateInitializer",0],[4,"SkImageFilter_MapDirection",0],[3,"SkV2",0],[3,"SkV4",0],[4,"SkM44_Uninitialized_Constructor",0],[4,"SkM44_NaN_Constructor",0],[19,"SkPaint__bindgen_ty_1",0],[3,"SkPaint__bindgen_ty_1__bindgen_ty_1",0],[3,"SkRasterHandleAllocator",0],[4,"SkPixelGeometry",0],[3,"SkDeque",0],[3,"SkDeque_Block",0],[3,"SkDeque_Iter",0],[4,"SkDeque_Iter_IterStart",0],[3,"SkDeque_F2BIter",0],[3,"sktext_GlyphRunBuilder",0],[3,"sktext_GlyphRunList",0],[3,"sktext_gpu_Slug",0],[3,"sktext_gpu_TextBlobRedrawCoordinator",0],[3,"sktext_gpu_SubRunAllocator",0],[3,"SkBaseDevice",0],[3,"SkMesh",0],[3,"SkSpecialImage",0],[3,"SkSurface_Base",0],[3,"SkDrawShadowRec",0],[3,"skgpu_graphite_Recorder",0],[4,"skgpu_BackendApi",0],[4,"skgpu_Mipmapped",0],[4,"skgpu_Protected",0],[4,"skgpu_Renderable",0],[3,"skgpu_MutableTextureState",0],[19,"skgpu_MutableTextureState__bindgen_ty_1",0],[3,"skgpu_MutableTextureStateRef",0],[3,"skgpu_SingleOwner",0],[3,"skgpu_ganesh_SmallPathAtlasMgr",0],[3,"SkCanvas_SaveLayerRec",0],[4,"SkCanvas_PointMode",0],[4,"SkCanvas_SrcRectConstraint",0],[3,"SkCanvas_Lattice",0],[4,"SkCanvas_Lattice_RectType",0],[4,"SkCanvas_SaveLayerStrategy",0],[4,"SkCanvas_ClipEdgeStyle",0],[4,"SkCanvas_ShaderOverrideOpacity",0],[4,"SkCanvas_CheckForOverwrite",0],[4,"SkCanvas_DeviceCompatibleWithFilter",0],[3,"SkCanvas_AutoUpdateQRBounds",0],[4,"SkPathVerb",0],[4,"SkPath_Verb",0],[3,"SkPath_Iter",0],[3,"SkPath_RangeIter",0],[3,"SkPath_RawIter",0],[3,"SkContourMeasure",0],[3,"SkContourMeasure_Segment",0],[3,"SkContourMeasureIter_Impl",0],[4,"SkCoverageMode",0],[3,"SkCubicMap",0],[4,"SkCubicMap_Type",0],[3,"SkDataTable_Dir",0],[19,"SkDataTable__bindgen_ty_1",0],[3,"GrBackendSurfaceMutableState",0],[3,"GrBackendSemaphore",0],[4,"GrBackendApi",0],[3,"GrFlushInfo",0],[4,"GrSemaphoresSubmitted",0],[4,"GrGLStandard",0],[3,"GrGLTextureInfo",0],[3,"GrGLFramebufferInfo",0],[3,"GrGLSurfaceInfo",0],[3,"GrGLTextureParameters_SamplerOverriddenState",0],[3,"GrGLTextureParameters_NonsamplerState",0],[3,"GrCaps",0],[4,"GrTextureType",0],[4,"GrColorTypeEncoding",0],[3,"GrColorFormatDesc",0],[3,"GrMockTextureInfo",0],[3,"GrMockRenderTargetInfo",0],[3,"GrMockOptions_ConfigOptions",0],[4,"GrMockOptions_ConfigOptions_Renderability",0],[19,"GrBackendFormat__bindgen_ty_1",0],[3,"GrBackendFormat__bindgen_ty_1__bindgen_ty_1",0],[19,"GrBackendTexture__bindgen_ty_1",0],[19,"GrBackendRenderTarget__bindgen_ty_1",0],[3,"SkExecutor",0],[4,"GrContextOptions_Enable",0],[4,"GrContextOptions_ShaderCacheStrategy",0],[3,"GrContextOptions_PersistentCache",0],[3,"GrThreadSafeCache",0],[3,"GrThreadSafePipelineBuilder",0],[4,"SkSurfaceCharacterization_Textureable",0],[4,"SkSurfaceCharacterization_MipMapped",0],[4,"SkSurfaceCharacterization_UsesGLFBO0",0],[4,"SkSurfaceCharacterization_VkRTSupportsInputAttachment",0],[4,"SkSurfaceCharacterization_VulkanSecondaryCBCompatible",0],[3,"SkDeferredDisplayListPriv",0],[3,"SkPromiseImageTexture",0],[3,"SkSpan",0],[3,"skia_private_AutoTMalloc",0],[3,"GrBaseContextPriv",0],[3,"GrDrawingManager",0],[3,"GrProgramDesc",0],[3,"GrProgramInfo",0],[3,"SkArenaAlloc",0],[3,"SkJSONWriter",0],[3,"GrRecordingContext_Arenas",0],[3,"GrRecordingContext_Stats",0],[3,"GrRenderTargetProxy",0],[3,"SkDeferredDisplayList",0],[4,"SkImages_BitDepth",0],[4,"SkImage_CachingHint",0],[3,"SkImage_RequiredProperties",0],[3,"SkDrawable_GpuDrawHandler",0],[4,"SkDocument_State",0],[4,"SkEncodedImageFormat",0],[3,"SkFontArguments_VariationPosition",0],[3,"SkFontArguments_VariationPosition_Coordinate",0],[3,"SkFontArguments_Palette",0],[3,"SkFontArguments_Palette_Override",0],[3,"SkFontParameters_Variation_Axis",0],[4,"SkFontStyle_Weight",0],[4,"SkFontStyle_Width",0],[4,"SkFontStyle_Slant",0],[3,"SkWeakRefCnt",0],[3,"SkDescriptor",0],[3,"SkFontDescriptor",0],[3,"SkScalerContext",0],[3,"SkAdvancedTypefaceMetrics",0],[3,"SkScalerContextEffects",0],[3,"SkScalerContextRec",0],[4,"SkTypeface_SerializeBehavior",0],[3,"SkTypeface_LocalizedStrings",0],[4,"SkTypeface_Style",0],[4,"SkFont_Edging",0],[3,"SkFontMetrics",0],[3,"SkOpenTypeSVGDecoder",0],[3,"SkGraphics",0],[3,"SkImageGenerator_Options",0],[3,"SkMutex",0],[3,"SkPathRef_Iter",0],[4,"SkPathRef_SerializationOffsets",0],[4,"SkPathRef__bindgen_ty_1",0],[4,"SkPathRef__bindgen_ty_2",0],[4,"SkPathBuilder_IsA",0],[3,"SkPicture_AbortCallback",0],[3,"SkBBoxHierarchy_Metadata",0],[3,"SkRecord",0],[3,"SkRecorder",0],[4,"SkPixelRef_Mutability",0],[4,"SkRegion_Op",0],[3,"SkRegion_Iterator",0],[3,"SkRegion_Cliperator",0],[3,"SkRegion_Spanerator",0],[3,"SkRegion_RunHead",0],[4,"SkRRect_Type",0],[4,"SkRRect_Corner",0],[3,"SkStreamAsset",0],[3,"SkStreamMemory",0],[3,"SkDynamicMemoryWStream_Block",0],[4,"SkStrokeRec_InitStyle",0],[4,"SkStrokeRec_Style",0],[4,"SkSurface_ContentChangeMode",0],[4,"SkSurface_BackendHandleAccess",0],[4,"SkSurface_BackendSurfaceAccess",0],[3,"SkTextBlob_RunRecord",0],[3,"SkTextBlob_Iter",0],[3,"SkTextBlob_Iter_Run",0],[4,"SkTextBlob_GlyphPositioning",0],[3,"SkVertices_Desc",0],[3,"SkVertices_Sizes",0],[3,"SkTime_DateTime",0],[3,"SkPDFArray",0],[4,"SkPDF_Metadata_CompressionLevel",0],[4,"SkPDF_Metadata_Subsetter",0],[4,"SkPath1DPathEffect_Style",0],[3,"SkGradientShader",0],[4,"SkGradientShader_Interpolation_InPremul",0],[4,"SkGradientShader_Interpolation_ColorSpace",0],[4,"SkGradientShader_Interpolation_HueMethod",0],[3,"SkHighContrastConfig",0],[4,"SkHighContrastConfig_InvertStyle",0],[4,"SkSL_Version",0],[3,"SkSL_DebugTrace",0],[3,"SkRuntimeEffect",0],[3,"SkRuntimeEffect_Uniform",0],[4,"SkRuntimeEffect_Uniform_Type",0],[4,"SkRuntimeEffect_ChildType",0],[3,"SkRuntimeEffect_Child",0],[3,"SkImageFilters_CropRect",0],[4,"SkImageFilters_Dither",0],[3,"SkTableMaskFilter",0],[4,"SkTrimPathEffect_Mode",0],[4,"SkPngEncoder_FilterFlag",0],[4,"SkJpegEncoder_AlphaOption",0],[4,"SkJpegEncoder_Downsample",0],[3,"SkSVGCanvas",0],[4,"SkSVGCanvas__bindgen_ty_1",0],[3,"SkPatch3D",0],[3,"SkCamera3D",0],[3,"Sk3DView_Rec",0],[3,"SkParsePath",0],[3,"SkShadowUtils",0],[3,"SkTextUtils",0],[3,"GrDirectContextPriv",0],[19,"GrGLInterface__bindgen_ty_1",0],[3,"VkCommandBuffer_T",0],[3,"VkRenderPass_T",0],[4,"VkFormat",0],[3,"VkExtent2D",0],[3,"VkOffset2D",0],[3,"VkRect2D",0],[3,"VkPhysicalDeviceFeatures2",0],[3,"GrVkDrawableInfo",0],[3,"GrBackendDrawableInfo",0],[3,"GrYUVABackendTextureInfo",0],[8,"Ord",11785],[4,"Ordering",11785],[3,"SkVertices_Builder",0],[3,"SkDeferredDisplayList_ProgramIterator",0],[15,"i32"],[6,"SkFontTableTag",0],[3,"SkDynamicMemoryWStream",0],[6,"std_string_view",0],[6,"GrGpuFinishedProc",0],[6,"GrGpuFinishedContext",0],[8,"Default",11786],[3,"SkDeferredDisplayListRecorder",0],[3,"SkCanvas_ImageSetEntry",0],[3,"SkCanvas_BackImage",0],[3,"SkCanvas_MCRec",0],[3,"SkContourMeasureIter",0],[3,"GrRecordingContext_OwnedArenas",0],[3,"GrRecordingContext_ProgramData",0],[3,"SkPathMeasure",0],[3,"SkCustomTypefaceBuilder",0],[6,"SkGlyphID",0],[8,"PartialEq",11785],[3,"SkTextBlob_Iter_ExperimentalRun",0],[6,"SkCanvas_QuadAAFlags",0],[3,"Formatter",11787],[6,"Result",11787],[8,"Debug",11787],[3,"std___vector_base",0],[3,"SkRefCntBase",0],[3,"SkRefCnt",0],[3,"SkNVRefCnt",0],[3,"SkEncodedInfo",0],[3,"SkAutoCanvasRestore",0],[3,"SkTDArray",0],[3,"GrGLTextureParameters",0],[3,"SkDeferredDisplayList_LazyProxyData",0],[3,"SkImage_AsyncReadResult",0],[3,"SkTypeface_LocalizedString",0],[3,"SkImageGenerator",0],[3,"SkMemoryStream",0],[3,"SkPDF_Metadata",0],[3,"SkCustomTypefaceBuilder_GlyphRec",0],[3,"RustStream",0],[3,"RustWStream",0],[3,"GrDirectContext_DeleteCallbackHelper",0],[15,"slice"],[8,"AsRef",11788],[8,"AsMut",11788],[6,"SkContourMeasure_MatrixFlags",0],[6,"SkPathMeasure_MatrixFlags",0],[8,"Hasher",11789],[8,"Hash",11789],[6,"GrEGLDisplay",0],[15,"i64"],[6,"SkUnichar",0],[6,"SkDeferredDisplayListRecorder_PromiseImageTextureFulfillProc",0],[6,"SkDeferredDisplayListRecorder_PromiseImageTextureReleaseProc",0],[6,"SkDeferredDisplayListRecorder_PromiseImageTextureContext",0],[15,"str"],[3,"SkCanvas_Layer",0],[3,"GrYUVABackendTextures",0],[4,"GrImageContext",0],[4,"GrContextThreadSafeProxy",0],[6,"std_string",0],[8,"PartialOrd",11785],[6,"std_chrono_milliseconds",0],[15,"i16"],[15,"i8"],[6,"GrGLTextureParameters_ResetTimestamp",0],[6,"U8CPU",0],[4,"Result",11790],[3,"TypeId",11791],[3,"SkEncodedInfo_ICCProfile",0],[6,"SkMatrix_MapXYProc",0],[6,"SkMatrix_MapPtsProc",0],[6,"GrGpuSubmittedProc",0],[6,"GrDirectContextDestroyedProc",0],[6,"SkImage_TextureReleaseProc",0],[6,"GrGLGetIntegervFn",0],[6,"GrGLGetStringFn",0],[6,"GrGLGetStringiFn",0],[6,"GrEGLQueryStringFn",0],[6,"GLGetProcFnVoidPtr",0],[3,"std_basic_string___rep",0],[6,"std_basic_string___self_view",0],[6,"std_basic_string_iterator",0],[6,"std_basic_string_const_iterator",0],[3,"std_basic_string___rep__bindgen_ty_1",0],[3,"std_basic_string___ulx",0],[3,"std___bit_const_reference",0],[6,"std___bitset_const_reference",0],[6,"std_char_traits_state_type",0],[6,"__darwin_mbstate_t",0],[6,"mbstate_t",0],[6,"std_streampos",0],[6,"std_char_traits_pos_type",0],[6,"std_basic_string_view_const_reverse_iterator",0],[6,"std_basic_string_view_reverse_iterator",0],[6,"std_basic_string_reverse_iterator",0],[6,"std_basic_string_const_reverse_iterator",0],[6,"std_iterator_traits___primary_template",0],[6,"std_allocator_traits_rebind_traits",0],[6,"std_allocator_rebind_other",0],[6,"std_unique_ptr__DeleterSFINAE",0],[6,"std_reverse_iterator_difference_type",0],[6,"std_reverse_iterator_reference",0],[6,"std_reverse_iterator_pointer",0],[6,"std_reverse_iterator_value_type",0],[6,"std___wrap_iter_value_type",0],[6,"std___wrap_iter_difference_type",0],[6,"std___wrap_iter_pointer",0],[6,"std___wrap_iter_reference",0],[6,"std___wrap_iter_iterator_category",0],[6,"std___bit_iterator_iterator_category",0],[6,"std___vector_base___alloc_traits",0],[6,"std___vector_base_size_type",0],[6,"std___vector_base_difference_type",0],[6,"std___vector_base_pointer",0],[6,"std___vector_base_const_pointer",0],[6,"std___vector_base_iterator",0],[6,"std___vector_base_const_iterator",0],[6,"std_basic_string___alloc_traits",0],[6,"std_basic_string_size_type",0],[6,"std_basic_string_difference_type",0],[6,"std_basic_string_pointer",0],[6,"std_basic_string_const_pointer",0],[6,"SkData_INHERITED",0],[6,"SkBitmap_Allocator_INHERITED",0],[6,"SkFlattenable_INHERITED",0],[6,"SkCanvas_INHERITED",0],[6,"SkDataTable_INHERITED",0],[6,"GrContext_Base_INHERITED",0],[6,"SkImage_INHERITED",0],[6,"SkDocument_INHERITED",0],[6,"SkWeakRefCnt_INHERITED",0],[6,"SkPixelRef_INHERITED",0],[6,"SkSurface_INHERITED",0],[6,"SkTextBlob_INHERITED",0],[6,"GrGLInterface_INHERITED",0],[6,"SkImageFilter_INHERITED",0],[6,"SkDeque_F2BIter_INHERITED",0],[6,"SkColorFilter_INHERITED",0],[6,"SkTypeface_INHERITED",0],[6,"SkShader_INHERITED",0],[6,"SkMemoryStream_INHERITED",0],[6,"SkDynamicMemoryWStream_INHERITED",0],[6,"SkBlender_INHERITED",0],[6,"SkPathEffect_INHERITED",0],[3,"GrGLInterface_Functions",0],[3,"VkPhysicalDeviceFeatures",0],[4,"GrContext_Base",0],[4,"GrImageContextPriv",0],[4,"GrContextThreadSafeProxyPriv",0],[4,"GrRecordingContextPriv",0],[4,"GrContextPriv",0],[4,"SkVerticesPriv",0],[4,"SkUnicode",0],[3,"SkRefCntBase__bindgen_vtable",0],[3,"SkStrings",0],[3,"SkCodec__bindgen_vtable",0],[3,"SkCanvas__bindgen_vtable",0],[3,"SkImage_AsyncReadResult__bindgen_vtable",0],[3,"SkImageGenerator__bindgen_vtable",0],[3,"SkPDF_StructureElementNode",0],[6,"SkSurface_AsyncReadResult",0]]},\
"skia_safe":{"doc":"","t":"NNNSSNNNNEENGGNNNNNNNNSSSNSNNNNNNNGEEGEDGNNSNSDNNENCENDNGDNEDNGGGGDDEINIGGNENDDNSSNNSNGGDNSSGGNNNNDGNNNNNRSNECNNNSNEDIGDEDGDGDNNNSSSSSGNNSNDDNDNNNNDDNNDDNGGGGNNNNNNNNNNNNDNSNNNSSSSSSSSSSSSSSSNNNNNNDSSSSSSSRGDSENNNNNSSINNNNNNNNSNGNNNDNGNGEEEGGEGEGEDEGGIEGDNDDNNINNNNNNDSSSDSNNNSNNNNNNNDDSNSNNDDGNNNNNIGNNNGDNIINDGDNNNNNNNNNNNGNGGDDSGGGDEEEGSNNNGNNNNNNNDDDGGGNNSNNDNNSGGGESNLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLMLLLLLLLLMLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLKLALLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLALLLALLAALLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLAMLLLLLLLALLLLLLLLLLLLLLLLLLLLMLLLLLLMLALLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLALLLLLLLLLLLLLLALLLLLLLLLLLLLMLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAAAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLAALMLALALALLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMLLMMLLLLLLLLLLLLLLALLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLALLLLALMMLLLLLLLALLLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALKKOKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLAALLALALAALAAAALLLLLALALLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLFFLLLLALLLLLLLLKLLLMMLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLALLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLKLLLLLLLLLLLLLLLALLAMLLLMALGLLLLLLLLMMLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALAALLLLLLLLFLLLLLLLLLLLLLLLLLLLLMLLLLLALLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALAALLLLFFLLLLALLLLLLLLLLLFLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLALLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLAMLLLLOLLLALLLLMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLALLLLLLLLMMMMMMMMMMMMMLLMMMMMMMMMMMLLLLALLLLAAMMMMMFFFFEDDSNESDNDSENNNNDDIENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLMLLLMLLLLLLLMLLLLLLLMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNDENLLLLMLLMLLLLLLLLLLMLLLLLLLMMNNNDNNNDNSNIEENDNDNNSDNNNNNNNNDNSNNNDNNDNNENNEENNNNNNNDNEMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAKLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLAMLMMFLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMGGNNNNNFFGALLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFGLLLLLLLLLLLLLLLFRRRRRRRRRRRRGGSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFDLLLLLLLLLLLLALLLDDLLLLLLLLLLLLLLLLGGLLLLLLALLLGLLFFFNNEGNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLMLLLLLLLLMLLLLLLMALLLLLLLLLLLLLLLLLALDLLLLMLLLLLMLLLLLLLLLDMLLLLLLLLLLLLLLLLMLSDDSSSSLLMMLLLLLLLLLLLLLMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMDMMMMADLLLLMLLLLLLLLMMLLMLLLLLLSSSSSSSSSDSNSSSSNSSSESSSNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEGGGGGNDGCNNNGDDDSNNEENNGSNNNNNSNSEGEDDEENNNSGGNNNNNSLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLAMLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLMLLLLLLMLLMLLLLMMLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLNNDNENENNMMMMMLLLLLLMLLLLLMMMMMMMLLLLLLLLLLMMLLLLMLLLMMMLMMMMMMMMLLLLLLLLLLLLMLNNSDNNNNNGGSEDNNGNNNSSSSNSSNNNSNNNNNNNNNNNNSNNEDSDGNSSNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMMLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFNNDESDLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLALLLLLLLLLLLLLLLLLLFFLLFFLLLLLLFFLLLLLLLLLLLLFFLLLLLLLGNNNNGGNNNNNNNNNNNFFFFFFFFFFFFFFFFFNNESNLLLLLLLLLLLLLLDLLLLMLLLLMALLLMLFLLLLLLLNNENNNNEEEDNNNGNNLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNFFFFFFNGENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDESNNFFFFLLLLLLLLLLLLFFLFFFFFFMLLLLFLLLLLLLLLLLLLLFLLLLLMFFFFFLFFFFLFFFFFLLLLLLLLLLLLLLENNLLLLFFFLLLLLLFFFLLLLGNNENNNDMLLLLLLLLLMFFLLLLLLLLLLLMLLLLLLLLMFFSEENNNRSDENSNNNSENNNNNNNNNSNNNNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFRRRRRRRFNNENENGNNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENENSSNNNNENNNENNDSNNSNGSNDDNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSNNENLLLLLLLLLLFLLLLFDGLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLSSSDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNEEDENNFGDDLLLLLLLMLLLLLMMLLLLMLLLLLLLMLMLFLMMMLLLLLMMLLLLLLLFFGLLLLLLSSDDSDSSSSLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFFLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMDINNIDSGENNDNNLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENSNNNNDNSNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNGEENNDGNNGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLSSSDNNNNNNNSNNNNESLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDNNNENNNNGDMLLLLMLLLLMLLLLMLLLLLLLLLLLLLLMMMLMLLLLLLLLLMLDGLLLLLMMLLLLLLMLLLLLLLLALLMLLLLLLLLLFFFFFFFFFFFFFNNNNENNGELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEENNSNSNSNNNGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLFFFFFFFFCASDDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFNENLLLLLLLLLLFLLLLNNGGGNDGEGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLDGNSGDNEGLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLFMMALLLLLLAALLLLLLLLLLLLMLLLMLLMNENLLLLLLLLLFLLLFFLLLSSDSLLLLLLLLLLLLLLLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLENNNLLLLFLLLLFLLLLLLDGGGDSSSSNNNEGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIIIKKKKKKKKKKKKKKKKNSENNNNNNEENNNNNNGNNNNNNNNLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLFLFLLLLFLFLLLFLLLLLLLLLLLLLLENSSENNNNNNEGNNNNNNNNNNNNNNNNNLLLLLLLLFLLLLLLLLLLLLFLLLLLLLLSENSSNNNGGLLLLLLLLLLLLLLLLLLLLLLLLLLAENENNNNNNEGNNNNNNNNNNNNNNNNNLLFLLLFL","n":["A","A16Float","A16UNorm","ALPHA","ALWAYS_DITHER","ARGB4444","ASTC","AVIF","Alpha8","AlphaType","AutoCanvasRestore","B","BBHFactory","BBoxHierarchy","BC1_RGB8_UNORM","BC1_RGBA8_UNORM","BGR101010x","BGR101010xXR","BGRA1010102","BGRA8888","BGRH","BGRV","BLACK","BLUE","BLUE","BMP","BT2020","BT2020_10bit_Full","BT2020_10bit_Limited","BT2020_12bit_Full","BT2020_12bit_Limited","BT2020_8bit_Full","BT2020_8bit_Limited","Bevel","Bitmap","BlendMode","BlendModeCoeff","Blender","BlurStyle","Borrows","Budgeted","Butt","CCW","COUNT","CW","CYAN","Canvas","Clamp","Clear","ClipOp","Close","Codec","CodecResult","CoeffCount","Color","Color","Color3f","Color4f","ColorBurn","ColorChannel","ColorChannelFlag","ColorDodge","ColorFilter","ColorInfo","ColorMatrix","ColorSpace","ColorSpacePrimaries","ColorSpaceTransferFn","ColorType","ConditionallySend","Conic","Contains","ContourMeasure","ContourMeasureIter","CouldNotRewind","CoverageMode","Cubic","CubicMap","CubicResampler","DA","DARK_GRAY","DATA_TYPE_CNT","DC","DNG","DYNAMIC_MSAA","Darken","Data","DataTable","DateTime","Decal","Default","Default","DeferredDisplayList","DeferredDisplayListRecorder","Difference","Difference","Difference","Difference","Document","Drawable","Dst","DstATop","DstIn","DstOut","DstOver","EMPTY_IRECT","ETC1_RGB8","ETC2_RGB8_UNORM","EncodedImageFormat","EncodedOrigin","ErrorInInput","EvenOdd","Exclusion","FACTORY_ID","Fill","FilterMode","FilterOptions","Flattenable","Font","FontArguments","FontHinting","FontMetrics","FontMgr","FontStyle","FontStyleSet","FourByteTag","Full","G","GIF","GRAY","GRAY","GRAY_ALPHA","GREEN","GREEN","GlyphId","GlyphId","Gray8","HALF","HEIF","HSV","Handle","HardLight","HighContrastConfig","Hue","ICO","IDA","IDC","IPoint","IRect","ISA","ISC","ISize","IVector","Identity","Image","ImageFilter","ImageGenerator","ImageInfo","IncompleteInput","Inner","InternalError","Intersect","Intersect","Intersect","InvalidConversion","InvalidInput","InvalidParameters","InvalidScale","InverseEvenOdd","InverseWinding","Iter","JPEG","JPEG","JPEGXL","JPEG_Full","KTX","LIGHT_GRAY","Last","Last","Last","Last","Last","Last","LastCoeffMode","LastEnum","LastEnum","LastEnum","LastEnum","LastMode","LastSeparableMode","LastTileMode","Lighten","Line","Linear","Linear","Linear","Luminosity","M44","MAGENTA","MAX_CUSTOM_ATTRIBUTES","MAX_PLANES","MAX_PLANES","MAX_PLANES","MAX_PLANES","MAX_POINTS","MILESTONE","MaskFilter","Matrix","Max_EnumValue","MipmapMode","Mirror","Miter","Modulate","Move","Multiply","N32","NEARLY_ZERO","NativeFlattenable","Nearest","Nearest","Nearest","None","None","None","Normal","Normal","ONE","One","OpBuilder","Opaque","Outer","Overlay","OwnedCanvas","PKM","PMColor","PNG","Paint","PaintCap","PaintJoin","PaintStyle","Path","PathBuilder","PathDirection","PathEffect","PathFillType","PathMeasure","PathOp","PathSegmentMask","PathVerb","Picture","PictureRecorder","Pixel","PixelGeometry","PixelRef","Pixmap","Plus","Point","Point3","Premul","Quad","QuickReject","R","R16G16B16A16UNorm","R16G16Float","R16G16UNorm","R8G8UNorm","R8UNorm","RCHandle","RED","RED","RG","RGB","RGB","RGB101010x","RGB565","RGB888x","RGBA","RGBA1010102","RGBA8888","RGBAF16","RGBAF16Norm","RGBAF32","RGBH","RGBV","RRect","RSXform","Rec601","Rec601_Limited","Rec709","Rec709_Full","Rec709_Limited","Rect","RefHandle","Region","Repeat","ReverseDifference","ReverseDifference","Round","Round","RoundOut","RuntimeEffect","SA","SC","SRGBA8888","SamplingMode","SamplingOptions","Saturation","Scalar","Scalars","Screen","Sendable","Shader","Size","Slight","SoftLight","Solid","Square","Src","SrcATop","SrcIn","SrcOut","SrcOver","Stroke","StrokeAndFill","StrokeRec","Success","Surface","SurfaceCharacterization","SurfaceProps","SurfacePropsFlags","TRANSPARENT","TextBlob","TextBlobBuilder","TextBlobIter","TextBlobRun","TextEncoding","TextureCompressionType","TileMode","Typeface","USE_DEVICE_INDEPENDENT_FONTS","UTF16","UTF32","UTF8","Unichar","Unimplemented","Union","Union","Unknown","Unknown","Unknown","Unpremul","V2","V3","V4","Vector","Vector3","Vertices","WBMP","WEBP","WHITE","Winding","XOR","XYZD50Hash","Xor","Xor","YELLOW","YUVAInfo","YUVAPixmapInfo","YUVAPixmaps","YUVColorSpace","ZERO","Zero","a","a","a","a","abandon","abandoned","add","add","add","add","add","add","add","add","add","add","add","add_arc","add_arc","add_arc","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_circle","add_circle","add_circle","add_oval","add_oval","add_oval","add_path","add_path","add_path","add_path_matrix","add_poly","add_polygon","add_polygon","add_rect","add_rect","add_rect","add_round_rect","add_rrect","add_rrect","add_rrect","addr","addr_at","adjust","all","all","all","alloc_n32_pixels","alloc_n32_pixels","alloc_pixels","alloc_pixels","alloc_pixels_flags","alloc_pixels_flags","alloc_pixels_info","alloc_pixels_info","alloc_run","alloc_run","alloc_run_pos","alloc_run_pos","alloc_run_pos_h","alloc_run_pos_h","alloc_run_rsxform","alloc_run_rsxform","alloc_run_text","alloc_run_text","alloc_run_text_pos","alloc_run_text_pos","alloc_run_text_pos_h","alloc_run_text_pos_h","alloc_run_text_rsxform","alloc_run_text_rsxform","allocate","allow_blender","allow_color_filter","allow_shader","alpha","alpha_f","alpha_threshold","alpha_type","alpha_type","alpha_type","alpha_type","alpha_type","alpha_type","alpha_type","alpha_type","annotate","append","append_float","append_float_array","append_int","apply_bones","apply_to_canvas","apply_to_paint","apply_to_path","apply_to_path_inplace","approximate_bytes_used","approximate_bytes_used","approximate_bytes_used","approximate_bytes_used","approximate_filtered_bounds","approximate_filtered_bounds","approximate_op_count","approximate_op_count","approximate_op_count_nested","approximate_op_count_nested","approximate_size","arc_to","arc_to","arc_to","arc_to_radius","arc_to_radius","arc_to_rotated","arc_to_tangent","arc_to_tangent","arc_to_tangent","are_finite","area","arithmetic","arithmetic","arithmetic","as_a_dash","as_array","as_array","as_array","as_array","as_array_mut","as_blend_mode","as_bytes","as_bytes","as_coeff","as_direct_context","as_gl_format","as_gl_format_enum","as_image","as_image","as_image_filter","as_image_filter","as_mut_array","as_mut_array","as_mut_array","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_scalars","as_str","as_winding","as_winding","ascent","at","at","at_size","at_size","at_str","at_str","at_t","at_t","avg_char_width","b","b","b","b","b","b","backend","backend","backend","backend","backend","backend","backend_format","backend_format","backend_format","backend_format","backend_texture","begin_recording","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","blend_mode","blend_mode_or","blender","blenders","blur","blur","blur","bone_indices","bone_indices","bone_weights","bone_weights","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","bottom","bottom","bottom","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bounds","bytes","bytes_mut","bytes_per_pixel","bytes_per_pixel","bytes_per_pixel","bytes_per_pixel","bytes_per_pixel","bytes_per_pixel","bytes_per_pixel","c","c","c","cache_max_resource_bytes","cache_max_resource_bytes","can_compute_fast_bounds","can_send","can_send","canvas","canvas","canvas","canvas","cap","cap_height","center","center_x","center_y","channel_mask","characterize","check_async_work_completion","children","circle","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_with_arguments","clone_with_pixel_geometry","close","close","close","cmp","cmp","codec","col","col_major","color","color4f","color_filter","color_filter","color_filter","color_filter_node","color_filters","color_info","color_info","color_matrix","color_matrix_filter","color_space","color_space","color_space","color_space","color_space","color_space","color_space","color_space","color_space","color_space","color_type","color_type","color_type","color_type","color_type","color_type","color_type","color_type","color_type","color_type","color_type_supported_as_image","color_type_supported_as_surface","colors","colors","colors","cols","combine","combine","combine","combine","combine","complement","complement","compose","compose","compose","compose","composed","compressed_backend_format","compressed_backend_format","compute_bounds","compute_bounds","compute_byte_size","compute_byte_size","compute_byte_size","compute_byte_size","compute_byte_size","compute_fast_bounds","compute_from_t","compute_is_opaque","compute_is_opaque","compute_is_opaque","compute_min_byte_size","compute_min_byte_size","compute_offset","compute_offset","compute_region_complexity","compute_tight_bounds","compute_total_bytes","compute_total_bytes","compute_y_from_x","concat","conic_to","conic_to","conic_to","conservatively_contains_rect","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains_no_empty_check","contains_point","contains_rect","contains_region","contour_measure","contrast","convert_conic_to_quads","convexity_type","convexity_type_or_unknown","copy_range","copy_range","copy_table_data","corner_path","corner_path_effect","count","count","count","count","count","count_families","count_families","count_glyphs","count_inputs","count_points","count_str","count_tables","count_text","count_verbs","cross","cross","cross","cross","cross_product","cross_product","cubic","cubic_to","cubic_to","cubic_to","cull_rect","cull_rect","d","d","dash","dash_path_effect","data_type","data_type","day","day_of_week","decode","decode_to_raster","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_backend_format","deref","deref","deref","deref_mut","descent","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","detach","detach","detach","detach","detach","detach","detach_as_data","detach_as_stream","difference","difference","dilate","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","direct_context","discrete","discrete_path_effect","displacement_map_effect","distance","distance_to_origin","distant_lit_diffuse_lighting","distant_lit_specular_lighting","div","div","div","div","div_assign","div_assign","div_assign","document","dot","dot","dot","dot","dot","dot_product","dot_product","dot_with_normal","draw","draw","draw","draw_at","draw_display_list","draw_display_list_with_offset","drawable","draws_nothing","draws_nothing","drop","drop","drop","dump","dump","dump","dump_arrays","dump_arrays_as_data","dump_as_data","dump_hex","dump_hex","e","edging","empty","empty","empty","empty","empty","enable_data_type","encode","encode","encode","encode","encode","encode","encode_to_data","encode_to_data_with_context","encode_to_data_with_quality","encoded_data","encoded_data","encoded_data","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equal","equals","equals","equals","equals","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erase","erase","erase","erase_4f","erase_4f","erase_4f","erase_argb","erase_argb","erase_color","erase_color","erase_color_4f","erase_color_4f","erode","extend","extend","extensions","extensions_mut","extract_alpha","extract_alpha","extract_subset","extract_subset","extract_subset","f","family_name","family_name","family_name","family_names","family_names","fill_type","fill_type","fill_type","filter","filter_bounds","filter_color","filter_color4f","filter_path","filter_path_inplace","filter_path_inplace_with_matrix","find_child","find_input","find_uniform","finish_recording_as_drawable","finish_recording_as_picture","fits_in_bytes","flags","flags","flush","flush","flush","flush_and_submit","flush_and_submit","flush_and_submit","flush_and_submit_image","flush_image","flush_image_with_info","flush_submit_and_sync_cpu","flush_submit_and_sync_cpu","flush_with_access_info","flush_with_info","flush_with_info","flush_with_mutable_state","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","font_arguments","font_metrics","font_parameters","font_style","font_style","fractal_perlin_noise","free_gpu_resources","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_adopted_texture","from_argb","from_argb","from_backend_render_target","from_backend_texture","from_bitmap","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bounds","from_bytes","from_bytes","from_bytes","from_bytes_rgba","from_chars","from_color_info","from_color_info","from_compressed","from_context","from_data","from_data","from_data","from_data","from_data","from_data_type","from_encoded","from_encoded","from_encoded","from_encoded_with_alpha_type","from_external_memory","from_external_pixmaps","from_generator","from_irect","from_isize","from_isize","from_iter","from_iter","from_iwh","from_ltrb","from_name","from_name","from_name","from_nv12_textures_copy","from_paint","from_path","from_path","from_picture","from_picture","from_picture_with_props","from_pixmap_cross_context","from_point_and_size","from_pos_text","from_pos_text","from_pos_text_h","from_pos_text_h","from_pt_size","from_radians","from_raster_data","from_rect","from_rgb","from_rsxform","from_rsxform","from_shader","from_shader","from_size","from_size","from_slice","from_slice","from_slices","from_slices","from_str","from_str","from_str","from_str","from_svg","from_table","from_text","from_text","from_texture","from_typeface","from_typeface_with_params","from_wh","from_wh","from_xywh","from_xywh","from_yuva_pixmaps","from_yuva_textures","g","g","g","g","generation_id","generation_id","generation_id","generation_id","generation_id","generation_id","generation_id","get_addr","get_addr","get_alpha_f","get_alpha_f","get_alpha_f","get_backend_render_target","get_backend_texture","get_boundary_path","get_bounds","get_col_major","get_color","get_color","get_color","get_color_4f","get_color_4f","get_color_4f","get_input","get_intercepts","get_intercepts","get_intercepts","get_kerning_pair_adjustments","get_matrix","get_path","get_pixels","get_pixels","get_point","get_points","get_pos","get_row_major","get_row_major","get_subset","get_subset","get_table_data","get_table_size","get_verbs","get_widths","get_widths_bounds","get_x_pos","gl_framebuffer_info","gl_texture_info","gl_texture_parameters_modified","glyph_indices","gpu","gradient_shader","graphics","grayscale","h","has","has_alpha","has_bones","has_colors","has_equal_effect","has_extension","has_indices","has_mip_maps","has_mipmaps","has_mipmaps","has_tex_coords","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height_64","high_contrast","high_contrast_config","high_contrast_filter","hinting","hour","id","image","image","image_filter","image_filter","image_filters","image_info","image_info","image_info","image_info","image_snapshot","image_snapshot_with_bounds","images","inc_reserve","inc_reserve","inc_reserve","index","index","index","index","index_count","index_mut","indices","indices","inflation_radius","inflation_radius_from_paint_and_style","inflation_radius_from_params","info","info","info","info","info","init_pixmaps_from_single_allocation","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","input","input_size","inputs","inputs","insert","insert","inset","inset","install_pixels","install_pixels","interpolate","intersect","intersect","intersect2","intersect_no_empty_check_","intersection","intersection","intersects","intersects","intersects","intersects","intersects2","intersects_rect","intersects_region","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_image_filter","into_image_filter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","invert","invert_style","is_a_image","is_all","is_all","is_alpha_only","is_alpha_unchanged","is_always_dither","is_always_opaque","is_anti_alias","is_array","is_baseline_snap","is_bgr","is_bold","is_closed","is_closed","is_color","is_compatible","is_compatible","is_complex","is_convex","is_cubic_degenerate","is_dither","is_embedded_bitmaps","is_embolden","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty_64","is_even_odd","is_fill_style","is_finite","is_finite","is_finite","is_finite","is_finite","is_fixed_pitch","is_force_auto_hinting","is_framebuffer_only","is_gamma_close_to_srgb","is_gamma_close_to_srgb","is_gamma_close_to_srgb","is_gamma_close_to_srgb","is_h","is_hairline_style","is_immutable","is_immutable","is_immutable","is_immutable","is_initialized","is_interpolatable","is_inverse","is_inverse_fill_type","is_italic","is_last_contour_closed","is_lazy_generated","is_line","is_line_degenerate","is_linear","is_linear_metrics","is_mip_mapped","is_mip_mapped","is_null","is_null","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_opaque","is_oval","is_protected","is_protected","is_protected","is_protected","is_quad_degenerate","is_ready_to_draw","is_ready_to_draw","is_rect","is_rect","is_rgb","is_rrect","is_same_texture","is_sorted","is_src_over","is_srgb","is_srgb","is_subpixel","is_supported","is_texture_backed","is_texture_generator","is_texture_generator","is_textureable","is_textureable","is_use_device_independent_fonts","is_v","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_volatile","is_volatile","is_volatile","is_zero","is_zero","is_zero","is_zero","iset","iter","iter","iter","iter","iter_names","iter_names","join","join","join","join2","join_non_empty_arg","join_possibly_empty_rect","jpeg_encoder","label","last_pt","leading","left","left","left","left","length","length","length","length","length","length","length","length_squared","length_squared","length_squared","length_xy","length_xyz","line","line_2d","line_2d_path_effect","line_to","line_to","line_to","linear_gradient","linear_gradient_with_interpolation","look_at","luma","luma_color_filter","magnifier","magnifier2","make","make","make","make","make_blender","make_color_filter","make_color_space","make_for_blender","make_for_color_filer","make_for_shader","make_image","make_non_texture_image","make_picture_snapshot","make_raster_image","make_scale","make_shader","make_subset","make_transform","map","mask_filter","match_face_style","match_face_style","match_family","match_family","match_family_style","match_family_style","match_family_style_character","match_family_style_character","match_style","match_style","matches_color_type","matches_color_type","matches_color_type","matrix","matrix","matrix","matrix","matrix_convolution","matrix_path_effect","matrix_translate","max_aniso","max_char_width","max_render_target_size","max_surface_sample_count_for_color_type","max_texture_size","measure_str","measure_text","merge","merge","merge_path_effect","metrics","min_row_bytes","min_row_bytes","minute","mipmap","mipmap","mipmapped","mipmapped","miter","mode","mode","mode","month","move_to","move_to","move_to","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","n32","name","name","name","named_transfer_fn","nan","native_deserialize","native_flattenable","native_transmutable","nearly_equal","nearly_equal","nearly_zero","nearly_zero","need_to_apply","needs_ctm","neg","neg","neg","neg","neg","neg","negate","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_a8","new_a8","new_bytes","new_bytes","new_color_space","new_color_space_with_context","new_copy","new_copy","new_copy","new_cross_context_from_pixmap","new_cstr","new_cstr","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_empty","new_family_name_iterator","new_fill","new_from","new_from_data","new_from_data","new_gl","new_gl","new_gl","new_gl","new_gl_with_label","new_hairline","new_identity","new_lighting","new_load_with","new_load_with_cstr","new_n32","new_n32","new_n32_premul","new_n32_premul","new_native","new_null","new_path","new_path","new_placeholder","new_placeholder","new_raster","new_raster_direct","new_raster_from_compressed","new_raster_n32_premul","new_render_target","new_render_target_with_characterization","new_s32","new_s32","new_srgb","new_srgb","new_srgb_linear","new_srgb_linear","new_str","new_str","new_style_set","new_style_set","new_styleset","new_styleset","new_subset","new_subset","new_subset","new_subset_with_context","new_surface","new_surface_with_dimensions","new_texture_from_compressed","new_texture_image","new_texture_image_budgeted","new_typeface","new_typeface","new_uninitialized","new_uninitialized","new_unknown","new_unknown","new_with_filter","new_zero_initialized","new_zero_initialized","next","next","next_contour","normalize","normalize","normalize","normalize","normalize","normalize_perspective","normalize_vector","normalized","not","not","nothing_to_draw","notify_added_to_cache","notify_added_to_cache","notify_content_will_change","notify_drawing_changed","notify_pixels_changed","notify_pixels_changed","notify_pixels_changed","notify_pixels_changed","num_channels_in_plane","num_planes","num_planes","num_planes","num_planes","num_planes","offset","offset","offset","offset","offset","offset","offset","offset","offset_points","offset_to","offset_to","oomed","op","op","op_rect","op_rect_region","op_region","op_region_rect","origin","origin","origin","origin_matrix","outset","outset","oval","oval_with_start_index","overdraw","overdraw_color_filter","paint","partial_cmp","partial_cmp","path","path_1d","path_1d_path_effect","path_2d","path_2d_path_effect","path_effect","path_effect","path_measure","path_types","path_utils","pdf","peek_pixels","peek_pixels","peek_pixels","peek_pixels","perform_deferred_cleanup","perlin_noise_shader","perspective","picture_recorder","pixel_geometry","pixel_ref","pixel_ref","pixel_ref_origin","pixel_ref_origin","pixels","pixels","pixels","pixels","pixels","pixmap","pixmap","pixmaps_info","plane","plane_config","plane_dimensions","plane_format","plane_formats","plane_info","plane_infos","plane_subsampling_factors","planes","playback","playback","png_encoder","point_lit_diffuse_lighting","point_lit_specular_lighting","points","polygon","polyline_to","polyline_to","pos_tan","pos_tan","positions","positions","post_concat","post_concat","post_script_name","post_translate","post_translate","pre_concat","pre_concat","pre_concat_16","pre_multiply_argb","pre_multiply_color","pre_scale","pre_scale_xyz","pre_translate","precompile_shader","private","props","purge_unlocked_resources","quad_to","quad_to","quad_to","query_yuva_info","query_yuva_info","quick_contains","quick_reject","quick_reject_rect","quick_reject_region","r","r","r","r_arc_to_rotated","r_conic_to","r_conic_to","r_conic_to","r_cubic_to","r_cubic_to","r_cubic_to","r_line_to","r_line_to","r_line_to","r_move_to","r_quad_to","r_quad_to","r_quad_to","radial_gradient","radial_gradient_with_interpolation","radians_to_degrees","rc","read_from_memory","read_pixels","read_pixels","read_pixels","read_pixels","read_pixels","read_pixels_to_bitmap","read_pixels_to_pixmap","read_pixels_to_pixmap","read_pixels_to_pixmap","read_pixels_to_pixmap_with_context","read_pixels_with_context","recommended_rgba_color_type","recording_canvas","recording_context","rect","rect_stays_rect","rect_to_rect","region","reinterpret_color_space","release","release_resources_and_abandon","remove","remove","remove","replace_backend_texture","replace_backend_texture_with_mode","require_base_type","require_type_equality","res_scale","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset","reset_gl_texture_bindings","resized","resized","resolve","resolve","resolve_msaa","resource_cache_limit","resource_cache_limits","resource_cache_purgeable_bytes","resource_cache_usage","restore","reverse_add_path","rewind","rgb_to_yuv","right","right","right","right","rotate","rotate_x","rotate_y","rotate_z","round","round_in","round_out","round_out","round_out","row","row_bytes","row_bytes","row_bytes","row_bytes","row_bytes","row_bytes","row_bytes_as_pixels","row_bytes_as_pixels","row_bytes_as_pixels","row_bytes_iter","row_major","rows","rrect","rrect","rrect_with_start_index","runtime_effect","s","sample_count","sample_count","sample_count","sampling","sampling_options","save","scalar","scale","scale","scale","scale_pixels","scale_pixels","scale_x","scaled","scaled","scos","second","segment","segment","segment_masks","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","set","set","set","set","set","set","set","set","set_44","set_abs","set_alpha","set_alpha_f","set_alpha_type","set_alpha_type","set_anti_alias","set_argb","set_backend_render_target_state","set_backend_render_target_state_and_return_previous","set_backend_texture_state","set_backend_texture_state_and_return_previous","set_baseline_snap","set_blend_mode","set_blender","set_bounds","set_bounds2","set_bounds_check","set_bounds_no_check","set_col","set_col_major","set_color","set_color4f","set_color_filter","set_color_space","set_concat","set_concat","set_concat_16","set_dither","set_edging","set_embedded_bitmaps","set_embolden","set_empty","set_empty","set_empty","set_empty","set_empty","set_fill_style","set_fill_type","set_fill_type","set_fill_type","set_font_style","set_force_auto_hinting","set_glyph","set_hairline_style","set_hinting","set_identity","set_identity","set_identity","set_image_filter","set_immutable","set_immutable","set_immutable","set_immutable","set_info","set_info","set_irect","set_is_volatile","set_is_volatile","set_is_volatile","set_iwh","set_last_pt","set_length","set_length_xy","set_linear_metrics","set_ltrb","set_ltrb","set_mask_filter","set_metrics","set_mutable_state","set_mutable_state","set_normalize","set_path","set_path","set_path_effect","set_pixel_ref","set_pixel_ref","set_rc","set_rect","set_rects","set_region","set_res_scale","set_resource_cache_limit","set_resource_cache_limits","set_rotate","set_rotate_unit","set_rotate_unit_sin_cos","set_row","set_row_major","set_row_major","set_saturation","set_scale","set_scale","set_scale_x","set_shader","set_size","set_size","set_skew_x","set_stroke","set_stroke_cap","set_stroke_join","set_stroke_miter","set_stroke_params","set_stroke_style","set_stroke_width","set_style","set_subpixel","set_translate","set_typeface","set_wh","set_wh","set_xywh","set_xywh","shader","shader","shader_mask_filter","shaders","shift_per_pixel","shift_per_pixel","shift_per_pixel","shift_per_pixel","shift_per_pixel","shift_per_pixel","shift_per_pixel","shrink_to_fit","simplify","simplify","siting_xy","size","size","size","size","size","size_in_bytes","skew_x","snap_gpu_draw_handler","snapshot","snapshot","sort","sort","sorted","sorted","source","spacing","spot_lit_diffuse_lighting","spot_lit_specular_lighting","ssin","stencil_bits","str_to_glyphs","str_to_glyphs","str_to_glyphs_vec","stroke","stroke_and_fill_path_effect","stroke_cap","stroke_join","stroke_miter","stroke_path_effect","stroke_rec","stroke_width","style","style","style","style","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","subsampling","sum","supported","supports_distance_field_text","surface","surface_props","surfaces","svg","swap","swap","swap","swap","swap_rb","swap_rb_inplace","sweep_gradient","sweep_gradient_with_interpolation","symmetric_difference","symmetric_difference","table_color_filter","table_tags","tex_coords","tex_coords","text_to_glyphs","text_to_glyphs","text_to_glyphs_vec","texture","texture_origin","texture_origin","texture_size","textures","tight_bounds","tight_bounds","tile","time_zone_minutes","to_a_color_filter","to_a_color_matrix","to_a_color_mode","to_bytes","to_ceil","to_color","to_color","to_floor","to_font_data","to_hsv","to_hsv","to_m33","to_non_inverse","to_non_texture_image","to_opaque","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_quad","to_quad","to_raster_image","to_raw_shader","to_rgb","to_round","to_shader","to_shader","to_shader","to_shader","to_shader","to_string","to_svg","to_svg_with_encoding","to_texture_2d","to_tri_strip","to_xyzd50_hash","to_xyzd50_hash","toggle","toggle","toggle_inverse_fill_type","toggle_inverse_fill_type","toggle_inverse_fill_type","top","top","top","top","top","transform","transform_with_perspective_clip","translate","translate","translate","translated","transpose","trim","trim_path_effect","try_alloc_n32_pixels","try_alloc_n32_pixels","try_alloc_pixels","try_alloc_pixels","try_alloc_pixels_flags","try_alloc_pixels_flags","try_alloc_pixels_info","try_alloc_pixels_info","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","turbulence_perlin_noise","two_point_conical_gradient","two_point_conical_gradient_with_interpolation","tx","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","typeface","typeface","typeface","typeface_or_default","unichar_to_glyph","unichar_to_glyph","unichar_to_glyphs","unichars_to_glyphs","uniform_size","uniforms","union","union","unique_id","unique_id","unique_id","unique_id","unique_id","unique_id","unique_id","unique_id","unique_id","units_per_em","unsafe_send_sync","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","unwrap","update_bounds_cache","use_cubic","uses_glfbo0","uses_glfbo0","utils","v","valid_row_bytes","valid_row_bytes","validate","validate_alpha_type","variant_name","variation_design_parameters","variation_design_position","vertex_count","vertices","vk_rt_supports_input_attachment","vk_rt_supports_input_attachment","vulkan_secondary_cb_compatible","vulkan_secondary_cb_compatible","w","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width_64","with_a","with_adjustment","with_alpha_type","with_alpha_type","with_alpha_type","with_alpha_type","with_backend_format","with_backend_format","with_color_filter","with_color_space","with_color_space","with_color_space","with_color_space","with_color_space","with_color_space","with_color_spin","with_color_spin","with_color_type","with_color_type","with_color_type","with_color_type","with_default_mipmaps","with_dimensions","with_dimensions","with_dimensions","with_fbo0","with_fbo0","with_inset","with_inset","with_linear_gamma","with_linear_gamma","with_local_matrix","with_local_matrix","with_matrix","with_matrix","with_offset","with_offset","with_offset","with_offset_to","with_offset_to","with_outset","with_outset","with_size","with_srgb_gamma","with_srgb_gamma","with_subsampling","with_transform","with_transform_with_perspective_clip","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap","wrap_mut","wrap_ref","wrap_send","wrap_send","wrapper","writable_addr","writable_addr_at","write","write_pixels_from_bitmap","write_pixels_from_pixmap","write_to_memory","x","x","x","x","x","x","x","x","x","x","x","x","x_height","x_max","x_min","y","y","y","y","y","y","y","y","y","y","y","y","year","yuv_color_space","yuv_color_space","yuv_color_space","yuv_to_rgb","yuva_info","yuva_info","yuva_info","yuva_info","yuva_info","yuva_pixmap_info","yuva_pixmaps","z","z","z","z","z","link_to_destination","named_destination","rect_with_url","arithmetic","AutoCanvasRestore","AutoRestoredCanvas","Canvas","F16_COLOR_TYPE","Fast","GlyphPositions","INIT_WITH_PREVIOUS","Lattice","Lines","OwnedCanvas","PRESERVE_LCD_TEXT","PointMode","Points","Points","Polygon","RSXforms","SaveLayerFlags","SaveLayerRec","SetMatrix","SrcRectConstraint","Strict","TopLayerPixels","access_top_layer_pixels","all","all","annotate_link_to_destination","annotate_named_destination","annotate_rect_with_url","as_mut","as_mut","backdrop","base_layer_size","base_props","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","clear","clip_irect","clip_mask","clip_matrix","clip_path","clip_rect","clip_region","clip_rrect","clip_shader","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","colors","complement","complement","concat","concat_44","contains","contains","default","default","deref","deref","deref_mut","deref_mut","device_clip_bounds","difference","difference","direct_context","discard","draw_annotation","draw_arc","draw_circle","draw_color","draw_drawable","draw_drawable_at","draw_drrect","draw_glyphs_at","draw_glyphs_utf8","draw_image","draw_image_lattice","draw_image_nine","draw_image_rect","draw_image_rect_with_sampling_options","draw_image_with_sampling_options","draw_irect","draw_line","draw_oval","draw_paint","draw_patch","draw_path","draw_picture","draw_point","draw_points","draw_rect","draw_region","draw_round_rect","draw_rrect","draw_shadow","draw_str","draw_str_align","draw_text_blob","draw_vertices","drop","drop","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","flags","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bitmap","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","from_raster_direct","from_raster_direct_n32","guard","hash","hash","hash","image_info","info","inner","inner_mut","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_all","is_clip_empty","is_clip_rect","is_empty","is_empty","iter","iter","iter_names","iter_names","lattice","local_clip_bounds","local_to_device","local_to_device_as_3x3","new","new_null","new_surface","not","origin","paint","partial_cmp","peek_pixels","pixels","props","quick_reject","quick_reject","read_pixels","read_pixels_to_bitmap","read_pixels_to_pixmap","recording_context","rect_types","remove","remove","reset_matrix","restore","restore","restore_to_count","rotate","row_bytes","save","save_count","save_layer","save_layer_alpha","save_layer_alpha_f","scale","set","set","set_matrix","set_matrix","set_matrix","skew","sub","sub_assign","surface","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","top_props","total_matrix","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","unwrap","wrap","write_pixels","write_pixels_from_bitmap","x_divs","y_divs","Default","FixedColor","Lattice","RectType","Transparent","borrow","borrow","borrow_mut","borrow_mut","bounds","clone","clone_into","colors","default","eq","equivalent","fmt","fmt","from","from","hash","into","into","rect_types","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x_divs","y_divs","ASTC","AVIF","BMP","BmpDecoder","BottomLeft","BottomRight","BottomUp","Codec","CouldNotRewind","DEFAULT","DNG","Decoder","EncodedImageFormat","EncodedOrigin","ErrorInInput","FrameInfo","GIF","GifDecoder","HEIF","ICO","ID","IcoDecoder","IncompleteInput","InternalError","InvalidConversion","InvalidInput","InvalidParameters","InvalidScale","JPEG","JPEGXL","JpegDecoder","KTX","LAST","LeftBottom","LeftTop","No","Options","PKM","PNG","PngDecoder","PreferAnimation","PreferStillImage","Result","RightBottom","RightTop","ScanlineOrder","SelectionPolicy","Success","TopDown","TopLeft","TopRight","Unimplemented","WBMP","WEBP","WbmpDecoder","Yes","ZeroInitialized","alpha_type","blend","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codec_animation","decode_stream","decode_stream","decode_stream","decode_stream","decode_stream","decode_stream","decode_stream","default","default","dimensions","disposal_method","duration","encoded_format","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_index","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data","fully_received","get_frame_count","get_frame_info","get_image","get_pixels","get_pixels_to_pixmap","get_pixels_with_options","get_repetition_count","get_scaled_dimensions","get_scanlines","get_yuva_planes","has_alpha_within_bounds","hash","hash","hash","hash","incremental_decode","info","inner","inner","inner_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","is_format","is_format","is_format","is_format","is_format","is_format","is_format","next_scanline","origin","outbound_scanline","pixmap_utils","prior_frame","query_yuva_info","rect","required_frame","result_to_string","scanline_order","skip_scanlines","start_incremental_decode","start_scanline_decode","subset","swaps_width_height","to_matrix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","unwrap","valid_subset","wrap","wrap","zero_initialized","Blend","DisposalMethod","Keep","RestoreBGColor","RestorePrevious","Src","SrcOver","orient","swap_width_height","ColorFilter","color_filters","composed","filter_color","filter_color4f","fmt","from_argb","from_table","high_contrast","is_alpha_unchanged","luma","new_lighting","overdraw","to_a_color_matrix","to_a_color_mode","blend","blend_with_color_space","compose","hsla_matrix","hsla_matrix_of_color_matrix","lerp","lighting","linear_to_srgb_gamma","matrix","matrix_row_major","srgb_to_linear_gamma","table","table_argb","blend","blend_with_color_space","compose","hsla_matrix","hsla_matrix_of_color_matrix","lerp","lighting","linear_to_srgb_gamma","matrix","matrix_row_major","srgb_to_linear_gamma","table","table_argb","ColorMatrix","default","eq","fmt","get_row_major","new","post_concat","post_translate","pre_concat","rgb_to_yuv","set_concat","set_identity","set_row_major","set_saturation","set_scale","yuv_to_rgb","new_lighting","BLACK","BLUE","CYAN","DARK_GREY","GREEN","GREY","LIGHT_GREY","MAGENTA","RED","TRANSPARENT","WHITE","YELLOW","ContourMeasure","ContourMeasureIter","GET_POSITION","GET_POS_AND_TAN","GET_TANGENT","MatrixFlags","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","complement","contains","contains","default","difference","difference","empty","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","from_path","get_matrix","hash","insert","insert","intersection","intersection","intersects","intersects","into","into_iter","is_all","is_all","is_closed","is_empty","is_empty","iter","iter","iter_names","iter_names","length","new","next","not","partial_cmp","pos_tan","remove","remove","reset","segment","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","toggle","toggle","try_from","try_into","type_id","union","union","new","new","new","Document","abort","begin_page","borrow","borrow_mut","canvas","close","end_page","fmt","from","into","page","pages","state","try_from","try_into","type_id","OnPage","Open","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","Drawable","GPUDrawHandler","approximate_bytes_used","bounds","draw","draw_at","fmt","generation_id","gpu_draw_handler","make_picture_snapshot","notify_drawing_changed","snap_gpu_draw_handler","GPUDrawHandler","draw","fmt","bitmap","image","pixmap","Alias","AntiAlias","Edging","Font","SubpixelAntiAlias","borrow","borrow_mut","clone","clone_into","count_str","count_text","default","edging","eq","equivalent","fmt","fmt","from","from_typeface","from_typeface_with_params","get_bounds","get_intercepts","get_path","get_pos","get_widths","get_widths_bounds","get_x_pos","hash","hinting","into","is_baseline_snap","is_embedded_bitmaps","is_embolden","is_force_auto_hinting","is_linear_metrics","is_subpixel","measure_str","measure_text","metrics","new","scale_x","set_baseline_snap","set_edging","set_embedded_bitmaps","set_embolden","set_force_auto_hinting","set_hinting","set_linear_metrics","set_scale_x","set_size","set_skew_x","set_subpixel","set_typeface","size","skew_x","spacing","str_to_glyphs","str_to_glyphs_vec","text_to_glyphs","text_to_glyphs_vec","to_owned","try_from","try_into","type_id","typeface","typeface_or_default","unichar_to_glyph","unichar_to_glyphs","with_size","FontArguments","Palette","VariationPosition","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","collection_index","coordinates","default","drop","fmt","fmt","fmt","from","from","from","index","inner","inner_mut","into","into","into","new","overrides","palette","palette","set_collection_index","set_palette","set_variation_design_position","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap","variation_design_position","variation_position","wrap","Override","borrow","borrow_mut","clone","clone_into","color","default","eq","equivalent","fmt","from","index","inner","inner_mut","into","to_owned","try_from","try_into","type_id","unwrap","wrap","Coordinate","axis","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","inner","inner_mut","into","to_owned","try_from","try_into","type_id","unwrap","value","wrap","BOUNDS_INVALID","Flags","FontMetrics","STRIKEOUT_POSITION_IS_VALID","STRIKEOUT_THICKNESS_IS_VALID","UNDERLINE_POSITION_IS_VALID","UNDERLINE_THICKNESS_IS_VALID","all","all","ascent","avg_char_width","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","bottom","cap_height","clone","clone","clone_into","clone_into","cmp","complement","complement","contains","contains","default","default","descent","difference","difference","empty","empty","eq","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","has_bounds","hash","inner","inner_mut","insert","insert","intersection","intersection","intersects","intersects","into","into","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","leading","max_char_width","not","partial_cmp","remove","remove","set","set","strikeout_position","strikeout_thickness","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","top","try_from","try_from","try_into","try_into","type_id","type_id","underline_position","underline_thickness","union","union","unwrap","wrap","x_height","x_max","x_min","VariationAxis","def","max","min","tag","variation","Axis","borrow","borrow_mut","clone","clone_into","def","default","eq","fmt","from","inner","inner_mut","into","is_hidden","max","min","new","set_hidden","tag","to_owned","try_from","try_into","type_id","unwrap","wrap","BLACK","BOLD","CONDENSED","EXPANDED","EXTRA_BLACK","EXTRA_BOLD","EXTRA_CONDENSED","EXTRA_EXPANDED","EXTRA_LIGHT","FontStyle","INVISIBLE","Italic","LIGHT","MEDIUM","NORMAL","NORMAL","Oblique","SEMI_BOLD","SEMI_CONDENSED","SEMI_EXPANDED","Slant","THIN","ULTRA_CONDENSED","ULTRA_EXPANDED","Upright","Weight","Width","bold","bold_italic","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","deref","deref","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","inner","inner","inner","inner_mut","inner_mut","inner_mut","into","into","into","into","italic","new","normal","partial_cmp","partial_cmp","slant","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrap","unwrap","unwrap","weight","width","wrap","wrap","wrap","BackendAPI","BackendApi","BackendDrawableInfo","BackendFormat","BackendRenderTarget","BackendSurfaceMutableState","BackendTexture","BottomLeft","Budgeted","Context","ContextOptions","Dawn","Dawn","Direct3D","DirectContext","DirectContextId","DriverBugWorkarounds","FlushInfo","MAX_PLANES","Metal","Metal","MipMapped","Mipmapped","Mock","Mock","MutableTextureState","NO","No","No","No","No","No","No","OpenGL","OpenGL_GrBackend","Protected","RecordingContext","Renderable","ResourceCacheLimits","ResourceCacheUsage","SemaphoresSubmitted","SurfaceOrigin","TopLeft","Vulkan","Vulkan","YES","YUVABackendTextureInfo","YUVABackendTextures","Yes","Yes","Yes","Yes","Yes","Yes","abandon","abandoned","add_and_true_to_loop_condition","applyOverrides","as_direct_context","as_gl_format","as_gl_format_enum","backend","backend","backend","backend","backend","backend","backend_format","backend_format","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_mask","check_async_work_completion","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_type_supported_as_image","color_type_supported_as_surface","compressed_backend_format","compressed_backend_format","context_options","default","default","default","default_backend_format","deref","deref_mut","destruct","dimensions","dimensions","disable_blend_equation_advanced","disable_discard_framebuffer","disable_dual_source_blending_support","disable_texture_storage","disallow_large_instanced_draw","emulate_abs_int_function","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flush","flush_and_submit","flush_and_submit_image","flush_image","flush_image_with_info","flush_on_framebuffer_change","flush_submit_and_sync_cpu","flush_with_info","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_update_scissor_state_when_binding_fbo0","free_gpu_resources","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gl","gl_clear_broken","gl_framebuffer_info","gl_texture_info","gl_texture_parameters_modified","has_mip_maps","has_mipmaps","hash","hash","hash","hash","hash","hash","hash","height","height","id","images","inner","inner","inner","inner_mut","inner_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","is_framebuffer_only","is_protected","is_protected","is_same_texture","is_valid","is_valid","is_valid","is_valid","label","max_fragment_uniform_vectors_32","max_msaa_sample_count_4","max_render_target_size","max_resource_bytes","max_resources","max_surface_sample_count_for_color_type","max_texture_size","mipmapped","mipmapped","new","new","new","new","new","new1","new_gl","new_gl","new_gl","new_gl","new_gl_with_label","num_planes","num_planes","oomed","pack_parameters_workaround_with_pack_buffer","perform_deferred_cleanup","plane_format","plane_formats","precompile_shader","purge_unlocked_resources","release_resources_and_abandon","remove_pow_with_constant_exponent","reset","reset_gl_texture_bindings","resource_bytes","resource_cache_limit","resource_cache_limits","resource_cache_purgeable_bytes","resource_cache_usage","resource_count","rewrite_do_while_loops","sample_count","set_backend_render_target_state","set_backend_render_target_state_and_return_previous","set_backend_texture_state","set_backend_texture_state_and_return_previous","set_mutable_state","set_mutable_state","set_resource_cache_limit","set_resource_cache_limits","stencil_bits","submit","supports_distance_field_text","surfaces","texture","texture_origin","texture_origin","textures","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_texture_2d","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbind_attachments_on_bound_render_fbo_delete","unfold_short_circuit_as_ternary_operation","unwrap","unwrap","unwrap","width","width","wrap","wrap","wrap","yuv_color_space","yuva_info","yuva_info","BackendBinary","BackendSource","ContextOptions","Default","Enable","No","ShaderCacheStrategy","SkSL","Yes","allow_msaa_on_new_intel","allow_multiple_glyph_cache_textures","allow_path_mask_caching","always_use_text_storage_when_available","avoid_stencil_buffers","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer_map_threshold","clone","clone","clone_into","clone_into","default","disable_coverage_counting_paths","disable_distance_field_paths","disable_driver_correctness_workarounds","disable_gpu_yuv_conversion","do_manual_mipmapping","driver_bug_workarounds","enable_experimental_hardware_tessellation","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","glyph_cache_texture_maximum_bytes","glyphs_as_paths_font_size","hash","hash","inner","inner_mut","internal_multisample_count","into","into","into","max_cached_vulkan_secondary_command_buffers","max_texture_size_override","min_distance_field_font_size","new","prefer_external_images_over_es3","reduce_ops_task_splitting","reduced_shader_variations","runtime_program_cache_size","shader_cache_strategy","skip_gl_error_checks","suppress_mipmap_support","suppress_prints","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap","use_draw_instead_of_clear","wrap","ALPHA8","BGRA8","BLEND","BackendState","COMPRESSED_ETC1_RGB8","COMPRESSED_RGB8_BC1","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_BC1","DEPTH24_STENCIL8","Enum","Extensions","FIXED_FUNCTION","Format","FramebufferInfo","GL","GLES","Interface","LUMINANCE16F","LUMINANCE8","LUMINANCE8_ALPHA8","Last","LastColorFormat","MISC","MSAA_ENABLE","None","PIXEL_STORE","PROGRAM","R16","R16F","R8","RENDER_TARGET","RG16","RG16F","RG8","RGB10_A2","RGB565","RGB8","RGBA16","RGBA16F","RGBA4","RGBA8","RGBX8","SRGB8_ALPHA8","STENCIL","STENCIL_INDEX16","STENCIL_INDEX8","Standard","SurfaceInfo","TEXTURE_BINDING","TextureInfo","UInt","Unknown","VERTEX","VIEW","WebGL","add","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","default","default","default","difference","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extensions","extensions_mut","fboid","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_fboid","from_iter","from_name","from_target_and_id","has","has_extension","hash","hash","hash","id","inner","inner","inner","inner_mut","inner_mut","inner_mut","insert","intersection","intersects","into","into","into","into","into","into","into_iter","is_all","is_empty","is_initialized","is_protected","is_protected","iter","iter_names","level_count","new_load_with","new_load_with_cstr","new_native","not","partial_cmp","protected","protected","protected","remove","remove","reset","sample_count","set","sub","sub_assign","symmetric_difference","target","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","unwrap","unwrap","unwrap","validate","wrap","wrap","wrap","adopt_texture_from","borrow_texture_from","cross_context_texture_from_pixmap","get_backend_texture_from_image","subset_texture_from","texture_from_compressed_texture_data","texture_from_image","texture_from_yuva_pixmaps","texture_from_yuva_textures","get_backend_render_target","get_backend_texture","render_target","render_target_with_characterization","wrap_backend_render_target","wrap_backend_texture","Colors","ColorsInSpace","Flags","GradientShaderColors","INTERPOLATE_COLORS_IN_PREMUL","Interpolation","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","color_space","complement","complement","contains","contains","default","difference","difference","empty","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","hash","hash","hue_method","in_premul","inner","inner_mut","insert","insert","interpolation","intersection","intersection","intersects","intersects","into","into","into","into_iter","is_all","is_all","is_empty","is_empty","is_empty","iter","iter","iter_names","iter_names","len","linear","linear_with_interpolation","not","partial_cmp","radial","radial_with_interpolation","remove","remove","set","set","sub","sub_assign","sweep","sweep_with_interpolation","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","two_point_conical","two_point_conical_with_interpolation","type_id","type_id","type_id","union","union","unwrap","wrap","ColorSpace","Decreasing","Destination","HSL","HWB","HueMethod","InPremul","Increasing","LCH","Lab","Longer","No","OKLCH","OKLab","SRGB","SRGBLinear","Shorter","Yes","allow_jit","font_cache_count_limit","font_cache_count_used","font_cache_limit","font_cache_used","init","purge_all_caches","purge_font_cache","purge_pinned_font_cache","purge_resource_cache","resource_cache_single_allocation_byte_limit","resource_cache_total_bytes_limit","resource_cache_total_bytes_used","set_font_cache_count_limit","set_font_cache_limit","set_resource_cache_single_allocation_byte_limit","set_resource_cache_total_bytes_limit","InvertBrightness","InvertLightness","InvertStyle","Last","NoInvert","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","into","to_owned","try_from","try_into","type_id","HighContrastConfig","borrow","borrow_mut","clone","clone_into","contrast","default","eq","fmt","from","grayscale","high_contrast_config","inner","inner_mut","into","invert_style","is_valid","new","new","to_owned","try_from","try_into","type_id","unwrap","wrap","InvertBrightness","InvertLightness","InvertStyle","NoInvert","Allow","BC1_RGB8_UNORM","BC1_RGBA8_UNORM","BitDepth","CachingHint","CompressionType","CubicResampler","Disallow","ETC2_RGB8_UNORM","F16","Image","None","U8","alpha_type","b","backend_texture","borrow","borrow","borrow_mut","borrow_mut","bounds","c","catmull_rom","clone","clone","clone_into","clone_into","color_space","color_type","decode_to_raster","dimensions","encode","encode_to_data","encode_to_data_with_context","encode_to_data_with_quality","encoded_data","eq","eq","equivalent","flush","flush_and_submit","flush_with_info","fmt","fmt","fmt","from","from","from_adopted_texture","from_bitmap","from_compressed","from_encoded","from_encoded_with_alpha_type","from_generator","from_nv12_textures_copy","from_picture","from_picture_with_props","from_pixmap_cross_context","from_raster_data","from_texture","from_yuva_pixmaps","from_yuva_textures","has_mipmaps","hash","height","image_info","images","inner","inner_mut","into","into","is_alpha_only","is_lazy_generated","is_opaque","is_texture_backed","is_valid","make_color_space","make_non_texture_image","make_raster_image","make_subset","mitchell","new_color_space","new_color_space_with_context","new_cross_context_from_pixmap","new_raster_from_compressed","new_subset","new_subset_with_context","new_texture_from_compressed","new_texture_image","new_texture_image_budgeted","new_with_filter","peek_pixels","read_pixels","read_pixels_to_pixmap","read_pixels_to_pixmap_with_context","read_pixels_with_context","reinterpret_color_space","scale_pixels","texture_size","to_non_texture_image","to_owned","to_owned","to_raster_image","to_raw_shader","to_shader","try_from","try_from","try_into","try_into","type_id","type_id","unique_id","unwrap","width","with_default_mipmaps","wrap","BitDepth","F16","U8","deferred_from_encoded_data","deferred_from_generator","deferred_from_picture","raster_from_bitmap","raster_from_compressed_texture_data","raster_from_data","Forward","ImageFilter","MapDirection","Reverse","alpha_threshold","arithmetic","blur","borrow","borrow_mut","can_compute_fast_bounds","clone","clone_into","color_filter","color_filter_node","compose","compute_fast_bounds","count_inputs","dilate","displacement_map_effect","distant_lit_diffuse_lighting","distant_lit_specular_lighting","eq","equivalent","erode","filter_bounds","fmt","fmt","from","from_picture","get_input","hash","input","inputs","into","magnifier","magnifier2","matrix_convolution","merge","offset","point_lit_diffuse_lighting","point_lit_specular_lighting","spot_lit_diffuse_lighting","spot_lit_specular_lighting","tile","to_a_color_filter","to_owned","try_from","try_into","type_id","with_local_matrix","ArithmeticFPInputs","CropRect","Dither","NO_CROP_RECT","No","Yes","alpha_threshold","arithmetic","blend","blur","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","color_filter","compose","default","dilate","displacement_map","distant_lit_diffuse","distant_lit_specular","drop_shadow","drop_shadow_only","enforce_pm_color","eq","eq","eq","equivalent","erode","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","image","inner","inner_mut","into","into","into","k","magnifier","magnifier2","matrix_convolution","matrix_transform","merge","new","offset","picture","point_lit_diffuse","point_lit_specular","rect","shader","shader_with_dither","spot_lit_diffuse","spot_lit_specular","tile","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap","wrap","BitDepth","F16","U8","borrow","borrow_mut","clone","clone_into","deferred_from_encoded_data","deferred_from_generator","deferred_from_picture","eq","equivalent","fmt","from","hash","into","raster_from_bitmap","raster_from_compressed_texture_data","raster_from_data","to_owned","try_from","try_into","type_id","AlphaOption","BlendOnBlack","BothDirections","Downsample","Horizontal","Ignore","No","Options","alpha_option","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","downsample","encode","encode_image","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","into","into","quality","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","xmp_metadata","new","new","AFFINE","AffineMember","ApplyPerspectiveClip","Center","End","Fill","IDENTITY","IDENTITY","Matrix","Member","No","PERSPECTIVE","Persp0","Persp1","Persp2","SCALE","ScaleToFit","ScaleX","ScaleX","ScaleY","ScaleY","SkewX","SkewX","SkewY","SkewY","Start","TRANSLATE","TransX","TransX","TransY","TransY","TypeMask","Yes","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cheap_equal_to","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","complement","concat","contains","contains","decompose_scale","default","difference","difference","dirty_matrix_type_cache","dump","empty","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fixed_step_in_x","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_affine","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","from_poly_to_poly","from_rect_to_rect","get_9","get_type","has_perspective","hash","hash","hash","i","index","index","index","index_mut","index_mut","index_mut","inner","inner_mut","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_iter","invalid_matrix","invert","is_all","is_all","is_empty","is_empty","is_finite","is_fixed_step_in_x","is_identity","is_scale_translate","is_similarity","is_translate","iter","iter","iter_names","iter_names","map_homogeneous_points","map_homogeneous_points_2d","map_origin","map_point","map_points","map_points_inplace","map_radius","map_rect","map_rect_scale_translate","map_rect_to_quad","map_rect_with_perspective_clip","map_vector","map_vectors","map_vectors_inplace","map_xy","max_scale","min_max_scales","min_scale","mul","new_all","new_identity","new_scale","new_trans","normalize_perspective","not","partial_cmp","persp_x","persp_y","post_concat","post_idiv","post_rotate","post_scale","post_skew","post_translate","pre_concat","pre_rotate","pre_scale","pre_skew","pre_translate","preserves_axis_alignment","preserves_right_angles","rc","rect_stays_rect","rect_to_rect","remove","remove","reset","rotate_deg","rotate_deg_pivot","rotate_rad","scale","scale_x","scale_y","set","set","set_9","set_affine","set_affine_identity","set_all","set_concat","set_identity","set_persp_x","set_persp_y","set_poly_to_poly","set_rect_to_rect","set_rotate","set_rsxform","set_scale","set_scale_translate","set_scale_x","set_scale_y","set_sin_cos","set_skew","set_skew_x","set_skew_y","set_translate","set_translate_x","set_translate_y","skew","skew_x","skew_y","sub","sub_assign","symmetric_difference","symmetric_difference","to_affine","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","translate","translate_x","translate_y","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","unwrap","wrap","new","new_translate","new","DOT22","HLG","LINEAR","PQ","REC2020","SRGB","NUM_COLORS","new","Bevel","Butt","Cap","Fill","Join","Miter","Paint","Round","Round","Square","Stroke","StrokeAndFill","Style","alpha","alpha_f","as_blend_mode","blend_mode","blend_mode_or","blender","color","color4f","color_filter","fmt","image_filter","is_anti_alias","is_dither","is_src_over","mask_filter","new","nothing_to_draw","path_effect","reset","set_alpha","set_alpha_f","set_anti_alias","set_argb","set_blend_mode","set_blender","set_color","set_color4f","set_color_filter","set_dither","set_image_filter","set_mask_filter","set_path_effect","set_shader","set_stroke","set_stroke_cap","set_stroke_join","set_stroke_miter","set_stroke_width","set_style","shader","stroke_cap","stroke_join","stroke_miter","stroke_width","style","AddPathMode","Append","ArcSize","CCW","CONIC","CUBIC","CW","Close","Conic","Cubic","Direction","Done","EvenOdd","Extend","FillType","InverseEvenOdd","InverseWinding","Iter","LINE","Large","Line","MAX_POINTS","Move","Path","QUAD","Quad","RawIter","SegmentMask","Small","Verb","Winding","add_arc","add_circle","add_oval","add_path","add_path_matrix","add_poly","add_rect","add_round_rect","add_rrect","all","all","approximate_bytes_used","arc_to","arc_to_rotated","arc_to_tangent","as_winding","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","circle","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","cmp","complement","complement","compute_tight_bounds","conic_to","conic_weight","conic_weight","conservatively_contains_rect","contains","contains","contains","convert_conic_to_quads","convexity_type","convexity_type_or_unknown","count_points","count_verbs","cubic_to","default","default","deserialize","difference","difference","drop","drop","dump","dump_arrays","dump_arrays_as_data","dump_as_data","dump_hex","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fill_type","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","from_str","from_svg","generation_id","get_point","get_points","get_verbs","hash","hash","hash","hash","inc_reserve","insert","insert","interpolate","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_all","is_all","is_close_line","is_closed_contour","is_convex","is_cubic_degenerate","is_empty","is_empty","is_empty","is_finite","is_interpolatable","is_inverse_fill_type","is_last_contour_closed","is_line","is_line_degenerate","is_oval","is_quad_degenerate","is_rect","is_rrect","is_valid","is_volatile","iter","iter","iter_names","iter_names","last_pt","line","line_to","make_scale","make_transform","move_to","new","new","new","new_from","next","next","not","offset","op","oval","oval_with_start_index","partial_cmp","peek","points","polygon","quad_to","r_arc_to_rotated","r_conic_to","r_cubic_to","r_line_to","r_move_to","r_quad_to","rect","remove","remove","reset","reverse_add_path","rewind","rrect","rrect_with_start_index","segment_masks","serialize","set","set","set_fill_type","set_is_volatile","set_last_pt","set_path","set_path","shrink_to_fit","simplify","sub","sub_assign","swap","symmetric_difference","symmetric_difference","tight_bounds","to_owned","to_owned","to_owned","to_owned","to_svg","to_svg_with_encoding","toggle","toggle","toggle_inverse_fill_type","transform","transform_with_perspective_clip","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","update_bounds_cache","with_offset","with_transform","with_transform_with_perspective_clip","LastEnum","Morph","Rotate","Style","Translate","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","into","new","to_owned","try_from","try_into","type_id","new","DashInfo","PathEffect","as_a_dash","borrow","borrow_mut","clone","clone_into","compose","corner_path","dash","discrete","eq","filter_path","filter_path_inplace","filter_path_inplace_with_matrix","fmt","fmt","from","intervals","into","line_2d","matrix","matrix_translate","merge","needs_ctm","path_1d","path_2d","phase","stroke","sum","to_owned","trim","try_from","try_into","type_id","GET_POSITION","GET_POS_AND_TAN","GET_TANGENT","MatrixFlags","PathMeasure","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","complement","contains","contains","default","default","difference","difference","empty","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","from_path","hash","insert","insert","intersection","intersection","intersects","intersects","into","into_iter","is_all","is_all","is_closed","is_empty","is_empty","iter","iter","iter_names","iter_names","length","matrix","new","next_contour","not","partial_cmp","pos_tan","remove","remove","segment","set","set","set_path","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","toggle","toggle","try_from","try_into","type_id","union","union","CCW","CW","Close","Conic","Cubic","EvenOdd","InverseEvenOdd","InverseWinding","Line","Move","PathDirection","PathFillType","PathSegmentMask","PathVerb","Quad","Winding","fill_path_with_paint","AttributeList","Metadata","StructureElementNode","alt","append_child","append_float","append_float_array","append_int","attributes","attributes_mut","author","borrow","borrow","borrow_mut","borrow_mut","child_vector","creation","creator","default","default","default","drop","encoding_quality","fmt","fmt","fmt","from","from","into","into","keywords","lang","modified","new","new_document","node_id","pdfa","producer","raster_dpi","set_alt","set_child_vector","set_lang","set_node_id","set_type_string","subject","title","try_from","try_from","try_into","try_into","type_id","type_id","type_string","fractal_noise","turbulence","PictureRecorder","begin_recording","finish_recording_as_drawable","finish_recording_as_picture","fmt","new","recording_canvas","ALL","AVG","Comment","FilterFlag","NONE","Options","PAETH","SUB","UP","ZERO","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","comments","complement","complement","contains","contains","default","difference","difference","empty","empty","encode","encode_image","eq","eq","eq","equivalent","equivalent","equivalent","extend","filter_flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","hash","inner","inner_mut","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","keyword","new","not","partial_cmp","remove","remove","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","text","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","unwrap","wrap","z_lib_level","Cliperator","Combine","Difference","Intersect","Intersects","Iterator","LastOp","Region","RegionOp","Replace","ReverseDifference","Spanerator","Union","XOR","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","combine","compute_region_complexity","contains","contains","contains","contains_point","contains_rect","contains_region","difference","difference","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_rect","get_boundary_path","hash","inner","inner","inner","inner_mut","inner_mut","inner_mut","intersect","intersect","intersects","intersects","intersects","intersects_rect","intersects_region","into","into","into","into","into_iter","into_iter","into_iter","is_complex","is_done","is_done","is_empty","is_rect","new","new","new","new","new_empty","next","next","next","next","next","op_rect","op_rect_region","op_region","op_region_rect","quick_contains","quick_reject","quick_reject","quick_reject_rect","quick_reject_region","read_from_memory","rect","rect","replace","replace","reset","reverse_difference","reverse_difference","rewind","rgn","set","set_empty","set_path","set_rect","set_rects","set_region","swap","to_owned","to_owned","to_owned","to_owned","translate","translated","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","unwrap","unwrap","unwrap","wrap","wrap","wrap","write_to_memory","xor","xor","Complex","Corner","Empty","LastType","LowerLeft","LowerRight","NinePatch","Oval","RRect","Rect","SIZE_IN_MEMORY","Simple","Type","UpperLeft","UpperRight","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone_into","clone_into","clone_into","contains","default","dump","dump_hex","dump_to_string","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","get_type","hash","hash","height","inner","inner_mut","inset","into","into","into","is_complex","is_empty","is_nine_patch","is_oval","is_rect","is_simple","is_valid","new","new_empty","new_nine_patch","new_oval","new_rect","new_rect_radii","new_rect_xy","offset","outset","radii","read_from_memory","rect","set_empty","set_nine_patch","set_oval","set_rect","set_rect_radii","set_rect_xy","simple_radii","to_owned","to_owned","to_owned","transform","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrap","width","with_inset","with_offset","with_outset","wrap","write_to_memory","Blender","Blender","Child","ChildPtr","ChildType","ColorFilter","ColorFilter","Options","RuntimeEffect","Shader","Shader","Uniform","Variable","Varying","allow_blender","allow_color_filter","allow_shader","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone_into","clone_into","clone_into","count","default","eq","eq","equivalent","equivalent","find_child","find_input","find_uniform","flags","fmt","fmt","fmt","fmt","fmt","fmt","force_unoptimized","from","from","from","from","from","from","hash","index","inner","inner_mut","input_size","inputs","into","into","into","is_array","is_color","make_blender","make_color_filter","make_for_blender","make_for_color_filer","make_for_shader","make_image","make_shader","name","name","offset","size_in_bytes","source","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","ty","ty","ty","type_id","type_id","type_id","uniform","uniform_size","uniforms","unwrap","wrap","ARRAY","COLOR","FRAGMENT","Flags","Float","Float2","Float2x2","Float3","Float3x3","Float4","Float4x4","HALF_PRECISION","Int","Int2","Int3","Int4","Type","VERTEX","all","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","not","partial_cmp","remove","remove","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","CubicResampler","FilterMode","FilterOptions","Linear","Linear","Linear","MipmapMode","Nearest","Nearest","Nearest","None","SamplingMode","SamplingOptions","b","borrow","borrow","borrow_mut","borrow_mut","c","clone","clone","clone_into","clone_into","cubic","default","eq","eq","equivalent","filter","fmt","fmt","from","from","from","from","from","from_aniso","hash","inner","inner_mut","into","into","is_aniso","max_aniso","mipmap","mipmap","new","sampling","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrap","use_cubic","wrap","GradientInfo","Shader","borrow","borrow_mut","clone","clone_into","color_count","color_offsets","colors","default","eq","fmt","fmt","fractal_perlin_noise","from","gradient_flags","image","into","is_a_image","is_opaque","linear_gradient","linear_gradient_with_interpolation","radial_gradient","radial_gradient_with_interpolation","shaders","sweep_gradient","sweep_gradient_with_interpolation","tile_mode","to_owned","try_from","try_into","turbulence_perlin_noise","two_point_conical_gradient","two_point_conical_gradient_with_interpolation","type_id","with_color_filter","with_local_matrix","blend","color","color_in_space","coord_clamp","empty","new","blend","color","color_in_space","coord_clamp","empty","new","new","Fill","Fill","Hairline","Hairline","InitStyle","Stroke","StrokeAndFill","StrokeRec","Style","apply_to_paint","apply_to_path","apply_to_path_inplace","borrow","borrow","borrow_mut","borrow_mut","cap","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from_paint","has_equal_effect","hash","hash","inflation_radius","inflation_radius_from_paint_and_style","inflation_radius_from_params","into","into","is_fill_style","is_hairline_style","join","miter","need_to_apply","new","new_fill","new_hairline","res_scale","set_fill_style","set_hairline_style","set_res_scale","set_stroke_params","set_stroke_style","style","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","width","BackendHandleAccess","BackendSurfaceAccess","ContentChangeMode","Discard","DiscardWrite","DiscardWrite_BackendHandleAccess","FlushRead","FlushRead_BackendHandleAccess","FlushWrite","FlushWrite_BackendHandleAccess","NoAccess","Present","Retain","Surface","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","canvas","characterize","clone","clone","clone","clone_into","clone_into","clone_into","direct_context","draw","draw_display_list","draw_display_list_with_offset","eq","eq","eq","equivalent","equivalent","equivalent","flush","flush_and_submit","flush_submit_and_sync_cpu","flush_with_access_info","flush_with_mutable_state","fmt","fmt","fmt","fmt","from","from","from","from_backend_render_target","from_backend_texture","generation_id","get_backend_render_target","get_backend_texture","hash","hash","hash","height","image_info","image_snapshot","image_snapshot_with_bounds","into","into","into","is_compatible","new_null","new_raster","new_raster_direct","new_raster_n32_premul","new_render_target","new_render_target_with_characterization","new_surface","new_surface_with_dimensions","notify_content_will_change","peek_pixels","props","read_pixels","read_pixels_to_bitmap","read_pixels_to_pixmap","recording_context","replace_backend_texture","replace_backend_texture_with_mode","resolve_msaa","surfaces","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","width","write_pixels_from_bitmap","write_pixels_from_pixmap","null","raster","raster_n32_premul","wrap_pixels","null","raster","raster_n32_premul","wrap_pixels","Canvas","canvas","CONVERT_TEXT_TO_PATHS","Canvas","Flags","NO_PRETTY_XML","RELATIVE_PATH_ENCODING","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","default","deref","deref_mut","difference","drop","empty","end","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","insert","intersection","intersects","into","into","into_iter","is_all","is_empty","iter","iter_names","new","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","from_argb","from_table","Inverted","Mode","Normal","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","into","new","to_owned","try_from","try_into","type_id","DoIncludeData","DontIncludeData","FactoryId","FontId","FontTableTag","IncludeDataIfLocal","LocalizedString","LocalizedStringsIter","SerializeBehavior","Typeface","TypefaceId","borrow","borrow","borrow_mut","borrow_mut","bounds","clone","clone","clone_into","clone_into","clone_with_arguments","copy_table_data","count_glyphs","count_tables","default","deserialize","eq","eq","equal","equivalent","equivalent","family_name","fmt","fmt","fmt","fmt","font_style","from","from","from_data","from_name","get_kerning_pair_adjustments","get_table_data","get_table_size","hash","into","into","is_bold","is_fixed_pitch","is_italic","language","new","new_family_name_iterator","next","post_script_name","serialize","str_to_glyphs","string","table_tags","text_to_glyphs","to_font_data","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unichar_to_glyph","unichars_to_glyphs","unique_id","units_per_em","variation_design_parameters","variation_design_position","Camera3D","CustomTypefaceBuilder","DrawableAndBounds","FACTORY_ID","OrderedFontMgr","Patch3D","Path","TypefaceGlyph","View3D","append","axis","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default","default","deref","deref_mut","detach","dot_with","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_data","inner","inner","inner_mut","inner_mut","into","into","into","location","new","new","new_null_canvas","observer","origin","parse_path","patch_to_matrix","reset","reset","set_font_style","set_glyph","set_metrics","shadow_utils","text_utils","to_owned","to_owned","transform","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u","unwrap","unwrap","update","v","wrap","wrap","zenith","Absolute","PathEncoding","Relative","borrow","borrow_mut","clone","clone_into","default","eq","equivalent","fmt","from","from_svg","hash","into","to_owned","to_svg","to_svg_with_encoding","try_from","try_into","type_id","ALL","GEOMETRIC_ONLY","ShadowFlags","TRANSPARENT_OCCLUDER","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","compute_tonal_colors","contains","difference","draw_shadow","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","local_bounds","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","Align","Center","Left","Right","borrow","borrow_mut","clone","clone_into","draw_str","eq","equivalent","fmt","from","get_path","hash","into","to_owned","try_from","try_into","type_id","Bone","BoneIndices","BoneWeights","Builder","BuilderFlags","HAS_COLORS","HAS_TEX_COORDS","Last","MAX_CUSTOM_ATTRIBUTES","TriangleFan","TriangleStrip","Triangles","VertexMode","Vertices","all","all","apply_bones","approximate_size","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","bone_indices","bone_indices","bone_weights","bone_weights","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone_into","clone_into","clone_into","cmp","colors","colors","complement","complement","contains","contains","decode","detach","difference","difference","empty","empty","encode","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_name","from_name","has_bones","has_colors","has_indices","has_tex_coords","hash","hash","index_count","indices","indices","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into_iter","is_all","is_all","is_empty","is_empty","is_volatile","is_volatile","iter","iter","iter_names","iter_names","mode","new","new_copy","not","partial_cmp","positions","positions","remove","remove","set","set","sub","sub_assign","symmetric_difference","symmetric_difference","tex_coords","tex_coords","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","union","unique_id","vertex_count","NativeTransmutableWrapper","PointerWrapper","RefWrapper","ValueWrapper","inner","inner","inner","inner","inner_mut","inner_mut","inner_mut","inner_mut","unwrap","unwrap","unwrap","wrap","wrap","wrap","wrap_mut","wrap_ref","Centered","MAX_PLANES","PlaneConfig","S410","S411","S420","S422","S440","S444","Siting","Subsampling","UYV","UYVA","Unknown","Unknown","YUV","YUVA","YUVAInfo","Y_UV","Y_UV_A","Y_U_V","Y_U_V_A","Y_VU","Y_VU_A","Y_V_U","Y_V_U_A","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_total_bytes","default","dimensions","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","has_alpha","has_alpha","hash","hash","height","inner","inner_mut","into","into","new","num_channels_in_plane","num_channels_in_plane","num_planes","num_planes","origin","origin_matrix","plane_config","plane_dimensions","plane_dimensions","plane_subsampling_factors","plane_subsampling_factors","siting_xy","subsampling","subsampling_factors","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrap","width","with_dimensions","with_subsampling","wrap","yuv_color_space","DataType","Float16","Last","Last","PlaneConfig","S410","S411","S420","S422","S440","S444","Subsampling","SupportedDataTypes","UYV","UYVA","Unknown","Unknown","Unorm10_Unorm2","Unorm16","Unorm8","YUV","YUVA","Y_UV","Y_UV_A","Y_U_V","Y_U_V_A","Y_VU","Y_VU_A","Y_V_U","Y_V_U_A","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default_color_type_for_data_type","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","into","into","num_channels_and_data_type","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DATA_TYPE_CNT","DataType","Float16","MAX_PLANES","MAX_PLANES","Unorm10_Unorm2","Unorm16","Unorm8","YUVAPixmapInfo","YUVAPixmaps","allocate","compute_total_bytes","data_type","data_type","fmt","fmt","from_data","from_data_type","from_external_memory","from_external_pixmaps","init_pixmaps_from_single_allocation","is_supported","new","num_planes","num_planes","pixmaps_info","plane","plane_info","plane_infos","planes","recommended_rgba_color_type","row_bytes","row_bytes_iter","yuv_color_space","yuva_info","yuva_info","yuva_pixmap_info","DataType","Float16","PlaneConfig","S410","S411","S420","S422","S440","S444","Subsampling","SupportedDataTypes","UYV","UYVA","Unknown","Unknown","Unorm10_Unorm2","Unorm16","Unorm8","YUV","YUVA","Y_UV","Y_UV_A","Y_U_V","Y_U_V_A","Y_VU","Y_VU_A","Y_V_U","Y_V_U_A","all","default","default_color_type_for_data_type","enable_data_type","fmt","from_context","num_channels_and_data_type","supported"],"q":[[0,"skia_safe"],[3318,"skia_safe::annotate"],[3321,"skia_safe::blenders"],[3322,"skia_safe::canvas"],[3634,"skia_safe::canvas::lattice"],[3667,"skia_safe::codec"],[3926,"skia_safe::codec::codec_animation"],[3933,"skia_safe::codec::pixmap_utils"],[3935,"skia_safe::color_filter"],[3950,"skia_safe::color_filter::color_filters"],[3963,"skia_safe::color_filters"],[3976,"skia_safe::color_matrix"],[3992,"skia_safe::color_matrix_filter"],[3993,"skia_safe::colors"],[4005,"skia_safe::contour_measure"],[4101,"skia_safe::corner_path_effect"],[4102,"skia_safe::dash_path_effect"],[4103,"skia_safe::discrete_path_effect"],[4104,"skia_safe::document"],[4121,"skia_safe::document::state"],[4139,"skia_safe::drawable"],[4151,"skia_safe::drawable::gpu_draw_handler"],[4154,"skia_safe::encode"],[4157,"skia_safe::font"],[4226,"skia_safe::font_arguments"],[4277,"skia_safe::font_arguments::palette"],[4298,"skia_safe::font_arguments::variation_position"],[4318,"skia_safe::font_metrics"],[4437,"skia_safe::font_parameters"],[4443,"skia_safe::font_parameters::variation"],[4468,"skia_safe::font_style"],[4576,"skia_safe::gpu"],[4952,"skia_safe::gpu::context_options"],[5031,"skia_safe::gpu::gl"],[5255,"skia_safe::gpu::images"],[5264,"skia_safe::gpu::surfaces"],[5270,"skia_safe::gradient_shader"],[5399,"skia_safe::gradient_shader::interpolation"],[5417,"skia_safe::graphics"],[5434,"skia_safe::high_contrast_config"],[5453,"skia_safe::high_contrast_filter"],[5478,"skia_safe::high_contrast_filter::high_contrast_config"],[5482,"skia_safe::image"],[5597,"skia_safe::image::images"],[5606,"skia_safe::image_filter"],[5656,"skia_safe::image_filters"],[5744,"skia_safe::images"],[5767,"skia_safe::jpeg_encoder"],[5809,"skia_safe::line_2d_path_effect"],[5810,"skia_safe::luma_color_filter"],[5811,"skia_safe::matrix"],[6099,"skia_safe::matrix_path_effect"],[6101,"skia_safe::merge_path_effect"],[6102,"skia_safe::named_transfer_fn"],[6108,"skia_safe::overdraw_color_filter"],[6110,"skia_safe::paint"],[6168,"skia_safe::path"],[6455,"skia_safe::path_1d_path_effect"],[6475,"skia_safe::path_2d_path_effect"],[6476,"skia_safe::path_effect"],[6511,"skia_safe::path_measure"],[6606,"skia_safe::path_types"],[6622,"skia_safe::path_utils"],[6623,"skia_safe::pdf"],[6676,"skia_safe::perlin_noise_shader"],[6678,"skia_safe::picture_recorder"],[6685,"skia_safe::png_encoder"],[6812,"skia_safe::region"],[6959,"skia_safe::rrect"],[7060,"skia_safe::runtime_effect"],[7156,"skia_safe::runtime_effect::uniform"],[7266,"skia_safe::sampling_options"],[7325,"skia_safe::shader"],[7362,"skia_safe::shader::shaders"],[7367,"skia_safe::shader_mask_filter"],[7368,"skia_safe::shaders"],[7373,"skia_safe::stroke_and_fill_path_effect"],[7374,"skia_safe::stroke_path_effect"],[7375,"skia_safe::stroke_rec"],[7438,"skia_safe::surface"],[7538,"skia_safe::surface::surfaces"],[7542,"skia_safe::surfaces"],[7546,"skia_safe::svg"],[7548,"skia_safe::svg::canvas"],[7623,"skia_safe::table_color_filter"],[7625,"skia_safe::trim_path_effect"],[7643,"skia_safe::typeface"],[7718,"skia_safe::utils"],[7803,"skia_safe::utils::parse_path"],[7824,"skia_safe::utils::shadow_utils"],[7887,"skia_safe::utils::text_utils"],[7907,"skia_safe::vertices"],[8057,"skia_safe::wrapper"],[8077,"skia_safe::yuva_info"],[8161,"skia_safe::yuva_pixmap_info"],[8221,"skia_safe::yuva_pixmaps"],[8258,"skia_safe::yuva_pixmaps::yuva_pixmap_info"],[8294,"skia_bindings"],[8295,"skia_bindings"],[8296,"skia_bindings"],[8297,"core::ffi"],[8298,"skia_bindings"],[8299,"core::marker"],[8300,"skia_bindings"],[8301,"skia_bindings"],[8302,"skia_bindings"],[8303,"skia_bindings"],[8304,"core::iter::traits::iterator"],[8305,"core::fmt"],[8306,"core::fmt"],[8307,"skia_bindings"],[8308,"skia_bindings"],[8309,"bitflags::iter"],[8310,"core::time"],[8311,"std::os::raw"],[8312,"skia_bindings"],[8313,"std::io"],[8314,"core::fmt"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Bitmap</code> describes a two-dimensional raster pixel array. …","","","Blender represents a custom blend function in the Skia …","","","","","","","","","<code>Canvas</code> provides an interface for drawing, and how the …","","","","","","","","","","","","","","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","","Specify <code>b</code> and <code>c</code> (each between 0…1) to create a shader …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wraps a native type that can be represented in Rust memory.","","","","","","","","","","","","","","<code>Image</code> describes a two dimensional array of pixels to draw. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The maximum number of points an iterator will return for …","","MaskFilter is the base class for object that perform …","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a <code>Canvas</code> that is owned and dropped when it goes …","","","","","","","","","","","","","","","","","","","Implement this trait to use a pixel type in …","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","","A wrapper type represented by a reference counted pointer …","","","","","","","","","","","","","","","","","","","","","","","","","A wrapper type that represents a native type with a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Surface</code> is responsible for managing the pixels that a …","","","","","","","","","","Skia                | GL_COMPRESSED_*     | MTLPixelFormat*…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies the structure of planes for a YUV image with …","YUVAInfo combined with per-plane ColorTypes and row bytes. …","Helper to store Pixmap planes as described by a …","","","","","","","","","","","","","","","","","","","","","","","Appends arc to <code>Path</code>, as the start of new contour. Arc …","","","","","","","","","","","Adds circle centered at (x, y) of size radius to <code>Path</code>, …","","","Adds oval to <code>Path</code>, appending <code>Verb::Move</code>, four <code>Verb::Conic</code>, …","","","Appends src to <code>Path</code>, offset by <code>(d.x, d.y)</code>.","Appends src to <code>Path</code>, transformed by matrix. Transformed …","Adds contour created from line array, adding <code>pts.len() - 1</code> …","","","","Adds a new contour to the path, defined by the rect, and …","","Appends <code>RRect</code> to <code>Path</code>, creating a new closed contour. <code>RRect</code>…","","Adds rrect to <code>Path</code>, creating a new closed contour. If dir …","","","","","All legal combinations of PlaneConfig and DataType are …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Sets <code>ImageInfo</code> to width, height, and native color type; …","Sets <code>ImageInfo</code> to width, height, and native color type; …","Allocates pixel memory with HeapAllocator, and replaces …","Allocates pixel memory with HeapAllocator, and replaces …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …","","","","","","","","","","","","","","","","","Allocate space for pixmaps’ pixels in the YUVAPixmaps.","","","","","","","","","","","","","","Returns <code>AlphaType</code>.","","","","","","","","","","","","Returns the approximate byte size of the <code>Path</code> in memory.","","","Returns the approximate bounds that would result from …","Returns the approximate bounds that would result from …","","","","","","","Appends arc to <code>Path</code>. Arc added is part of ellipse bounded …","","","","Appends arc to <code>Path</code>. Arc is implemented by one or more …","","Appends arc to <code>Path</code>, after appending line if needed. Arc …","","","","","","","","","","","","","","","","","","","","Returns a new image from the bitmap. If the bitmap is …","Returns a new image from the bitmap. If the bitmap is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves the back-end texture. If <code>Image</code> has no back-end …","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","Create a blur mask filter.","","Create a blur mask filter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The y coordinate of the rectangle’s bottom edge.","The y coordinate of the rectangle’s bottom edge.","Returns <code>IRect { 0, 0, width(), height() }</code>.","","","","Returns <code>IRect { 0, 0, width(), height() }</code>.","","","Returns minimum and maximum axes values of <code>Point</code> array. …","","","","","Returns <code>IRect</code> <code>{ 0, 0, width(), height() }</code>.","Access the underlying pixels as a byte array. This is a …","","Returns number of bytes per pixel required by <code>ColorType</code>.","","","Returns number of bytes per pixel required by <code>ColorType</code>.","","","","","","","","","","Returns <code>true</code> if the handle can be sent to another thread.","","All Sk* types are accessible via skia_safe::","","","Returns <code>Canvas</code> that draws into <code>Surface</code>. Subsequent calls …","","","","","","","Initializes <code>SurfaceCharacterization</code> that can be used to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends <code>Verb::Close</code> to <code>Path</code>. A closed contour connects the …","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","","","","Returns <code>ColorSpace</code>, the range of colors, associated with …","","","","","","","Returns <code>ColorSpace</code>, the range of colors, associated with …","","Returns a smart pointer to <code>ColorSpace</code>, the range of …","","","","","","","","","","Returns <code>ColorType</code> if known; otherwise, returns …","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","Returns minimum memory required for pixel storage. Does …","","","Returns minimum memory required for pixel storage. Does …","","","","Returns <code>true </code>if all pixels are opaque. <code>ColorType</code> …","","Returns <code>true </code>if all pixels are opaque. <code>ColorType</code> …","","","","","","Returns minimum and maximum axes values of the lines and …","Determine size to allocate for all planes. Optionally …","Given a per-plane row bytes, determine size to allocate …","","","","","Adds conic from last point towards (x1, y1), to (x2, y2), …","Returns <code>true</code> if rect is contained by <code>Path</code>. May return <code>false</code>…","","Returns <code>true</code> if the point <code>(p.x, p.y)</code> is contained by <code>Path</code>, …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","Whether all set bits in a source flags value are also set …","","","","","All Sk* types are accessible via skia_safe::","","Approximates conic with quad array. Conic is constructed …","","","","","","","","","","","","","","","","","Returns the number of points in <code>Path</code>. <code>Point</code> count is …","","","","Returns the number of verbs: <code>Verb::Move</code>, <code>Verb::Line</code>, …","","","","","","","","","Adds cubic from last point towards (x1, y1), then towards …","","","","","","","","","The per-YUV<code>[A]</code> channel data type.","","","","","See <code>Bitmap::new()</code>.","","","","","","","","","","","See <code>Self::new()</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Returns <code>ISize { width(), height() }</code>.","","","","","","","","Dimensions of the full resolution image (after planes have …","Returns <code>ISize { width(), height() }</code>.","","","Returns <code>ISize</code> <code>{ width(), height() }</code>.","rust-skia helper, not in Skia","","","","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","","","","","","Draws <code>Surface</code> contents to canvas, with its top-left corner …","","See <code>Self::draw_display_list_with_offset</code>.","Draws the deferred display list created via a …","All Sk* types are accessible via skia_safe::","Returns <code>true</code> if <code>width()</code> or <code>height()</code> are zero, or if …","Returns <code>true</code> if <code>width()</code> or <code>height()</code> are zero, or if …","","","","See <code>Path::dump_as_data()</code>","","","","","Writes text representation of <code>Path</code> to <code>Data</code>. Set <code>dump_as_hex</code>…","See <code>Path::dump_as_data()</code>","","","","","","Get a flags value with all bits unset.","","Get a flags value with all bits unset.","Update to add support for pixmaps with <code>num_channels</code> …","","","","","","","See <code>Self::encode_to_data_with_quality</code>","Encodes <code>Image</code> pixels, returning result as <code>Data</code>.","Encodes <code>Image</code> pixels, returning result as <code>Data</code>.","","","Returns encoded <code>Image</code> pixels as <code>Data</code>, if <code>Image</code> was created …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Replaces pixel values inside area with c. interpreted as …","","Replaces pixel values inside area with c. interpreted as …","Replaces pixel values inside area with c. interpreted as …","","Replaces pixel values inside area with c. interpreted as …","Replaces pixel values with unpremultiplied color built …","Replaces pixel values with unpremultiplied color built …","Replaces pixel values with <code>c</code>, interpreted as being in the …","Replaces pixel values with <code>c</code>, interpreted as being in the …","Replaces pixel values with <code>c</code>, interpreted as being in the …","Replaces pixel values with <code>c</code>, interpreted as being in the …","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","Sets dst to alpha described by pixels. Returns <code>false</code> if <code>dst</code>…","Sets dst to alpha described by pixels. Returns <code>false</code> if <code>dst</code>…","Shares <code>PixelRef</code> with <code>dst</code>. Pixels are not copied; <code>Bitmap</code> …","","Shares <code>PixelRef</code> with <code>dst</code>. Pixels are not copied; <code>Bitmap</code> …","","","","","","","","","Returns <code>PathFillType</code>, the rule used to fill <code>Path</code>.","","","","","","","","","","","","","","","","See <code>Self::flush_with_info()</code>","See <code>Self::flush_with_mutable_state()</code>.","","Version of <code>flush()</code> that uses a default <code>gpu::FlushInfo</code>. …","","Call to ensure all reads/writes of the surface have been …","","","","","See <code>Self::flush_and_submit()</code>.","Issues pending <code>Surface</code> commands to the GPU-backed API …","","Flushes any pending uses of texture-backed images in the …","Issues pending <code>Surface</code> commands to the GPU-backed API …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","All Sk* types are accessible via skia_safe::","All Sk* types are accessible via skia_safe::","All Sk* types are accessible via skia_safe::","All Sk* types are accessible via skia_safe::","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates <code>Image</code> from <code>backend_texture</code> associated with …","","","Wraps a GPU-backed buffer into <code>Surface</code>. Caller must ensure …","Wraps a GPU-backed texture into <code>Surface</code>. Caller must …","Creates <code>Image</code> from bitmap, sharing or copying bitmap …","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","","","","","","","","","","Init based on texture formats supported by the context.","","Use storage in Data as backing store for pixmaps’ …","","","","Like above but uses …","","","See <code>Self::from_encoded_with_alpha_type()</code>","Return an image backed by the encoded data, but attempt to …","Use passed in memory as backing store for pixmaps’ …","Wraps existing <code>Pixmap</code>s. The YUVAPixmaps will have no …","Creates <code>Image</code> from data returned by <code>image_generator</code>. …","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","See <code>Self::from_picture_with_props()</code>","Creates <code>Image</code> from picture. Returned <code>Image</code> width and …","","","","","","","","","Creates <code>Image</code> from <code>ImageInfo</code>, sharing pixels.","","","","","","","","","","","","","","","","","","","","","Creates <code>Image</code> from GPU texture associated with context. …","","","","","","","Creates <code>Image</code> from <code>crate::YUVAPixmaps</code>.","Creates an <code>Image</code> from <code>YUV[A]</code> planar textures. This …","","","","","Returns a unique value corresponding to the pixels in …","","(See Skia bug 1762.) Returns a non-zero, globally unique …","Returns a unique value corresponding to the pixels in …","","Returns unique value identifying the content of <code>Surface</code>. …","","Returns pixel address at <code>(x, y)</code>.","Returns pixel address at <code>(x, y)</code>.","Look up the pixel at <code>(x,y)</code> and return its alpha component, …","","Look up the pixel at <code>(x,y)</code> and return its alpha component, …","Retrieves the back-end render target. If <code>Surface</code> has no …","Retrieves the back-end texture. If <code>Surface</code> has no back-end …","","","","Returns pixel at <code>(x, y)</code> as unpremultiplied color. Returns …","","Returns pixel at <code>(x, y)</code> as unpremultiplied color. Returns …","Returns pixel at <code>(x, y)</code> as unpremultiplied color. Returns …","","Returns pixel at <code>(x, y)</code> as unpremultiplied color. Returns …","","","","","","","","","","Returns <code>Point</code> at index in <code>Point</code> array. Valid range for …","Returns number of points in <code>Path</code>. Up to max points are …","","","","Returns the bounds of this bitmap, offset by its <code>PixelRef</code> …","Returns the bounds of this bitmap, offset by its <code>PixelRef</code> …","","","Returns the number of verbs in the path. Up to max verbs …","","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","","","","","","","Returns <code>true</code> if the image has mipmap levels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns pixel row count.","","","","","","","Returns pixel row count.","","","","Returns pixel row count.","","Returns pixel row count; may be zero or greater.","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","","All Sk* types are accessible via skia_safe::","","","","","Returns a <code>ImageInfo</code> describing the width, height, color …","Returns an <code>ImageInfo</code> describing the surface.","Returns <code>Image</code> capturing <code>Surface</code> contents. Subsequent …","Like the no-parameter version, this returns an image of …","","","Grows <code>Path</code> verb array and <code>Point</code> array to contain …","","","","","","","","","","","","","Returns width, height, <code>AlphaType</code>, ColorType, and <code>ColorSpace</code>…","","","Returns width, height, <code>AlphaType</code>, ColorType, and <code>ColorSpace</code>…","","Takes an allocation that is assumed to be at least […","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code>, …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code>, …","Interpolates between <code>Path</code> with <code>Point</code> array of equal size. …","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","","","Whether any set bits in a source flags value are also set …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if <code>Image</code> pixels represent transparency only. …","","","","","","","","","","","","","Is this surface compatible with the provided …","","Returns <code>true</code> if the path is convex. If necessary, it will …","Tests if cubic is degenerate. Cubic with no length or that …","","","","Returns <code>true</code> if either <code>width()</code> or <code>height()</code> are zero.","","","","","Returns if <code>Path</code> is empty. Empty <code>Path</code> may have FillType but …","Returns <code>true</code> if either <code>width()</code> or <code>height()</code> are zero.","","","","Whether all bits in this flags value are unset.","","","","","Whether all bits in this flags value are unset.","","","","Returns <code>true</code> for finite <code>Point</code> array values between …","","","","","","","","","","","","","","Returns <code>true</code> if pixels can not change.","","Returns <code>true</code> if pixels can not change.","","","Returns <code>true</code> if <code>Path</code> contain equal verbs and equal weights.","","Returns if FillType describes area outside <code>Path</code> geometry. …","","Returns if contour is closed. Contour is closed if <code>Path</code> …","Returns <code>true</code> if <code>Image</code> is backed by an image-generator or …","Returns <code>true</code> if <code>Path</code> contains only one line; <code>Verb</code> array …","Tests if line between <code>Point</code> pair is degenerate. Line with …","","","","","Returns <code>true</code> if <code>PixelRef</code> is <code>None</code>.","Returns <code>true</code> if <code>PixelRef</code> is <code>None</code>.","Returns <code>true</code> if <code>AlphaType</code> is set to hint that all pixels …","","","","Returns <code>true</code> if <code>AlphaType</code> is set to hint that all pixels …","","","","Returns <code>true</code> if pixels ignore their alpha value and are …","","","Returns <code>true</code> if this path is recognized as an oval or …","","","","","Tests if quad is degenerate. Quad with no length or that …","Returns <code>true</code> if <code>Bitmap</code> can be drawn.","Returns <code>true</code> if <code>Bitmap</code> can be drawn.","Returns <code>Some(Rect, bool, PathDirection)</code> if <code>Path</code> is …","","","Returns <code>true</code> if path is representable as <code>RRect</code>. Returns …","","","","","","","Is this valid and does it use color types allowed by the …","Returns <code>true</code> if the contents of <code>Image</code> was created on or …","","","","","","","","","","","","","Returns if <code>Path</code> data is consistent. Corrupt <code>Path</code> data is …","","","Returns <code>true</code> if <code>Image</code> can be drawn on either raster …","Returns <code>true</code> if the path is volatile; it will not be …","","","","","","","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","Returns last point on <code>Path</code>. Returns <code>None</code> if <code>Point</code> array is …","","","","The x coordinate of the rectangle’s left edge.","The x coordinate of the rectangle’s left edge.","","","","","","","","","","","","","","","","","","Adds line from last point to (x, y). If <code>Path</code> is empty, or …","","","","","","","","","","","","","","Creates <code>Image</code> in target <code>ColorSpace</code>. Returns <code>None</code> if <code>Image</code> …","","","","","Returns raster image or lazy image. Copies <code>Image</code> backed by …","","Returns raster image. Copies <code>Image</code> backed by GPU texture …","","","Returns subset of this image.","","","","","","","","","","","","","","<code>true</code> if the type matches the color type’s format.","","","All Sk* types are accessible via skia_safe::","","","","","","","","","","","","","","","","","","","","","","","","","","Create a blender that implements the specified <code>BlendMode</code>.","Create a blender that implements the specified <code>BlendMode</code>.","","","","Adds beginning of contour at <code>Point</code> (x, y).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Macro to mark a Rust type as NativeTransmutable and test …","","","","","","","","","","","","","","Creates an empty <code>Bitmap</code> without pixels, with …","","","","","","","","","","","","","Creates an empty <code>Bitmap</code> without pixels, with …","","","","","","","","Initializes the YUVAPixmapInfo from a YUVAInfo with …","","","","Initializes a YUVABackendTextureInfo to describe a set of …","","","","","","<code>dimensions</code> should specify the size of the full resolution …","Constructs an empty <code>Path</code>. By default, <code>Path</code> has no verbs, …","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs Data from a given byte slice without copying it.","Constructs Data from a given byte slice without copying it.","See <code>Self::new_color_space_with_context</code>","Creates <code>Image</code> in target <code>ColorSpace</code>. Returns <code>None</code> if <code>Image</code> …","","","","Creates <code>Image</code> from pixmap. <code>Image</code> is uploaded to GPU …","Constructs Data from a &amp;CStr by copying its contents.","Constructs Data from a &amp;CStr by copying its contents.","","","","","","","","","","","","","Create a new path with the specified segments.","","","","","","","","","","","","","","","","","","Returns <code>Surface</code> without backing pixels. Drawing to <code>Canvas</code> …","","","","","Allocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …","Allocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …","Creates a CPU-backed <code>Image</code> from compressed data.","Allocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …","Returns <code>Surface</code> on GPU indicated by context. Allocates …","Returns <code>Surface</code> on GPU indicated by context that is …","","","","","","","Constructs Data from a copy of a &amp;str.","Constructs Data from a copy of a &amp;str.","","","","","","See <code>Self::new_subset_with_context</code>","","Returns subset of this image.","Returns a compatible <code>Surface</code>, or <code>None</code>. Returned <code>Surface</code> …","Calls <code>Self::new_surface()</code> with the same <code>ImageInfo</code> as this …","Creates a GPU-backed <code>Image</code> from compressed data.","See <code>Self::new_texture_image_budgeted</code>","Returns <code>Image</code> backed by GPU texture associated with …","","","","","","","Creates filtered <code>Image</code>. filter processes original <code>Image</code>, …","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","Notifies that <code>Surface</code> contents will be changed by code …","","Marks that pixels in <code>PixelRef</code> have changed. Subsequent …","","Marks that pixels in <code>PixelRef</code> have changed. Subsequent …","","","The number of crate::Pixmap planes.","","","The number of Pixmap planes.","Number of pixmap planes.","","","","Offsets <code>Point</code> array by <code>(d.x, d.y)</code>. <code>Path</code> is replaced by …","","","","","","","","","","","","","","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","","","All Sk* types are accessible via skia_safe::","","","","","All Sk* types are accessible via skia_safe::","","All Sk* types are accessible via skia_safe::","All Sk* types are accessible via skia_safe::","All Sk* types are accessible via skia_safe::","","Copies <code>Bitmap</code> pixel address, row bytes, and <code>ImageInfo</code> to …","Copies <code>Bitmap</code> pixel address, row bytes, and <code>ImageInfo</code> to …","Copies <code>Image</code> pixel address, row bytes, and <code>ImageInfo</code> to …","","","","","All Sk* types are accessible via skia_safe::","","Returns <code>PixelRef</code>, which contains: pixel base address; its …","Returns <code>PixelRef</code>, which contains: pixel base address; its …","Returns origin of pixels within <code>PixelRef</code>. <code>Bitmap</code> bounds is …","Returns origin of pixels within <code>PixelRef</code>. <code>Bitmap</code> bounds is …","Returns pixel address, the base address corresponding to …","","Access the underlying pixels. This is a rust-skia specific …","Returns pixel address, the base address corresponding to …","","Returns a constant reference to the <code>Pixmap</code> holding the …","Returns a constant reference to the <code>Pixmap</code> holding the …","","Get the ith Pixmap plane. <code>Pixmap</code> will be default …","","Returns the dimensions for each plane. Dimensions are as …","Format of the ith plane, or <code>None</code> if <code>i &gt;= Self::num_planes()</code>","All plane formats.","Image info for the ith plane, or <code>None</code> if <code>i</code> &gt;= …","An iterator of all planes’ image infos.","","Access the Pixmap planes.","","","","","","The number of points an iterator will return for the verb.","","","","","","","","","","","","","","","","","","","","","","","Returns <code>SurfaceProps</code> for surface.","","","","Adds quad from last point towards (x1, y1), to (x2, y2). …","","","","","","","","","","Appends arc to <code>Path</code>, relative to last <code>Path</code> <code>Point</code>. Arc is …","","","Adds conic from last point towards vector (dx1, dy1), to …","","","Adds cubic from last point towards vector (dx1, dy1), then …","","","Adds line from last point to vector (dx, dy). If <code>Path</code> is …","Adds beginning of contour relative to last point. If <code>Path</code> …","","","Adds quad from last point towards vector (dx1, dy1), to …","","","","","","Copies a <code>crate::Rect</code> of pixels from <code>Bitmap</code> to <code>dst_pixels</code>. …","","Copies a <code>crate::Rect</code> of pixels from <code>Bitmap</code> to <code>dst_pixels</code>. …","See <code>Self::read_pixels_with_context()</code>","Copies <code>crate::Rect</code> of pixels from <code>Canvas</code> into <code>dst_pixels</code>.","Copies <code>crate::Rect</code> of pixels from <code>Surface</code> into bitmap.","","See <code>Self::read_pixels_to_pixmap_with_context()</code>","Copies <code>crate::Rect</code> of pixels to dst.","Copies a <code>crate::Rect</code> of pixels from <code>Image</code> to dst. Copy …","Copies <code>crate::Rect</code> of pixels from <code>Image</code> to <code>dst_pixels</code>. …","","","Returns the recording context being used by the <code>Surface</code>.","","","","All Sk* types are accessible via skia_safe::","Creates a new <code>Image</code> identical to this one, but with a …","Notify that the borrowed dependency is not referred to …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","If the surface was made via <code>Self::from_backend_texture</code> …","If the surface was made via <code>Self::from_backend_texture()</code> …","","","","Resets to its initial state; all fields are set to zero, …","","","","","","","","Sets <code>Path</code> to its initial state. Removes verb array, <code>Point</code> …","","Resets to its initial state; all fields are set to zero, …","","","","","","","If a surface is GPU texture backed, is being drawn with …","","","","","","Appends src to <code>Path</code>, from back to front. Reversed src …","Sets <code>Path</code> to its initial state, preserving internal …","","","","The x coordinate of the rectangle’s right edge.","The x coordinate of the rectangle’s right edge.","","","","","","","","","","","Returns row bytes, the interval from one pixel row to the …","","","Row bytes for the ith plane. Returns <code>None</code> if <code>i</code> &gt;= …","Returns row bytes, the interval from one pixel row to the …","","Returns number of pixels that fit on row. Should be …","","Returns number of pixels that fit on row. Should be …","Row bytes for all planes.","","","All Sk* types are accessible via skia_safe::","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","","Copies <code>Image</code> to dst, scaling pixels to fit <code>dst.width()</code> and …","","","","","","","","Returns a mask, where each set bit corresponds to a …","","","","Writes <code>Path</code> to buffer, returning the buffer written to, …","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","Sets <code>AlphaType</code>, if <code>alpha_type</code> is compatible with <code>ColorType</code>…","Sets <code>AlphaType</code>, if <code>alpha_type</code> is compatible with <code>ColorType</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets FillType, the rule used to fill <code>Path</code>. While there is …","","","","","","","","","","Sets internal flag to mark <code>Bitmap</code> as immutable. Once set, …","","Sets internal flag to mark <code>Bitmap</code> as immutable. Once set, …","","Sets width, height, <code>AlphaType</code>, ColorType, <code>ColorSpace</code>, and …","Sets width, height, <code>AlphaType</code>, ColorType, <code>ColorSpace</code>, and …","","","Specifies whether <code>Path</code> is volatile; whether it will be …","","","Sets the last point on the path. If <code>Point</code> array is empty, …","","","","","","","","","","","","","","Replaces <code>pixel_ref</code> and origin in <code>Bitmap</code>. <code>offset</code> specifies …","Replaces <code>pixel_ref</code> and origin in <code>Bitmap</code>. <code>offset</code> specifies …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","Returns bit shift converting row bytes to row pixels.","","","","","","Returns bit shift converting row bytes to row pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","The intersection of a source flags value with the …","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","","The intersection of a source flags value with the …","","","","Checks whether there is a supported combination of color …","","All Sk* types are accessible via skia_safe::","","","","Swaps the fields of the two bitmaps.","","Swaps the fields of the two bitmaps.","Exchanges the verb array, <code>Point</code> array, weights, and …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","Returns an approximation of the amount of texture memory …","","","","","","","","","","","","","","","","","","","Returns raster image or lazy image. Copies <code>Image</code> backed by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns raster image. Copies <code>Image</code> backed by GPU texture …","<code>to_raw_shader</code> functions like <code>to_shader</code>, but for images …","","","Make a shader with the specified tiling, matrix and …","","Make a shader with the specified tiling, matrix and …","","Make a shader with the specified tiling and mipmap …","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","Replaces FillType with its inverse. The inverse of …","","","","The y coordinate of the rectangle’s top edge.","The y coordinate of the rectangle’s top edge.","Transforms verb array, <code>Point</code> array, and weight by matrix. …","Transforms verb array, <code>Point</code> array, and weight by matrix. …","","","","","","","","Sets <code>ImageInfo</code> to width, height, and native color type; …","Sets <code>ImageInfo</code> to width, height, and native color type; …","Allocates pixel memory with HeapAllocator, and replaces …","Allocates pixel memory with HeapAllocator, and replaces …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …","Sets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","Returns value unique to image. <code>Image</code> contents cannot …","","","Macro that implements Send and Sync.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates internal bounds so that subsequent calls to …","","","","","","","","","","Macro that verifies a variant name at compile time.","","","","All Sk* types are accessible via skia_safe::","","","","","","Returns pixel count in each row. Should be equal or less …","","","","","Returns pixel count in each row. Should be equal or less …","","","","","","","","Returns pixel count in each row.","Returns pixel count in each row; may be zero or greater.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an image with the same “base” pixels as the …","","","Returns a YUVAInfo that is identical to this one but with …","","","","","","","","","","","Offsets <code>Point</code> array by <code>(d.x, d.y)</code>.","","","","","","","","","","Returns a YUVAInfo that is identical to this one but with …","Transforms verb array, <code>Point</code> array, and weight by matrix. …","Transforms verb array, <code>Point</code> array, and weight by matrix. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the handle in a type that can be sent to another …","","FFI interoperability for skia-safe’s wrapper types.","","","","Copies <code>crate::Rect</code> of pixels from the src <code>Bitmap</code> to the …","Copies <code>crate::Rect</code> of pixels from the src <code>Pixmap</code> to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All Sk* types are accessible via skia_safe::","","","","","","All Sk* types are accessible via skia_safe::","","","","","","","","","Create a blender that implements the following: …","","Stack helper class calls <code>Canvas::restore_to_count()</code> when …","<code>Canvas</code> provides an interface for drawing, and how the …","","","Used to pass either a slice of <code>Point</code> or <code>RSXform</code> to …","initializes with previous contents","<code>Lattice</code> divides <code>crate::Bitmap</code> or <code>crate::Image</code> into a …","","Represents a <code>Canvas</code> that is owned and dropped when it goes …","","Selects if an array of points are drawn as discrete …","","","","","<code>SaveLayerFlags</code> provides options that may be used in any …","<code>SaveLayerRec</code> contains the state used to create the layer.","","<code>SrcRectConstraint</code> controls the behavior at the edge of …","","Provides access to Canvas’s pixels.","Returns the pixel base address, <code>ImageInfo</code>, <code>row_bytes</code>, and …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","","","","If not <code>None</code>, this triggers the same initialization …","Gets the size of the base or root layer in global canvas …","Returns the <code>SurfaceProps</code> associated with the canvas (i.e., …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","Hints at layer size limit","source bounds to draw from","Fills clip with color <code>color</code> using <code>BlendMode::Src</code>. This has …","","","","Replaces clip with the intersection or difference of clip …","Replaces clip with the intersection or difference of clip …","Replaces clip with the intersection or difference of clip …","Replaces clip with the intersection or difference of clip …","","","","","","","","","","","array of colors","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Replaces <code>Matrix</code> with matrix premultiplied with existing …","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Sets <code>Self::bounds</code>, <code>Self::paint</code>, and <code>Self::backdrop</code> to <code>None</code>…","Creates an empty <code>Canvas</code> with no backing device or pixels, …","","","","","Returns <code>IRect</code> bounds of clip, unaffected by <code>Matrix</code>. If …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Returns the <code>gpu::DirectContext</code>. This is a rust-skia helper …","Makes <code>Canvas</code> contents undefined. Subsequent calls that …","Associates <code>Rect</code> on <code>Canvas</code> when an annotation; a key-value …","Draws arc using clip, <code>Matrix</code>, and <code>Paint</code> paint.","Draws circle at center with radius using clip, <code>Matrix</code>, and …","Fills clip with color <code>color</code>. <code>mode</code> determines how ARGB is …","Draws <code>Drawable</code> drawable using clip and <code>Matrix</code>, …","Draws <code>Drawable</code> drawable using clip and <code>Matrix</code>, offset by …","Draws <code>RRect</code> outer and inner using clip, <code>Matrix</code>, and <code>Paint</code> …","Draws <code>count</code> glyphs, at positions relative to <code>origin</code> styled …","Draws glyphs at positions relative to <code>origin</code> styled with …","","Draws <code>Image</code> <code>image</code> stretched proportionally to fit into <code>Rect</code>…","Draws <code>Image</code> <code>image</code> stretched proportionally to fit into <code>Rect</code>…","","","","Draws <code>IRect</code> rect using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. In …","Draws line segment from <code>p1</code> to <code>p2</code> using clip, <code>Matrix</code>, and …","Draws oval oval using clip, <code>Matrix</code>, and <code>Paint</code>. In <code>paint</code>: …","Fills clip with <code>Paint</code> <code>paint</code>. <code>Paint</code> components, <code>Shader</code>, …","Draws a Coons patch: the interpolation of four cubics with …","Draws <code>Path</code> path using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. <code>Path</code> …","Draws <code>Picture</code> picture, using clip and <code>Matrix</code>; transforming …","Draws point <code>p</code> using clip, <code>Matrix</code> and <code>Paint</code> paint.","Draws <code>pts</code> using clip, <code>Matrix</code> and <code>Paint</code> <code>pain</code>. if the number …","Draws <code>Rect</code> rect using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. In …","Draws <code>Region</code> region using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. …","Draws <code>RRect</code> bounded by <code>Rect</code> rect, with corner radii …","Draws <code>RRect</code> rrect using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. In …","","Draws <code>String</code>, with origin at <code>(origin.x, origin.y)</code>, using …","","Draws <code>TextBlob</code> blob at <code>(origin.x, origin.y)</code>, using clip, …","Draws <code>Vertices</code> vertices, a triangle mesh, using clip and …","Draws saved layers, if any. Frees up resources used by …","Restores <code>Canvas</code> to saved state. Drop is called when …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Preserves LCD text, creates with prior layer contents","Triggers the immediate execution of all pending draw …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a canvas that draws into bitmap. Use props to …","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Allocates raster <code>Canvas</code> that will draw directly into …","Allocates raster <code>Canvas</code> specified by inline image …","Preserves <code>Canvas::save()</code> count. Optionally saves <code>Canvas</code> …","","","","Returns <code>ImageInfo</code> for <code>Canvas</code>. If <code>Canvas</code> is not associated …","Writable pixels’ <code>ImageInfo</code>","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if clip is empty; that is, nothing will draw.","Returns <code>true</code> if clip is <code>Rect</code> and not empty. Returns <code>false</code> …","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","Returns bounds of clip, transformed by inverse of <code>Matrix</code>. …","Returns the current transform from local coordinates to …","Throws away the 3rd row and column in the matrix, so be …","Creates <code>Canvas</code> of the specified dimensions without a …","","Creates <code>Surface</code> matching info and props, and associates it …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>Canvas</code> top layer origin, its top-left corner","Modifies overlay","","Returns <code>true</code> if <code>Canvas</code> has direct access to its pixels.","Address of pixels","Copies <code>SurfaceProps</code>, if <code>Canvas</code> is associated with raster …","Returns <code>true</code> if <code>Rect</code> <code>rect</code>, transformed by <code>Matrix</code>, can be …","Returns <code>true</code> if <code>path</code>, transformed by <code>Matrix</code>, can be …","Copies <code>Rect</code> of pixels from <code>Canvas</code> into <code>dst_pixels</code>. <code>Matrix</code> …","Copies <code>Rect</code> of pixels from <code>Canvas</code> into bitmap. <code>Matrix</code> and …","Copies <code>Rect</code> of pixels from <code>Canvas</code> into pixmap. <code>Matrix</code> and …","Returns GPU context of the GPU surface associated with …","array of fill types","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Sets <code>Matrix</code> to the identity matrix. Any prior matrix state …","Removes changes to <code>Matrix</code> and clip since <code>Canvas</code> state was …","Restores <code>Canvas</code> to saved state immediately. Subsequent …","Restores state to <code>Matrix</code> and clip values when <code>Self::save()</code>…","Rotates <code>Matrix</code> by degrees about a point at <code>(p.x, p.y)</code>. …","Writable pixels’ row bytes","Saves <code>Matrix</code> and clip. Calling <code>Self::restore()</code> discards …","Returns the number of saved states, each containing: <code>Matrix</code>…","Saves <code>Matrix</code> and clip, and allocates <code>Surface</code> for …","Helper that accepts an int between 0 and 255, and divides …","Saves <code>Matrix</code> and clip, and allocates <code>Surface</code> for …","Scales <code>Matrix</code> by <code>sx</code> on the x-axis and <code>sy</code> on the y-axis.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","DEPRECATED – use <code>M44</code> version","Replaces <code>Matrix</code> with <code>matrix</code>. Unlike <code>Self::concat()</code>, any …","DEPRECATED – use <code>M44</code> version","Skews <code>Matrix</code> by <code>sx</code> on the x-axis and <code>sy</code> on the y-axis. A …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Sometimes a canvas is owned by a surface. If it is, …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the <code>SurfaceProps</code> associated with the canvas that …","DEPRECATED Legacy version of <code>Self::local_to_device()</code>, …","Translates <code>Matrix</code> by <code>d</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","Copies <code>Rect</code> from pixels to <code>Canvas</code>. <code>Matrix</code> and clip are …","Copies <code>Rect</code> from pixels to <code>Canvas</code>. <code>Matrix</code> and clip are …","x-axis values dividing bitmap","y-axis values dividing bitmap","","","<code>Lattice</code> divides <code>crate::Bitmap</code> or <code>crate::Image</code> into a …","Optional setting per rectangular grid entry to make it …","","","","","","source bounds to draw from","","","array of colors","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","array of fill types","","","","","","","","x-axis values dividing bitmap","y-axis values dividing bitmap","","","","","Reflected across x-axis","Rotated 180","","","","","","","","These values match the orientation …","","","","","","","","","","","","","","","","","","","","Rotated 90 CCW","Reflected across x-axis, Rotated 90 CCW","","","","","","","","","Reflected across x-axis, Rotated 90 CW","Rotated 90 CW","","","","","Default","Reflected across y-axis","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if the encoded origin includes a 90 degree …","Given an width and height of the source data, returns a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copy the pixels in src into dst, applying the orientation …","Return a copy of the provided ImageInfo with the width and …","","","","","","","","","","","","","","","","","Blends between the constant color (src) and input color …","","See <code>hsla_matrix_of_color_matrix()</code>","","","Create a color filter that multiplies the RGB channels by …","","","","","Create a table color filter, copying the table into the …","Create a table color filter, with a different table for …","","Blends between the constant color (src) and input color …","","See <code>hsla_matrix_of_color_matrix()</code>","","","Create a color filter that multiplies the RGB channels by …","","","","","Create a table color filter, copying the table into the …","Create a table color filter, with a different table for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","Borrows the canvas for the current page on the document.","Close the document and return the encoded representation. …","Ends the page. This function consumes the document and …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The current page we are currently drawing on.","The number of pages in this document.","","","","","Document is currently on a page and can be drawn onto.","Document is currently open. May contain several pages.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapper type of a font weight.","Wrapper type for the width of a font.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A description of a set BackendTextures that hold the …","A set of BackendTextures that hold the planar data for an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Initializes a YUVABackendTextureInfo to describe a set of …","","","","","","","","","The number of crate::Pixmap planes.","","","","","Format of the ith plane, or <code>None</code> if <code>i &gt;= Self::num_planes()</code>","All plane formats.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","The intersection of a source flags value with the …","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","Creates GPU-backed <code>Image</code> from <code>backend_texture</code> associated …","Creates GPU-backed <code>Image</code> from the provided GPU texture …","Creates a GPU-backed <code>Image</code> from pixmap. It is uploaded to …","Retrieves the existing backend texture. If <code>Image</code> is not a …","Returns subset of this image as a texture-backed image.","Creates a GPU-backed <code>Image</code> from compressed data. This …","Returns <code>Image</code> backed by GPU texture associated with …","Creates a GPU-backed <code>Image</code> from <code>YUVAPixmaps</code>. The image …","Creates a GPU-backed <code>Image</code> from <code>YUV[A]</code> planar textures. …","Retrieves the back-end render target. If <code>Surface</code> has no …","Retrieves the back-end texture. If <code>Surface</code> has no back-end …","Returns <code>Surface</code> on GPU indicated by context. Allocates …","Returns <code>Surface</code> on GPU indicated by context that is …","Wraps a GPU-backed buffer into <code>Surface</code>. Caller must ensure …","Wraps a GPU-backed texture into <code>Surface</code>. Caller must …","","","","Type that represents either a slice of <code>Color</code>, or a slice …","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","CachingHint selects whether Skia may internally cache …","","Specify <code>b</code> and <code>c</code> (each between 0…1) to create a shader …","","","","<code>Image</code> describes a two dimensional array of pixels to draw. …","","","Returns <code>AlphaType</code>.","","Retrieves the back-end texture. If <code>Image</code> has no back-end …","","","","","Returns <code>IRect</code> <code>{ 0, 0, width(), height() }</code>.","","","","","","","Returns a smart pointer to <code>ColorSpace</code>, the range of …","Returns <code>ColorType</code> if known; otherwise, returns …","","Returns <code>ISize</code> <code>{ width(), height() }</code>.","","See <code>Self::encode_to_data_with_quality</code>","Encodes <code>Image</code> pixels, returning result as <code>Data</code>.","Encodes <code>Image</code> pixels, returning result as <code>Data</code>.","Returns encoded <code>Image</code> pixels as <code>Data</code>, if <code>Image</code> was created …","","","","See <code>Self::flush_with_info()</code>","Version of <code>flush()</code> that uses a default <code>gpu::FlushInfo</code>. …","Flushes any pending uses of texture-backed images in the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Creates <code>Image</code> from <code>backend_texture</code> associated with …","Creates <code>Image</code> from bitmap, sharing or copying bitmap …","","See <code>Self::from_encoded_with_alpha_type()</code>","Return an image backed by the encoded data, but attempt to …","Creates <code>Image</code> from data returned by <code>image_generator</code>. …","","See <code>Self::from_picture_with_props()</code>","Creates <code>Image</code> from picture. Returned <code>Image</code> width and …","","Creates <code>Image</code> from <code>ImageInfo</code>, sharing pixels.","Creates <code>Image</code> from GPU texture associated with context. …","Creates <code>Image</code> from <code>crate::YUVAPixmaps</code>.","Creates an <code>Image</code> from <code>YUV[A]</code> planar textures. This …","Returns <code>true</code> if the image has mipmap levels.","","Returns pixel row count.","Returns a <code>ImageInfo</code> describing the width, height, color …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if <code>Image</code> pixels represent transparency only. …","Returns <code>true</code> if <code>Image</code> is backed by an image-generator or …","Returns <code>true</code> if pixels ignore their alpha value and are …","Returns <code>true</code> if the contents of <code>Image</code> was created on or …","Returns <code>true</code> if <code>Image</code> can be drawn on either raster …","Creates <code>Image</code> in target <code>ColorSpace</code>. Returns <code>None</code> if <code>Image</code> …","Returns raster image or lazy image. Copies <code>Image</code> backed by …","Returns raster image. Copies <code>Image</code> backed by GPU texture …","Returns subset of this image.","","See <code>Self::new_color_space_with_context</code>","Creates <code>Image</code> in target <code>ColorSpace</code>. Returns <code>None</code> if <code>Image</code> …","Creates <code>Image</code> from pixmap. <code>Image</code> is uploaded to GPU …","Creates a CPU-backed <code>Image</code> from compressed data.","See <code>Self::new_subset_with_context</code>","Returns subset of this image.","Creates a GPU-backed <code>Image</code> from compressed data.","See <code>Self::new_texture_image_budgeted</code>","Returns <code>Image</code> backed by GPU texture associated with …","Creates filtered <code>Image</code>. filter processes original <code>Image</code>, …","Copies <code>Image</code> pixel address, row bytes, and <code>ImageInfo</code> to …","See <code>Self::read_pixels_with_context()</code>","See <code>Self::read_pixels_to_pixmap_with_context()</code>","Copies a <code>crate::Rect</code> of pixels from <code>Image</code> to dst. Copy …","Copies <code>crate::Rect</code> of pixels from <code>Image</code> to <code>dst_pixels</code>. …","Creates a new <code>Image</code> identical to this one, but with a …","Copies <code>Image</code> to dst, scaling pixels to fit <code>dst.width()</code> and …","Returns an approximation of the amount of texture memory …","Returns raster image or lazy image. Copies <code>Image</code> backed by …","","","Returns raster image. Copies <code>Image</code> backed by GPU texture …","<code>to_raw_shader</code> functions like <code>to_shader</code>, but for images …","Make a shader with the specified tiling and mipmap …","","","","","","","Returns value unique to image. <code>Image</code> contents cannot …","","Returns pixel count in each row.","Returns an image with the same “base” pixels as the …","","","","","Return a <code>Image</code> using the encoded data, but attempts to …","Creates <code>Image</code> from data returned by <code>image_generator</code>. The …","Creates <code>Image</code> from picture. Returned <code>Image</code> width and …","Creates a CPU-backed <code>Image</code> from <code>bitmap</code>, sharing or copying …","Creates a CPU-backed <code>Image</code> from compressed data.","Creates CPU-backed <code>Image</code> from pixel data described by info.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return a <code>Image</code> using the encoded data, but attempts to …","Creates <code>Image</code> from data returned by <code>image_generator</code>. The …","Creates <code>Image</code> from picture. Returned <code>Image</code> width and …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a CPU-backed <code>Image</code> from <code>bitmap</code>, sharing or copying …","Creates a CPU-backed <code>Image</code> from compressed data.","Creates CPU-backed <code>Image</code> from pixel data described by info.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","","","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","AddPathMode chooses how <code>add_path()</code> appends. Adding one <code>Path</code>…","","Four oval parts with radii (rx, ry) start at last <code>Path</code> …","","","","","","","","","","","","","","","Iterates through verb array, and associated <code>Point</code> array …","","","","The maximum number of points an iterator will return for …","","","","","","SegmentMask constants correspond to each drawing Verb type …","","Verb instructs <code>Path</code> how to interpret one or more <code>Point</code> and …","","Appends arc to <code>Path</code>, as the start of new contour. Arc …","Adds circle centered at (x, y) of size radius to <code>Path</code>, …","Adds oval to <code>Path</code>, appending <code>Verb::Move</code>, four <code>Verb::Conic</code>, …","Appends src to <code>Path</code>, offset by <code>(d.x, d.y)</code>.","Appends src to <code>Path</code>, transformed by matrix. Transformed …","Adds contour created from line array, adding <code>pts.len() - 1</code> …","Adds a new contour to the path, defined by the rect, and …","Appends <code>RRect</code> to <code>Path</code>, creating a new closed contour. <code>RRect</code>…","Adds rrect to <code>Path</code>, creating a new closed contour. If dir …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Returns the approximate byte size of the <code>Path</code> in memory.","Appends arc to <code>Path</code>. Arc added is part of ellipse bounded …","Appends arc to <code>Path</code>. Arc is implemented by one or more …","Appends arc to <code>Path</code>, after appending line if needed. Arc …","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","Returns minimum and maximum axes values of <code>Point</code> array. …","","","","","","","","","","Appends <code>Verb::Close</code> to <code>Path</code>. A closed contour connects the …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Returns minimum and maximum axes values of the lines and …","Adds conic from last point towards (x1, y1), to (x2, y2), …","Returns conic weight if <code>next()</code> returned <code>Verb::Conic</code>.","","Returns <code>true</code> if rect is contained by <code>Path</code>. May return <code>false</code>…","Returns <code>true</code> if the point <code>(p.x, p.y)</code> is contained by <code>Path</code>, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Approximates conic with quad array. Conic is constructed …","","","Returns the number of points in <code>Path</code>. <code>Point</code> count is …","Returns the number of verbs: <code>Verb::Move</code>, <code>Verb::Line</code>, …","Adds cubic from last point towards (x1, y1), then towards …","Initializes <code>Iter</code> with an empty <code>Path</code>. <code>next()</code> on <code>Iter</code> returns","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","","See <code>Path::dump_as_data()</code>","","","Writes text representation of <code>Path</code> to <code>Data</code>. Set <code>dump_as_hex</code>…","See <code>Path::dump_as_data()</code>","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Returns <code>PathFillType</code>, the rule used to fill <code>Path</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","(See Skia bug 1762.) Returns a non-zero, globally unique …","Returns <code>Point</code> at index in <code>Point</code> array. Valid range for …","Returns number of points in <code>Path</code>. Up to max points are …","Returns the number of verbs in the path. Up to max verbs …","","","","","Grows <code>Path</code> verb array and <code>Point</code> array to contain …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Interpolates between <code>Path</code> with <code>Point</code> array of equal size. …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if last <code>Verb::Line</code> returned by <code>next()</code> was …","Returns <code>true</code> if subsequent calls to <code>next()</code> return …","Returns <code>true</code> if the path is convex. If necessary, it will …","Tests if cubic is degenerate. Cubic with no length or that …","Returns if <code>Path</code> is empty. Empty <code>Path</code> may have FillType but …","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> for finite <code>Point</code> array values between …","Returns <code>true</code> if <code>Path</code> contain equal verbs and equal weights.","Returns if FillType describes area outside <code>Path</code> geometry. …","Returns if contour is closed. Contour is closed if <code>Path</code> …","Returns <code>true</code> if <code>Path</code> contains only one line; <code>Verb</code> array …","Tests if line between <code>Point</code> pair is degenerate. Line with …","Returns <code>true</code> if this path is recognized as an oval or …","Tests if quad is degenerate. Quad with no length or that …","Returns <code>Some(Rect, bool, PathDirection)</code> if <code>Path</code> is …","Returns <code>true</code> if path is representable as <code>RRect</code>. Returns …","Returns if <code>Path</code> data is consistent. Corrupt <code>Path</code> data is …","Returns <code>true</code> if the path is volatile; it will not be …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Returns last point on <code>Path</code>. Returns <code>None</code> if <code>Point</code> array is …","","Adds line from last point to (x, y). If <code>Path</code> is empty, or …","","","Adds beginning of contour at <code>Point</code> (x, y).","Sets <code>Iter</code> to return elements of verb array, <code>Point</code> array, …","","Constructs an empty <code>Path</code>. By default, <code>Path</code> has no verbs, …","Create a new path with the specified segments.","Returns next <code>Verb</code> in verb array, and advances <code>Iter</code>. When …","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Offsets <code>Point</code> array by <code>(d.x, d.y)</code>. <code>Path</code> is replaced by …","","","","","","The number of points an iterator will return for the verb.","","Adds quad from last point towards (x1, y1), to (x2, y2). …","Appends arc to <code>Path</code>, relative to last <code>Path</code> <code>Point</code>. Arc is …","Adds conic from last point towards vector (dx1, dy1), to …","Adds cubic from last point towards vector (dx1, dy1), then …","Adds line from last point to vector (dx, dy). If <code>Path</code> is …","Adds beginning of contour relative to last point. If <code>Path</code> …","Adds quad from last point towards vector (dx1, dy1), to …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Sets <code>Path</code> to its initial state. Removes verb array, <code>Point</code> …","Appends src to <code>Path</code>, from back to front. Reversed src …","Sets <code>Path</code> to its initial state, preserving internal …","","","Returns a mask, where each set bit corresponds to a …","Writes <code>Path</code> to buffer, returning the buffer written to, …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets FillType, the rule used to fill <code>Path</code>. While there is …","Specifies whether <code>Path</code> is volatile; whether it will be …","Sets the last point on the path. If <code>Point</code> array is empty, …","Sets <code>Iter</code> to return elements of verb array, <code>Point</code> array, …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Exchanges the verb array, <code>Point</code> array, weights, and …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Replaces FillType with its inverse. The inverse of …","Transforms verb array, <code>Point</code> array, and weight by matrix. …","Transforms verb array, <code>Point</code> array, and weight by matrix. …","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Updates internal bounds so that subsequent calls to …","Offsets <code>Point</code> array by <code>(d.x, d.y)</code>.","Transforms verb array, <code>Point</code> array, and weight by matrix. …","Transforms verb array, <code>Point</code> array, and weight by matrix. …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","Returns the filled equivalent of the stroked path.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Specify <code>b</code> and <code>c</code> (each between 0…1) to create a shader …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","ContentChangeMode members are parameters to …","","","","","","","","","","","<code>Surface</code> is responsible for managing the pixels that a …","","","","","","","Returns <code>Canvas</code> that draws into <code>Surface</code>. Subsequent calls …","Initializes <code>SurfaceCharacterization</code> that can be used to …","","","","","","","rust-skia helper, not in Skia","Draws <code>Surface</code> contents to canvas, with its top-left corner …","See <code>Self::draw_display_list_with_offset</code>.","Draws the deferred display list created via a …","","","","","","","See <code>Self::flush_with_mutable_state()</code>.","Call to ensure all reads/writes of the surface have been …","See <code>Self::flush_and_submit()</code>.","Issues pending <code>Surface</code> commands to the GPU-backed API …","Issues pending <code>Surface</code> commands to the GPU-backed API …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Wraps a GPU-backed buffer into <code>Surface</code>. Caller must ensure …","Wraps a GPU-backed texture into <code>Surface</code>. Caller must …","Returns unique value identifying the content of <code>Surface</code>. …","Retrieves the back-end render target. If <code>Surface</code> has no …","Retrieves the back-end texture. If <code>Surface</code> has no back-end …","","","","Returns pixel row count; may be zero or greater.","Returns an <code>ImageInfo</code> describing the surface.","Returns <code>Image</code> capturing <code>Surface</code> contents. Subsequent …","Like the no-parameter version, this returns an image of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this surface compatible with the provided …","Returns <code>Surface</code> without backing pixels. Drawing to <code>Canvas</code> …","Allocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …","Allocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …","Allocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …","Returns <code>Surface</code> on GPU indicated by context. Allocates …","Returns <code>Surface</code> on GPU indicated by context that is …","Returns a compatible <code>Surface</code>, or <code>None</code>. Returned <code>Surface</code> …","Calls <code>Self::new_surface()</code> with the same <code>ImageInfo</code> as this …","Notifies that <code>Surface</code> contents will be changed by code …","","Returns <code>SurfaceProps</code> for surface.","Copies <code>crate::Rect</code> of pixels from <code>Canvas</code> into <code>dst_pixels</code>.","Copies <code>crate::Rect</code> of pixels from <code>Surface</code> into bitmap.","Copies <code>crate::Rect</code> of pixels to dst.","Returns the recording context being used by the <code>Surface</code>.","If the surface was made via <code>Self::from_backend_texture</code> …","If the surface was made via <code>Self::from_backend_texture()</code> …","If a surface is GPU texture backed, is being drawn with …","","","","","","","","","","","","","","Returns pixel count in each row; may be zero or greater.","Copies <code>crate::Rect</code> of pixels from the src <code>Bitmap</code> to the …","Copies <code>crate::Rect</code> of pixels from the src <code>Pixmap</code> to the …","Returns <code>Surface</code> without backing pixels. Drawing to …","Allocates raster <code>Surface</code>. <code>crate::Canvas</code> returned by <code>Surface</code>…","Allocates raster <code>Surface</code>. <code>crate::Canvas</code> returned by <code>Surface</code>…","Allocates raster <code>Surface</code>. <code>crate::Canvas</code> returned by <code>Surface</code>…","Returns <code>Surface</code> without backing pixels. Drawing to …","Allocates raster <code>Surface</code>. <code>crate::Canvas</code> returned by <code>Surface</code>…","Allocates raster <code>Surface</code>. <code>crate::Canvas</code> returned by <code>Surface</code>…","Allocates raster <code>Surface</code>. <code>crate::Canvas</code> returned by <code>Surface</code>…","","","","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","","Get a flags value with all bits unset.","Ends the Canvas drawing and returns the resulting SVG. …","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Creates a new SVG canvas.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","","Get a flags value with all bits unset.","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained named flags values.","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Get a flags value with all known bits set.","Get a flags value with all known bits set.","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","","","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","A trait that supports the conversion from a C/C++ value …","This trait supports the conversion of a wrapper into it’…","A trait that supports the conversion from a C/C++ …","A trait that supports the conversion from a C/C++ value …","Access the wrapped pointer.","","","","Access the wrapped pointer.","","","","Unwraps the wrapper type into the native pointer.","","","Wraps a native pointer into a wrapper type. Returns <code>None</code> …","","","","","","","Specifies how YUV (and optionally A) are divided among …","","","","","","","Describes how subsampled chroma values are sited relative …","UV subsampling is also specified in the enum value names …","","","","","","","Specifies the structure of planes for a YUV image with …","","","","","","","","","","","","","","","","","Given a per-plane row bytes, determine size to allocate …","","Dimensions of the full resolution image (after planes have …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Does the PlaneConfig have alpha values?","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>dimensions</code> should specify the size of the full resolution …","Number of Y, U, V, A channels in the ith plane for a given …","","Number of planes for a given PlaneConfig.","","","","","Given image dimensions, a planer configuration, …","Returns the dimensions for each plane. Dimensions are as …","<code>SubsamplingFactors(Subsampling)</code> if <code>plane_index</code> refers to a …","","","","Ratio of Y/A values to U/V values in x and y.","","","","","","","","","","","Returns a YUVAInfo that is identical to this one but with …","Returns a YUVAInfo that is identical to this one but with …","","","Data type for Y, U, V, and possibly A channels independent …","","","","","","","","","","","UV subsampling is also specified in the enum value names …","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the default ColorType to use with <code>num_channels</code> …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If the ColorType is supported for YUVA pixmaps this will …","","","","","","","","","","Data type for Y, U, V, and possibly A channels independent …","","","","","","","YUVAInfo combined with per-plane ColorTypes and row bytes. …","Helper to store Pixmap planes as described by a …","Allocate space for pixmaps’ pixels in the YUVAPixmaps.","Determine size to allocate for all planes. Optionally …","The per-YUV<code>[A]</code> channel data type.","","","","Use storage in Data as backing store for pixmaps’ …","Like above but uses …","Use passed in memory as backing store for pixmaps’ …","Wraps existing <code>Pixmap</code>s. The YUVAPixmaps will have no …","Takes an allocation that is assumed to be at least […","Is this valid and does it use color types allowed by the …","Initializes the YUVAPixmapInfo from a YUVAInfo with …","The number of Pixmap planes.","Number of pixmap planes.","","Get the ith Pixmap plane. <code>Pixmap</code> will be default …","Image info for the ith plane, or <code>None</code> if <code>i</code> &gt;= …","An iterator of all planes’ image infos.","Access the Pixmap planes.","","Row bytes for the ith plane. Returns <code>None</code> if <code>i</code> &gt;= …","Row bytes for all planes.","","","","","Data type for Y, U, V, and possibly A channels independent …","","","","","","","","","UV subsampling is also specified in the enum value names …","","","","","","","","","","","","","","","","","","","All legal combinations of PlaneConfig and DataType are …","Defaults to nothing supported.","Gets the default ColorType to use with <code>num_channels</code> …","Update to add support for pixmaps with <code>num_channels</code> …","","Init based on texture formats supported by the context.","If the ColorType is supported for YUVA pixmaps this will …","Checks whether there is a supported combination of color …"],"i":[136,124,124,43,44,124,156,156,124,0,0,136,0,0,155,155,124,124,124,124,149,149,1,1,43,156,135,135,135,135,135,135,135,148,0,0,0,0,0,0,0,128,31,124,31,1,0,116,89,0,153,0,0,143,0,89,0,0,89,0,0,89,0,0,0,0,0,0,0,0,153,0,0,0,142,0,153,0,0,143,1,12,143,156,44,89,0,0,0,116,128,148,0,0,89,144,154,10,0,0,89,89,89,89,89,0,155,155,0,0,142,152,89,12,146,0,0,0,0,0,0,0,0,0,0,0,145,136,156,1,43,43,1,43,0,140,124,381,156,0,0,89,0,89,156,143,143,0,0,143,143,0,0,135,0,0,0,0,142,115,142,144,154,10,142,142,142,142,152,152,0,156,135,156,135,156,1,137,138,128,148,154,155,89,59,135,136,115,89,89,116,89,153,382,137,138,89,0,1,5,12,12,12,12,153,0,0,0,144,0,116,148,89,153,89,124,381,0,382,137,138,138,145,155,115,145,381,143,0,59,115,89,0,156,0,156,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,0,0,59,153,0,136,124,124,124,124,124,0,1,43,43,0,43,124,124,124,43,124,124,124,124,124,149,149,0,0,135,135,135,135,135,0,0,0,116,154,10,128,148,0,0,143,143,124,0,0,89,0,0,89,0,0,0,145,89,115,128,89,89,89,89,89,146,146,0,142,0,0,0,0,1,0,0,0,0,0,0,0,0,44,140,140,140,0,142,154,10,124,59,149,59,0,0,0,0,0,0,156,156,1,152,10,0,89,154,1,0,0,0,0,381,143,1,3,87,133,5,5,8,12,12,16,17,18,19,19,21,21,24,25,12,12,16,17,18,19,19,21,21,24,25,12,12,25,12,12,25,12,12,12,12,25,12,25,12,12,12,25,12,12,38,38,40,12,43,44,45,12,45,12,45,12,45,12,48,12,48,12,48,12,48,12,48,12,48,12,48,12,48,12,12,5,5,5,12,12,5,45,60,47,38,12,12,12,5,0,5,12,12,12,5,71,12,12,12,75,12,5,5,78,5,75,5,75,5,5,25,12,12,25,12,12,25,12,12,383,20,83,5,5,5,87,16,17,18,87,12,90,5,89,5,12,12,45,12,75,5,16,17,18,12,12,5,87,40,26,26,12,0,12,283,99,5,99,5,99,5,99,5,283,1,3,130,87,133,344,12,12,12,12,71,5,109,12,12,71,5,12,1,1,43,44,43,44,1,1,43,44,43,44,43,43,44,44,43,44,43,44,12,12,12,0,78,5,5,12,5,12,5,38,209,12,71,5,176,293,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,212,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,38,209,12,71,5,176,293,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,212,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,40,26,283,40,26,45,47,38,120,12,12,12,12,5,5,5,5,5,38,38,45,60,47,12,12,12,124,3,133,344,109,12,5,292,5,0,125,12,5,12,283,26,26,26,12,5,5,5,12,25,12,5,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,12,71,5,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,5,150,25,12,12,43,44,0,141,141,12,12,0,12,5,5,0,47,12,0,0,45,60,47,38,109,12,12,12,12,5,45,60,47,38,109,12,12,12,12,5,5,5,0,12,5,141,78,12,12,12,5,43,44,78,5,5,5,5,5,5,25,12,45,47,38,12,12,5,139,45,38,12,47,12,47,12,12,12,12,12,139,141,25,12,12,12,384,12,43,40,40,40,40,40,26,26,26,26,26,26,44,40,12,12,12,0,236,12,12,12,90,5,5,5,0,99,168,12,5,5,65,5,5,5,12,12,5,12,12,16,17,21,24,21,24,188,25,12,12,75,5,3,133,5,0,12,12,151,151,5,5,45,168,65,60,38,109,12,12,12,12,12,12,1,135,140,16,17,18,141,89,115,144,19,21,24,40,26,128,148,20,23,149,44,150,3,31,116,5,90,176,3,176,283,385,161,12,5,5,5,125,25,12,12,12,12,12,12,43,44,5,45,47,184,38,109,12,12,12,12,12,71,5,5,5,5,0,5,21,21,5,5,27,16,21,23,16,21,23,0,16,17,18,21,24,21,24,71,71,5,5,5,5,5,0,45,12,12,71,5,12,141,26,12,12,12,12,26,133,12,65,5,43,40,44,12,0,45,38,12,5,5,5,5,5,191,71,5,90,12,71,5,1,130,131,43,87,132,133,134,124,59,135,136,137,138,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,5,19,21,20,23,1,130,43,134,124,59,135,136,137,138,140,142,89,143,115,144,145,19,40,146,128,148,20,149,44,150,151,3,152,31,153,154,155,156,116,10,45,38,12,45,38,12,45,12,45,12,45,12,5,43,44,5,5,45,12,45,38,12,133,65,5,5,65,5,25,12,12,188,5,5,5,5,5,5,5,5,5,12,12,87,12,150,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,45,83,161,90,99,179,125,168,65,191,60,47,78,25,75,184,38,109,120,48,209,8,12,12,1,130,131,43,43,43,43,43,87,132,133,134,124,59,135,136,137,138,139,212,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,44,44,44,44,150,151,3,152,31,153,154,155,156,116,10,0,0,0,0,0,5,5,5,83,65,38,209,12,71,5,5,176,293,1,1,1,130,130,131,131,43,87,87,87,87,132,133,134,124,59,135,136,137,138,139,212,140,16,17,18,141,141,141,142,89,143,115,144,145,19,19,21,21,21,21,24,24,40,40,26,26,26,26,146,128,147,148,20,20,23,23,23,23,149,44,150,151,3,3,3,152,31,153,154,155,156,116,10,5,5,1,5,5,5,43,44,43,43,44,44,43,44,26,75,12,5,87,3,47,12,5,12,75,12,12,5,5,12,191,71,5,5,12,12,5,26,26,23,43,44,26,40,5,43,44,5,12,12,12,5,5,5,5,26,120,5,120,5,40,147,5,12,1,120,5,78,5,40,26,99,5,99,5,120,12,12,5,12,5,120,5,5,12,12,40,26,40,26,5,5,1,130,87,133,45,184,12,12,5,5,5,45,12,45,38,12,5,5,12,12,141,45,38,12,45,38,12,5,120,12,5,5,5,12,191,71,12,12,12,12,141,45,12,5,5,12,12,12,12,12,71,71,209,0,0,0,236,131,12,12,5,5,12,5,5,71,71,5,5,12,43,124,59,135,136,137,138,140,142,89,143,115,144,145,146,128,148,44,151,3,152,31,153,154,155,156,116,10,45,47,184,38,109,12,12,12,12,12,71,5,5,5,40,26,20,23,40,5,0,0,12,151,5,0,5,0,12,0,109,12,5,5,5,5,0,25,12,12,99,12,87,18,5,87,12,5,12,12,12,45,191,38,12,71,12,12,12,71,5,1,87,132,124,139,140,16,17,18,141,19,21,24,40,26,147,20,23,149,150,151,3,153,12,12,71,5,1,87,132,124,139,140,16,17,18,141,19,21,24,40,26,147,20,23,149,150,151,3,153,5,5,5,5,43,44,40,26,45,12,12,40,26,26,40,43,44,43,40,26,44,26,12,12,38,209,12,71,5,176,293,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,212,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,75,5,12,71,176,43,212,44,141,236,5,43,44,5,5,150,124,12,12,12,149,5,12,5,12,12,5,12,12,12,12,12,12,45,90,99,47,12,12,12,12,5,5,43,40,26,20,23,44,40,152,12,12,141,21,24,26,5,12,12,60,47,12,12,149,12,45,184,12,5,12,12,152,12,5,12,5,12,12,139,12,109,12,45,12,45,60,47,38,12,12,12,5,5,87,59,12,109,12,12,71,12,45,12,12,12,149,12,71,26,12,161,5,12,12,5,191,71,109,12,150,149,191,109,12,12,12,12,12,71,71,5,12,12,5,19,21,20,23,21,99,5,43,44,43,44,12,40,26,26,26,26,0,71,12,283,40,26,40,26,12,5,16,17,18,21,24,16,17,18,21,24,12,5,0,25,12,12,5,5,141,5,0,5,5,25,48,12,12,5,5,5,5,5,5,5,5,5,5,12,5,5,12,141,12,65,5,65,5,65,5,65,5,168,5,274,1,87,0,12,71,5,5,0,5,188,283,5,5,5,12,12,5,5,0,12,47,12,151,370,188,12,71,12,83,5,5,151,25,12,12,27,27,27,27,87,87,87,16,16,17,17,18,18,141,141,141,21,23,16,16,17,17,18,18,21,23,124,12,12,89,0,141,178,178,0,381,27,381,27,12,5,16,17,18,19,21,24,21,45,125,65,60,47,25,38,120,48,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,71,5,5,5,5,176,1,87,139,16,17,18,141,19,21,24,40,26,147,20,23,150,3,47,12,90,5,5,5,90,5,5,5,90,5,90,99,168,5,5,5,40,26,20,23,5,12,12,65,5,12,12,71,5,71,12,141,5,5,5,47,12,47,12,5,5,25,12,75,5,5,5,5,5,5,5,47,12,161,5,161,5,90,5,65,5,65,5,90,5,5,5,5,5,5,5,5,168,5,90,5,47,12,5,90,5,176,212,12,16,17,18,21,24,141,21,24,43,44,12,184,5,5,5,45,184,12,5,12,12,12,12,12,12,25,12,12,12,5,21,40,26,21,40,26,5,0,12,12,12,12,12,109,12,12,12,40,26,12,12,5,0,0,43,44,0,5,0,5,0,0,12,0,0,0,0,45,12,5,5,5,0,141,0,150,45,12,45,12,45,184,38,12,5,45,12,12,12,12,12,12,12,12,12,12,12,75,5,0,5,5,153,12,25,12,12,5,12,5,12,141,5,12,141,12,141,141,0,0,141,141,141,5,0,5,5,25,12,12,191,71,12,386,12,12,1,130,87,12,25,12,12,25,12,12,25,12,12,12,25,12,12,5,5,0,141,12,45,38,12,5,5,5,38,5,5,5,5,12,12,5,12,147,141,0,5,176,5,12,43,44,5,5,0,0,12,45,47,25,38,12,12,12,12,12,12,12,5,5,109,12,8,12,5,5,5,5,5,71,12,12,12,40,26,40,26,141,71,71,71,26,26,387,26,26,141,45,184,38,12,12,5,45,38,12,12,141,141,0,12,12,0,131,109,12,12,370,0,71,0,141,21,24,38,5,12,21,24,147,151,12,5,12,385,161,75,12,5,5,5,5,12,43,19,21,24,147,20,23,44,141,21,12,12,45,12,12,12,5,5,5,5,12,12,12,26,26,26,26,141,141,12,12,12,38,12,141,141,12,12,12,12,12,40,26,20,23,12,25,12,12,12,12,12,12,12,12,141,147,12,45,184,12,5,45,12,26,25,12,12,26,12,21,21,12,40,26,12,12,12,71,21,12,12,12,45,12,141,12,12,12,12,5,5,141,141,141,141,12,141,12,12,141,12,12,12,40,12,12,12,12,12,12,12,12,12,12,141,12,40,26,40,26,0,12,0,0,45,60,47,38,12,12,12,12,0,12,12,90,12,5,40,26,12,12,5,25,12,40,26,40,26,5,12,5,5,147,12,12,5,12,5,0,12,12,12,0,0,12,168,12,12,5,43,16,17,18,19,19,21,21,24,44,43,16,17,18,19,19,21,21,24,44,5,12,5,12,5,0,12,0,0,45,12,12,12,0,0,5,5,43,44,0,5,12,5,12,5,12,12,12,12,5,12,0,12,5,151,5,5,5,87,23,131,87,23,5,1,130,141,152,5,87,12,71,5,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,26,147,5,5,1,23,45,75,12,5,5,12,12,12,12,147,161,5,43,44,25,12,12,40,26,283,40,26,12,12,12,71,141,12,141,5,0,45,12,45,12,45,12,45,12,38,209,12,71,5,176,293,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,212,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,38,209,12,71,5,176,293,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,212,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,5,5,5,147,12,12,147,38,209,12,71,5,176,293,1,130,131,43,87,132,133,134,124,59,135,136,137,138,139,212,140,16,17,18,141,142,89,143,115,144,145,19,21,24,40,26,146,128,147,148,20,23,149,44,150,151,3,152,31,153,154,155,156,116,10,385,5,0,209,12,12,12,5,12,5,5,5,43,44,191,75,120,71,5,5,5,5,5,5,0,12,71,5,293,1,87,132,124,139,140,16,17,18,141,19,21,24,40,26,147,20,23,149,150,151,3,153,12,188,109,12,0,131,47,12,5,124,0,5,5,5,0,109,12,109,12,18,45,47,184,38,109,12,12,12,12,12,12,71,5,5,5,40,26,20,23,40,1,40,60,47,12,12,109,12,5,60,47,109,12,12,12,161,5,60,47,12,12,5,47,12,12,109,12,40,26,161,5,5,5,78,5,12,40,26,40,26,40,26,12,161,5,12,12,12,12,71,5,1,87,132,124,139,140,16,17,18,141,19,21,24,40,26,147,20,23,149,150,151,3,153,12,12,292,5,0,38,38,12,5,5,12,40,26,22,388,389,16,17,18,19,19,21,24,283,283,283,40,26,22,388,389,16,17,18,19,19,21,24,151,12,12,12,12,0,12,12,12,12,0,0,388,389,17,18,24,0,0,0,0,0,0,0,297,302,0,297,0,301,0,297,0,300,301,301,300,0,0,0,0,302,0,72,297,297,72,72,72,72,298,299,72,72,297,297,297,297,297,297,297,297,297,299,72,298,390,297,296,300,303,301,302,299,72,298,390,297,296,300,303,301,302,299,304,72,72,299,299,72,72,72,72,72,297,300,301,302,297,300,301,302,297,304,297,297,72,72,297,297,299,298,298,303,298,303,72,297,297,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,298,303,297,297,297,301,302,297,301,302,297,299,72,299,72,298,297,297,297,297,297,296,300,303,301,302,299,72,298,390,297,296,300,300,300,303,301,302,72,297,297,297,297,297,297,297,297,297,297,72,72,390,297,301,302,72,296,299,299,297,297,297,297,297,297,299,72,298,390,297,296,300,303,301,302,297,297,297,72,72,297,297,297,297,297,297,0,72,72,72,72,72,72,297,296,299,297,72,296,72,72,72,72,72,72,72,304,297,297,72,72,303,72,72,296,72,72,72,72,72,72,297,297,391,72,72,72,297,297,72,297,297,297,300,301,302,297,297,72,72,72,299,72,298,390,297,296,300,303,301,302,299,72,298,390,297,296,300,303,301,302,299,72,298,390,297,296,300,303,301,302,297,297,299,299,72,72,304,304,307,307,0,0,307,304,307,304,307,304,307,307,304,307,307,307,304,307,304,307,307,304,307,304,307,304,307,304,307,304,307,304,304,156,156,156,0,263,263,313,0,142,263,156,0,0,0,142,0,156,0,156,156,392,0,142,142,142,142,142,142,156,156,0,156,263,263,263,312,0,156,156,0,311,311,0,263,263,0,0,142,313,263,263,142,156,156,0,312,0,310,310,308,309,310,315,316,317,318,319,320,263,311,312,313,308,309,310,315,316,317,318,319,320,263,311,312,313,308,309,310,263,311,312,313,309,310,263,311,312,313,0,392,315,316,317,318,319,320,310,263,308,310,310,308,309,263,311,312,313,309,263,311,312,313,308,309,310,315,316,317,318,319,320,263,311,312,313,309,308,309,310,315,316,317,318,319,320,263,311,312,313,308,310,308,308,308,308,308,308,308,308,308,308,310,263,311,312,313,308,308,310,263,310,263,308,309,310,315,316,317,318,319,320,263,311,312,313,392,315,316,317,318,319,320,308,308,308,0,309,308,310,310,0,308,308,308,308,309,263,263,309,310,263,311,312,313,308,309,310,315,316,317,318,319,320,263,311,312,313,308,309,310,315,316,317,318,319,320,263,311,312,313,308,309,310,315,316,317,318,319,320,263,311,312,313,310,263,308,310,263,309,0,0,393,393,393,394,394,0,0,0,0,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,231,231,0,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,321,322,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,322,321,231,231,231,231,231,231,231,231,231,231,231,321,231,231,231,231,231,231,321,322,322,231,231,321,231,231,322,321,231,231,231,231,231,231,231,231,231,231,231,231,231,231,0,0,0,0,323,323,323,323,323,323,323,323,323,323,323,323,0,323,323,323,0,0,325,324,325,324,325,324,325,324,325,324,325,324,325,324,325,324,0,0,201,201,201,201,201,201,0,201,201,201,0,284,284,0,0,0,189,189,0,0,189,189,189,189,189,49,49,49,49,189,189,49,189,189,49,49,49,49,49,49,49,49,49,189,49,189,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,189,189,189,189,49,49,49,49,49,0,0,0,157,327,328,157,327,328,327,328,327,328,157,327,157,157,157,327,328,157,327,328,328,157,157,157,327,328,157,328,0,157,157,157,157,327,328,157,327,328,157,327,328,157,327,328,157,157,0,157,0,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,0,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,330,0,0,330,330,330,330,330,330,283,283,330,330,330,330,330,330,330,330,330,330,283,330,283,283,283,330,283,330,283,330,330,330,330,330,330,283,283,330,330,330,330,330,283,330,330,330,330,330,330,330,283,330,283,330,330,330,330,330,330,330,330,330,330,283,330,283,283,330,330,330,330,330,330,330,283,330,330,330,330,330,330,330,330,330,283,283,330,330,330,330,330,330,283,283,330,330,330,330,330,283,330,330,283,330,283,330,283,330,283,283,283,330,330,283,283,283,283,283,0,294,294,294,294,0,0,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,331,331,332,332,331,331,332,332,331,0,331,333,331,331,331,332,333,331,332,332,0,331,332,332,333,0,0,213,213,331,332,213,333,331,332,213,333,331,332,213,333,331,332,213,333,331,332,213,331,332,331,332,213,333,331,332,333,331,332,213,333,331,331,332,332,213,333,333,331,332,213,331,332,213,331,332,213,333,213,213,213,331,332,213,331,332,213,333,331,332,213,333,331,332,213,333,331,332,213,333,331,332,213,213,213,331,332,213,0,0,0,0,0,0,0,218,0,0,0,104,106,106,0,0,0,0,336,104,106,0,0,104,106,0,269,227,227,240,175,204,269,106,106,0,0,0,0,0,0,0,218,104,106,269,0,0,227,227,240,175,204,269,92,216,334,334,216,110,110,187,110,217,219,206,216,217,219,104,227,240,175,106,218,204,237,278,279,334,269,203,104,227,240,175,106,218,204,237,278,279,334,269,203,110,92,217,104,227,240,175,106,218,204,237,278,279,269,104,227,240,175,106,218,204,237,278,279,269,216,216,92,216,0,335,206,203,216,92,92,334,217,219,334,334,334,334,334,334,104,227,240,175,106,218,204,237,278,279,269,104,227,240,175,106,218,204,237,278,279,269,92,92,92,92,92,334,92,92,187,110,217,219,335,92,206,216,336,228,104,227,240,175,106,218,204,237,278,279,334,269,203,334,92,216,104,227,240,175,106,218,204,237,278,279,334,269,203,0,334,219,217,217,217,217,104,227,240,175,106,218,204,217,219,92,0,237,269,203,237,269,203,104,227,240,175,106,218,204,237,278,279,334,269,203,219,217,219,217,187,110,217,219,217,334,334,216,278,278,216,216,217,336,187,110,336,228,334,334,110,217,219,92,217,336,228,92,334,92,336,336,92,92,92,334,92,92,279,92,92,92,92,279,334,219,92,92,92,92,217,219,92,92,219,92,92,0,228,336,228,228,104,227,240,175,106,218,204,237,278,279,269,110,104,227,240,175,106,218,204,237,278,279,334,269,203,104,227,240,175,106,218,204,237,278,279,334,269,203,104,227,240,175,106,218,204,237,278,279,334,269,203,334,334,237,269,203,217,219,237,269,203,336,336,228,338,338,0,337,0,337,0,338,337,266,266,266,266,266,266,337,338,266,337,338,266,337,338,337,338,266,266,266,266,266,266,266,266,337,338,337,338,266,337,338,266,337,338,266,266,337,338,266,266,266,266,337,338,266,266,266,266,266,266,266,266,266,266,266,266,337,338,266,337,338,266,337,338,266,337,338,266,266,266,94,94,339,0,94,94,94,94,94,0,0,339,0,0,340,340,0,94,94,94,94,94,339,339,340,339,339,94,94,94,339,94,94,94,94,94,94,94,94,94,94,94,94,339,94,94,0,0,339,0,0,94,339,339,340,195,339,339,339,339,339,339,339,339,339,340,94,234,233,341,339,340,94,234,233,341,339,340,94,234,233,341,339,340,94,234,233,341,339,339,339,339,234,233,341,339,339,340,94,234,233,341,339,340,94,234,233,341,339,339,265,265,233,195,265,340,94,234,233,341,339,339,339,339,339,234,233,341,340,94,94,234,233,341,339,339,339,339,339,233,339,339,234,195,265,340,94,339,234,234,233,341,234,233,341,339,339,339,340,94,234,233,341,339,339,339,339,195,234,233,339,339,341,265,265,265,339,339,234,233,341,195,339,195,341,339,339,339,339,234,341,340,94,234,233,341,339,339,340,94,234,233,341,339,340,94,234,233,341,339,340,94,234,233,341,339,339,234,233,341,265,234,233,341,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,244,0,0,245,0,245,245,245,245,245,245,245,245,245,245,245,246,245,244,246,245,244,246,245,246,245,245,246,245,245,245,245,245,245,245,245,245,246,245,246,245,245,246,245,245,245,245,245,244,246,246,245,244,244,244,244,245,245,245,245,245,245,245,245,245,245,246,245,246,246,246,246,245,245,0,245,245,245,245,246,245,244,245,245,245,245,245,244,245,245,245,245,244,0,0,245,245,0,0,245,245,245,245,245,245,0,0,245,245,246,245,245,245,246,245,244,246,245,244,0,0,246,245,244,245,245,246,246,0,395,396,396,396,0,0,395,396,396,395,397,396,396,396,396,395,397,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,343,343,0,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,343,0,236,236,236,236,236,236,236,236,236,236,0,236,236,236,236,236,0,236,236,236,236,236,236,236,343,343,0,343,250,155,155,0,0,0,0,250,155,224,0,155,224,96,344,96,344,250,344,250,96,344,344,344,250,344,250,96,96,96,96,96,96,96,96,96,344,250,250,96,96,96,96,344,250,344,250,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,250,96,96,0,344,344,344,250,96,96,96,96,96,96,96,96,96,344,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,344,250,96,96,96,344,250,344,250,344,250,96,344,96,96,344,0,224,224,0,0,0,0,0,0,198,0,0,198,97,97,97,198,198,97,198,198,97,97,97,97,97,97,97,97,97,198,198,97,97,97,198,198,97,97,198,97,97,198,97,97,97,97,97,97,97,97,97,97,97,198,198,198,198,97,0,0,0,345,346,346,0,0,0,0,345,84,346,345,84,346,345,84,346,345,84,346,0,0,345,0,0,0,0,0,0,84,345,84,346,346,0,345,84,346,345,345,345,345,345,345,345,84,84,346,346,0,345,345,345,84,346,84,0,0,0,0,0,84,0,0,0,0,345,0,0,0,0,0,345,84,346,345,84,346,345,84,346,345,84,346,345,345,0,224,224,224,224,224,224,0,0,0,224,224,224,224,224,224,0,0,0,224,224,224,224,0,398,347,0,347,398,347,0,348,347,348,347,348,347,348,347,348,348,348,0,0,347,348,347,348,347,348,347,348,347,347,348,348,347,348,347,348,347,348,347,348,348,0,0,350,0,0,351,351,351,0,350,0,0,251,350,352,352,352,350,0,352,353,352,353,352,353,352,353,351,350,352,353,352,353,0,251,350,350,350,350,350,350,350,350,350,350,350,251,351,350,35,352,353,251,351,350,35,352,353,35,251,351,350,35,352,353,251,351,350,35,352,353,350,350,350,35,350,350,35,35,350,350,35,35,350,350,251,351,350,35,352,353,251,351,350,352,353,350,35,251,351,350,350,350,350,350,35,352,353,251,351,350,35,352,353,35,350,350,350,350,350,350,350,350,350,350,35,35,35,35,35,251,351,350,35,35,35,35,35,35,35,35,35,350,350,350,350,350,350,251,351,350,35,352,353,350,35,35,350,350,350,350,35,35,35,35,35,35,350,350,350,350,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,350,350,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,350,350,35,35,35,35,35,35,35,350,350,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,350,350,350,350,35,251,351,350,35,352,353,350,350,35,35,35,251,351,350,35,352,353,251,351,350,35,352,353,251,351,350,35,352,353,350,350,35,35,0,0,0,0,0,0,0,0,0,0,0,148,128,0,146,0,148,0,128,148,128,146,146,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,34,0,31,280,280,31,354,354,354,0,354,152,34,0,152,152,0,280,81,354,354,354,0,280,354,0,0,81,0,152,9,9,9,9,9,9,9,9,9,280,280,9,9,9,9,9,280,280,280,280,280,280,280,280,280,355,356,280,81,34,354,355,356,280,81,34,354,9,9,280,81,34,354,280,81,34,354,9,280,280,280,9,9,355,356,9,9,280,280,9,9,9,9,9,9,355,356,9,280,280,355,356,9,9,9,9,9,280,280,280,81,34,354,280,81,34,354,280,9,355,9,280,280,280,280,280,81,34,354,355,356,280,81,34,354,354,280,280,280,280,280,280,280,280,280,280,9,9,9,9,9,9,280,81,34,354,9,280,280,9,280,280,280,280,355,356,280,81,34,354,355,356,280,280,280,355,355,9,9,9,280,280,9,9,9,9,9,9,9,9,9,9,9,9,280,280,280,280,9,9,9,9,9,9,355,356,9,9,355,356,280,9,9,9,9,280,356,354,9,9,9,9,9,9,9,9,9,280,280,9,9,9,9,9,9,9,280,280,9,9,9,355,356,9,9,280,280,9,280,280,9,280,81,34,354,9,9,280,280,9,9,9,355,356,280,81,34,354,355,356,280,81,34,354,355,356,280,81,34,354,280,280,9,9,9,9,271,271,271,0,271,271,271,271,271,271,271,271,271,271,271,0,271,271,271,271,0,0,0,163,86,86,86,86,163,163,163,163,86,163,163,163,163,86,86,86,86,163,163,163,163,163,163,163,86,163,163,86,163,86,86,86,253,253,253,0,0,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,357,253,253,253,253,253,253,253,253,357,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,357,253,253,253,253,253,253,253,253,253,253,253,357,253,253,253,253,253,253,357,357,357,357,253,253,357,253,253,357,253,253,357,253,253,253,253,253,253,253,253,253,253,253,253,31,31,153,153,153,152,152,152,153,153,0,0,0,0,153,152,0,0,0,0,358,358,359,359,359,358,358,360,358,360,358,360,358,360,360,359,358,360,358,360,359,358,360,358,360,358,360,360,358,360,358,0,358,360,360,360,358,358,358,358,358,360,360,358,360,358,360,358,360,358,0,0,0,361,361,361,361,361,361,362,362,0,0,362,0,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,363,364,362,363,364,362,363,364,362,363,364,362,363,362,362,362,362,363,362,362,362,362,0,0,362,363,364,362,363,364,362,363,362,362,362,362,362,363,364,362,363,364,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,362,363,364,362,362,362,362,362,362,362,362,362,364,364,362,362,362,362,362,362,362,362,362,362,364,362,363,364,362,362,362,363,364,362,363,364,362,363,364,362,362,362,362,363,0,0,162,162,0,0,162,0,0,162,162,0,162,162,365,366,367,162,365,366,367,162,58,365,366,367,162,365,366,367,162,399,58,58,58,58,58,58,58,399,399,366,367,162,162,58,365,366,367,162,365,366,367,162,58,58,162,365,366,367,365,366,367,399,399,400,58,58,58,58,365,366,367,162,365,366,367,58,365,366,58,58,58,365,366,367,365,365,365,366,366,367,58,58,58,58,58,58,58,58,58,58,365,366,399,399,365,399,399,365,365,58,58,58,58,58,58,58,365,366,367,162,58,58,365,366,367,162,365,366,367,162,365,366,367,162,399,399,365,366,367,365,366,367,58,399,399,368,0,368,368,369,369,368,368,0,368,37,368,0,369,369,37,37,368,369,37,368,369,37,37,368,369,37,368,369,37,37,37,37,37,37,368,369,368,369,37,368,369,37,368,369,37,368,369,37,37,37,37,37,368,369,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,368,369,37,37,368,369,37,368,369,37,368,369,37,37,37,37,37,37,37,247,288,0,0,0,247,288,0,0,247,288,0,0,0,249,249,249,248,247,288,248,247,288,249,248,247,288,248,247,288,200,248,248,288,248,288,249,249,249,200,200,129,249,248,247,288,248,248,247,247,247,247,288,288,129,248,248,249,249,248,247,288,200,200,249,249,249,249,249,249,249,200,129,200,200,249,248,247,288,248,247,288,248,247,288,200,129,247,248,247,288,0,249,249,248,248,202,202,202,0,289,289,289,289,289,289,289,202,289,289,289,289,0,202,202,202,202,202,202,202,202,202,202,202,202,202,289,202,289,202,289,202,289,202,202,202,202,202,202,202,202,202,202,289,202,289,202,202,202,202,202,202,289,202,289,202,202,202,202,202,202,202,202,202,202,202,289,202,202,202,202,202,202,202,289,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,289,202,202,202,289,202,289,202,289,202,202,0,0,0,382,137,138,0,382,137,138,138,0,0,344,370,188,370,188,344,370,188,370,188,188,188,370,188,370,188,370,188,370,188,188,188,188,188,370,188,188,370,188,188,188,370,188,188,370,370,188,370,188,370,188,370,188,188,188,188,0,0,371,371,371,371,371,371,371,225,371,225,371,225,371,371,225,371,225,225,225,225,225,225,0,225,225,371,371,371,371,225,225,225,371,225,225,0,0,0,0,0,0,0,0,0,0,0,0,0,258,285,258,285,0,285,285,0,0,199,199,199,258,285,258,285,199,258,285,258,285,258,285,258,285,199,258,285,258,285,199,199,258,285,199,199,199,258,285,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,258,285,258,285,258,285,258,285,199,0,0,0,270,229,229,229,229,229,229,205,205,270,0,270,229,205,270,229,205,268,268,270,229,205,270,229,205,268,268,268,268,270,229,205,270,229,205,268,268,268,268,268,268,270,229,205,270,229,205,268,268,268,268,268,270,229,205,268,268,268,268,270,229,205,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,0,270,229,205,270,229,205,270,229,205,270,229,205,268,268,268,0,0,0,0,0,0,0,0,0,0,372,0,0,372,372,372,372,372,372,372,372,372,372,372,373,372,373,372,372,372,372,372,372,372,373,373,372,373,372,373,372,372,372,373,372,372,372,372,372,373,372,372,372,372,372,372,372,372,372,372,372,373,372,372,372,372,372,372,373,372,372,372,372,372,372,372,372,372,373,372,373,372,373,372,372,0,0,287,0,287,287,287,287,287,287,287,287,287,287,287,0,287,287,287,287,281,281,0,0,0,281,0,0,0,0,0,374,281,374,281,158,374,281,374,281,158,158,158,158,158,158,374,281,158,374,281,158,158,375,374,281,158,374,281,158,158,158,158,158,281,374,281,158,158,158,374,158,158,375,158,158,158,374,158,158,158,374,281,374,281,374,281,374,281,158,158,158,158,158,158,0,0,282,379,0,0,282,0,0,215,377,376,377,282,376,377,282,376,377,376,377,378,215,376,377,215,215,379,376,376,377,378,379,215,376,377,282,376,377,282,282,282,379,376,377,376,377,376,377,282,377,379,215,0,377,376,0,377,376,377,379,379,379,0,0,376,377,376,376,377,282,376,377,282,376,377,282,376,376,377,377,376,376,377,377,286,0,286,286,286,286,286,286,286,286,286,286,0,286,286,286,0,0,286,286,286,305,305,0,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,0,305,305,0,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,0,305,305,305,305,305,305,305,305,305,305,305,305,305,0,306,306,306,306,306,306,306,0,306,306,306,306,0,306,306,306,306,306,306,0,0,0,0,0,259,259,255,180,255,255,255,0,0,259,259,180,180,259,259,259,259,259,259,259,259,259,180,260,180,260,68,259,255,68,259,255,180,68,259,255,68,259,255,259,180,260,259,259,259,259,180,260,259,259,259,259,180,68,259,255,259,255,259,180,260,68,259,259,259,259,259,255,68,259,255,259,259,259,259,259,259,259,259,259,259,180,180,180,180,259,255,180,180,260,259,259,259,259,259,259,68,259,255,259,259,259,259,259,180,260,259,259,259,259,180,260,180,259,259,180,260,259,259,259,259,259,259,259,259,180,260,68,259,255,259,259,68,259,255,68,259,255,68,259,255,259,259,180,180,0,0,0,0,401,402,403,404,401,402,403,404,401,402,403,401,402,403,404,404,380,221,0,262,262,262,262,262,262,0,0,261,261,261,262,261,261,0,261,261,261,261,261,261,261,261,380,262,380,262,380,262,380,262,221,221,221,380,262,380,262,221,380,262,380,262,0,221,380,262,221,262,262,380,262,221,0,221,0,221,221,221,221,0,221,0,221,221,221,0,380,262,380,262,380,262,380,262,262,221,221,221,262,221,0,173,261,173,0,262,262,262,262,262,262,0,0,261,261,261,262,173,173,173,261,261,261,261,261,261,261,261,261,261,261,173,261,173,261,173,261,173,0,261,173,261,173,261,173,261,173,261,173,261,173,0,261,173,261,173,261,173,261,173,52,0,173,52,226,173,173,173,0,0,226,52,52,226,52,226,226,52,226,226,52,52,52,52,226,226,226,52,52,226,226,52,52,52,52,226,0,0,173,0,262,262,262,262,262,262,0,0,261,261,261,262,173,173,173,261,261,261,261,261,261,261,261,261,261,241,241,0,241,241,241,0,241],"fc":[40,116,304,470,556,578,585,586,587,588,905,907,911,914,915,969,970,1010,1011,1134,1142,1143,1144,1145,1282,1289,1292,1301,1302,1480,1481,1483,1484,1485,1502,1510,1511,1516,1527,1529,1532,1533,1534,1542,1560,1570,1571,1588,1589,1632,1633,1636,1637,1640,1714,1717,1781,1782,1783,1987,1988,1993,1996,1997,2046,2048,2050,2068,2069,2102,2109,2140,2186,2222,2223,2227,2252,2260,2265,2266,2267,2268,2269,2270,2281,2282,2284,2286,2289,2413,2421,2551,2585,2605,2612,2674,2709,2790,2816,2873,3162,3222,3223,3388,3389,3467,3578,3594,3821,3941,3942,3946,3992,4585,4602,4621,4745,4790,4827,4828,4829,4841,5497,5511,5514,5515,5516,5521,5522,5523,5529,5530,5531,5534,5535,5536,5537,5538,5539,5541,5542,5562,5563,5564,5565,5566,5567,5568,5580,5583,5637,5640,5867,5906,5971,6001,6002,6009,6126,6194,6259,6260,6412,6562,7072,7073,7097,7117,7118,7268,7277,7310,7313,7488,7489,7491,7492,7504,7505,7506,7507,7508,7509,7623,7624,7646,7718,7723,7726,7728,7768,7772,7773,7795,7799,7802,7907,7908,7909,7923,7934,7935,7936,7937,7952,7958,7964,7993,7994,7995,7996,7999,8000,8016,8017,8022,8027,8037,8056],"p":[[3,"Color",0],[15,"u8"],[3,"FourByteTag",0],[3,"GrDirectContext",8294],[3,"RCHandle",0],[3,"GrRecordingContext",8294],[15,"bool"],[6,"OpBuilder",0],[6,"Path",6168],[4,"PathOp",0],[3,"SkOpBuilder",8294],[3,"Handle",0],[3,"GrGLExtensions",8294],[15,"str"],[8,"AsRef",8295],[3,"V2",0],[3,"V3",0],[3,"V4",0],[3,"IVector",0],[3,"ISize",0],[3,"Point",0],[6,"Vector",0],[3,"Size",0],[3,"Point3",0],[6,"PathBuilder",0],[3,"Rect",0],[6,"scalar",0],[3,"SkPathBuilder",8294],[3,"SkPath",8294],[8,"Into",8295],[4,"PathDirection",0],[4,"Option",8296],[15,"usize"],[4,"AddPathMode",6168],[3,"Matrix",5811],[15,"slice"],[3,"RRect",6959],[3,"Pixmap",0],[4,"c_void",8297],[3,"IRect",0],[15,"i32"],[3,"SkYUVAPixmapInfo_SupportedDataTypes",8294],[3,"ColorChannelFlag",0],[3,"SurfacePropsFlags",0],[6,"Bitmap",0],[3,"SkBitmap",8294],[6,"ImageInfo",0],[6,"TextBlobBuilder",0],[6,"Font",4157],[6,"GlyphId",0],[3,"SkTextBlobBuilder",8294],[6,"YUVAPixmapInfo",8221],[3,"SkYUVAPixmaps",8294],[3,"SkRuntimeEffect",8294],[3,"SkPaint",8294],[15,"f32"],[3,"SkImageFilter",8294],[6,"Region",6812],[4,"AlphaType",0],[6,"ColorInfo",0],[3,"SkColorInfo",8294],[3,"SkImageInfo",8294],[3,"SkImage",8294],[3,"SkOrderedFontMgr",8294],[6,"FontMgr",0],[3,"SkPDF_AttributeList",8294],[3,"SkVertices",8294],[3,"Bone",7907],[15,"never"],[3,"Sk3DView",8294],[3,"RefHandle",0],[3,"Canvas",3322],[3,"SkStrokeRec",8294],[6,"Paint",6110],[6,"Picture",0],[3,"SkPicture",8294],[3,"SkDrawable",8294],[6,"MaskFilter",0],[3,"SkMaskFilter",8294],[4,"SkPathBuilder_ArcSize",8294],[4,"ArcSize",6168],[15,"i64"],[6,"Blender",0],[3,"ArithmeticFPInputs",5656],[3,"SkPathEffect",8294],[3,"DashInfo",6476],[3,"Color4f",0],[15,"array"],[4,"BlendMode",0],[6,"Data",0],[3,"SkData",8294],[6,"DirectContext",4576],[3,"GrBackendFormat",8294],[4,"Format",5031],[6,"Enum",5031],[6,"Image",5482],[6,"ImageFilter",5606],[3,"SkString",8294],[6,"DataTable",0],[3,"SkDataTable",8294],[3,"CStr",8298],[8,"Copy",8299],[3,"skgpu_MutableTextureState",8294],[4,"BackendApi",4576],[3,"GrBackendRenderTarget",8294],[4,"BackendAPI",4576],[3,"GrBackendDrawableInfo",8294],[3,"GrBackendTexture",8294],[6,"SurfaceCharacterization",0],[6,"BackendFormat",4576],[3,"SkSurfaceCharacterization",8294],[3,"SkPictureRecorder",8294],[6,"BBHFactory",0],[15,"u32"],[4,"BlurStyle",0],[4,"TileMode",0],[3,"SkVertices_Builder",8294],[6,"BoneIndices",7907],[6,"BoneWeights",7907],[6,"TextBlob",0],[3,"SkRegion",8294],[3,"SkTypeface",8294],[3,"SkTextBlob",8294],[4,"ColorType",0],[6,"DeferredDisplayListRecorder",0],[3,"SkDeferredDisplayListRecorder",8294],[3,"SkSurface",8294],[4,"PaintCap",0],[6,"Child",7060],[3,"RGB",0],[3,"HSV",0],[3,"ColorSpacePrimaries",0],[3,"ColorSpaceTransferFn",0],[3,"XYZD50Hash",0],[4,"YUVColorSpace",0],[4,"ColorChannel",0],[4,"FilterMode",0],[4,"MipmapMode",0],[3,"CubicMap",0],[4,"TextEncoding",0],[3,"M44",0],[4,"CodecResult",0],[4,"BlendModeCoeff",0],[4,"ClipOp",0],[4,"FontHinting",0],[4,"PaintStyle",0],[3,"RSXform",0],[4,"PaintJoin",0],[4,"PixelGeometry",0],[3,"SurfaceProps",0],[3,"DateTime",0],[4,"PathFillType",0],[4,"PathVerb",0],[4,"CoverageMode",0],[4,"TextureCompressionType",0],[4,"EncodedImageFormat",0],[3,"FontArguments",4226],[6,"Typeface",7643],[4,"Ordering",8300],[6,"ColorFilter",3935],[6,"ColorSpace",0],[4,"RegionOp",6812],[6,"PathEffect",6476],[3,"SkColorFilter",8294],[3,"SkYUVAPixmapInfo",8294],[3,"SkYUVAInfo",8294],[6,"FontTableTag",7643],[6,"FontStyleSet",0],[3,"SkRuntimeEffect_Uniform",8294],[3,"SkFontStyleSet",8294],[3,"SkFontMgr",8294],[3,"SkFont",8294],[4,"DataType",8161],[3,"SkPDF_Metadata",8294],[4,"Renderable",4576],[3,"Borrows",0],[3,"SkColorSpace",8294],[8,"NativeFlattenable",0],[6,"DeferredDisplayList",0],[6,"Vertices",7907],[3,"SkCustomTypefaceBuilder",8294],[3,"SkDynamicMemoryWStream",8294],[3,"SkStreamAsset",8294],[6,"PixelRef",0],[3,"SkPixelRef",8294],[3,"SkDrawable_GpuDrawHandler",8294],[6,"BackendDrawableInfo",4576],[3,"SamplingOptions",7266],[4,"Edging",4157],[3,"Vec",8301],[6,"ImageGenerator",0],[3,"SkImageGenerator",8294],[8,"IntoIterator",8302],[3,"GrGLInterface",8294],[6,"Extensions",5031],[3,"String",8303],[8,"Iterator",8304],[4,"MapDirection",5606],[6,"StrokeRec",7375],[6,"Uniform",7060],[6,"Drawable",4139],[3,"Flags",7156],[3,"FlushInfo",4576],[4,"SemaphoresSubmitted",4576],[4,"BackendSurfaceAccess",7438],[6,"MutableTextureState",4576],[3,"Formatter",8305],[6,"Result",8305],[3,"TextBlobRun",0],[3,"Error",8305],[4,"Result",8306],[3,"Iter",0],[3,"FontStyle",4468],[3,"SkShader",8294],[6,"OrderedFontMgr",7718],[6,"RecordingContext",4576],[6,"BackendTexture",4576],[4,"SurfaceOrigin",4576],[6,"BackendRenderTarget",4576],[15,"char"],[6,"YUVAInfo",8077],[3,"SkPathMeasure",8294],[3,"SkContourMeasureIter",8294],[4,"BitDepth",5744],[6,"Shader",7325],[6,"YUVAPixmaps",8221],[4,"MipMapped",4576],[6,"YUVABackendTextures",4576],[4,"BackendHandleAccess",7438],[3,"SkContourMeasure",8294],[3,"MatrixFlags",4005],[3,"SkColorMatrix",8294],[3,"FramebufferInfo",5031],[3,"TextureInfo",5031],[8,"Hasher",8307],[3,"HighContrastConfig",5453],[3,"DirectContextId",4576],[3,"SkRuntimeEffect_Child",8294],[15,"u16"],[4,"Protected",4576],[6,"SupportedDataTypes",8258],[3,"Iter",8308],[3,"IterNames",8308],[4,"GradientShaderColors",5270],[3,"Flags",5270],[3,"Interpolation",5270],[4,"ChildPtr",7060],[3,"Options",7060],[6,"RuntimeEffect",7060],[4,"CachingHint",5482],[4,"ApplyPerspectiveClip",5811],[6,"Unichar",0],[3,"MatrixFlags",6511],[3,"GrYUVABackendTextureInfo",8294],[4,"VertexMode",7907],[3,"SkFlattenable",8294],[3,"GrYUVABackendTextures",8294],[4,"InitStyle",7375],[3,"BuilderFlags",7907],[6,"Builder",7907],[4,"PlaneConfig",8161],[4,"Subsampling",8077],[4,"EncodedOrigin",3667],[3,"SkTextBlob_Iter",8294],[6,"Interface",5031],[3,"ContextOptions",4952],[8,"FnMut",8309],[6,"Surface",7438],[3,"Budgeted",4576],[4,"ContentChangeMode",7438],[4,"Style",6455],[3,"Duration",8310],[6,"c_void",8311],[8,"Pixel",0],[6,"ColorMatrix",3976],[6,"U8CPU",8294],[6,"PMColor",0],[3,"ResourceCacheLimits",4576],[3,"ResourceCacheUsage",4576],[3,"SegmentMask",6168],[4,"SerializeBehavior",7643],[4,"TypefaceGlyph",7718],[3,"FontMetrics",4318],[6,"GPUDrawHandler",4151],[4,"Style",7375],[4,"PathEncoding",7803],[4,"Mode",7625],[4,"ChildType",7060],[4,"Type",7156],[3,"TypeId",8312],[6,"TypefaceId",7643],[8,"ConditionallySend",0],[3,"Sendable",0],[3,"Axis",4443],[3,"Coordinate",4298],[3,"TopLayerPixels",3322],[3,"SaveLayerFlags",3322],[3,"OwnedCanvas",3322],[3,"SaveLayerRec",3322],[4,"GlyphPositions",3322],[4,"PointMode",3322],[4,"SrcRectConstraint",3322],[3,"AutoRestoredCanvas",3322],[3,"Lattice",3634],[3,"ShadowFlags",7824],[4,"Align",7887],[4,"RectType",3634],[3,"Codec",3667],[3,"Options",3667],[3,"FrameInfo",3667],[4,"SelectionPolicy",3667],[4,"ZeroInitialized",3667],[4,"ScanlineOrder",3667],[8,"Read",8313],[3,"BmpDecoder",3667],[3,"GifDecoder",3667],[3,"IcoDecoder",3667],[3,"JpegDecoder",3667],[3,"PngDecoder",3667],[3,"WbmpDecoder",3667],[6,"ContourMeasure",4005],[6,"ContourMeasureIter",4005],[3,"Document",4104],[3,"Open",4121],[3,"OnPage",4121],[8,"Debug",8305],[3,"VariationPosition",4226],[3,"Palette",4226],[3,"Override",4277],[3,"Flags",4318],[3,"Weight",4468],[3,"Width",4468],[4,"Slant",4468],[3,"DriverBugWorkarounds",4576],[6,"BackendSurfaceMutableState",4576],[6,"YUVABackendTextureInfo",4576],[4,"Enable",4952],[4,"ShaderCacheStrategy",4952],[3,"BackendState",5031],[4,"Standard",5031],[3,"SurfaceInfo",5031],[6,"UInt",5031],[4,"InvertStyle",5434],[3,"CubicResampler",5482],[3,"CropRect",5656],[4,"Dither",5656],[4,"Downsample",5767],[3,"Options",5767],[8,"Write",8313],[3,"TypeMask",5811],[4,"ScaleToFit",5811],[4,"Member",5811],[4,"AffineMember",5811],[4,"Verb",6168],[3,"Iter",6168],[3,"RawIter",6168],[6,"PathMeasure",6511],[3,"StructureElementNode",6623],[6,"AttributeList",6623],[3,"Metadata",6623],[6,"PictureRecorder",6678],[3,"FilterFlag",6685],[3,"Options",6685],[3,"Comment",6685],[3,"Iterator",6812],[3,"Cliperator",6812],[3,"Spanerator",6812],[4,"Type",6959],[4,"Corner",6959],[3,"FilterOptions",7266],[3,"GradientInfo",7325],[3,"Flags",7548],[3,"Canvas",7548],[3,"LocalizedString",7643],[6,"LocalizedStringsIter",7643],[3,"Patch3D",7718],[3,"Camera3D",7718],[6,"View3D",7718],[6,"CustomTypefaceBuilder",7718],[4,"Siting",8077],[8,"Scalar",0],[6,"SamplingMode",7266],[8,"Scalars",0],[8,"Contains",0],[8,"Flattenable",0],[8,"QuickReject",0],[8,"RoundOut",0],[6,"Vector3",0],[6,"Color3f",0],[4,"AutoCanvasRestore",3322],[8,"SetMatrix",3322],[8,"Decoder",3667],[6,"DisposalMethod",3926],[6,"Blend",3926],[6,"HueMethod",5399],[6,"ColorSpace",5399],[6,"InPremul",5399],[6,"AlphaOption",5767],[8,"Combine",6812],[8,"Intersects",6812],[8,"PointerWrapper",8057],[8,"ValueWrapper",8057],[8,"NativeTransmutableWrapper",8057],[8,"RefWrapper",8057]]},\
"slotmap":{"doc":"slotmap","t":"DDDIDDDDLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDDDDNDDNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDDDDNDDNDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DefaultKey","DenseSlotMap","HopSlotMap","Key","KeyData","SecondaryMap","SlotMap","SparseSecondaryMap","as_ffi","basic","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","data","data","default","default","default","default","default","default","default","dense","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ffi","from_iter","from_iter","hash","hash","hop","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_null","new_key_type","null","partial_cmp","partial_cmp","secondary","sparse_secondary","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Drain","IntoIter","Iter","IterMut","Keys","SlotMap","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","DenseSlotMap","Drain","IntoIter","Iter","IterMut","Keys","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","Drain","HopSlotMap","IntoIter","Iter","IterMut","Keys","Values","ValuesMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","contains_key","drain","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert_with_key","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","keys","len","new","next","next","next","next","next","next","next","remove","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_key","with_key","Drain","Entry","IntoIter","Iter","IterMut","Keys","Occupied","OccupiedEntry","SecondaryMap","Vacant","VacantEntry","Values","ValuesMut","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","contains_key","drain","drop","entry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","key","key","key","keys","len","new","next","next","next","next","next","next","next","or_default","or_insert","or_insert_with","remove","remove","remove_entry","retain","set_capacity","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_set_capacity","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","Drain","Entry","IntoIter","Iter","IterMut","Keys","Occupied","OccupiedEntry","SparseSecondaryMap","Vacant","VacantEntry","Values","ValuesMut","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","contains_key","drain","drop","entry","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get","get_disjoint_mut","get_disjoint_unchecked_mut","get_mut","get_mut","get_unchecked","get_unchecked_mut","insert","insert","insert","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","is_empty","iter","iter_mut","key","key","key","keys","len","new","next","next","next","next","next","next","next","or_default","or_insert","or_insert_with","remove","remove","remove_entry","reserve","retain","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values_mut","with_capacity","with_capacity_and_hasher","with_hasher"],"q":[[0,"slotmap"],[150,"slotmap::basic"],[275,"slotmap::dense"],[400,"slotmap::hop"],[525,"slotmap::secondary"],[679,"slotmap::sparse_secondary"],[835,"core::clone"],[836,"core::hash"],[837,"core::cmp"],[838,"core::default"],[839,"core::cmp"],[840,"core::marker"],[841,"core::fmt"],[842,"core::fmt"],[843,"core::result"],[844,"core::any"],[845,"core::ops::function"],[846,"core::ops::function"],[847,"std::collections::hash::map"]],"d":["The default slot map key type.","Dense slot map, storage with stable unique keys.","Hop slot map, storage with stable unique keys.","Key used to access stored values in a slot map.","The actual data stored in a <code>Key</code>.","Secondary map, associate data with previously stored …","Slot map, storage with stable unique keys.","Sparse secondary map, associate data with previously …","Returns the key data as a 64-bit integer. No guarantees …","Contains the slot map implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the <code>KeyData</code> stored in this key.","","","","","","","","","Contains the dense slot map implementation.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Iff <code>value</code> is a value received from <code>k.as_ffi()</code>, returns a …","","","","","Contains the faster iteration, slower insertion/removal …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Checks if a key is null. There is only a single null key, …","A helper macro to create new key types. If you use a new …","Creates a new key that is always invalid and distinct from …","","","Contains the secondary map implementation.","Contains the sparse secondary map implementation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A draining iterator for <code>SlotMap</code>.","An iterator that moves key-value pairs out of a <code>SlotMap</code>.","An iterator over the key-value pairs in a <code>SlotMap</code>.","A mutable iterator over the key-value pairs in a <code>SlotMap</code>.","An iterator over the keys in a <code>SlotMap</code>.","Slot map, storage with stable unique keys.","An iterator over the values in a <code>SlotMap</code>.","A mutable iterator over the values in a <code>SlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>SlotMap</code> can hold without","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Constructs a new, empty <code>SlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>SlotMap</code> with the given capacity.","Creates an empty <code>SlotMap</code> with the given capacity and a …","Constructs a new, empty <code>SlotMap</code> with a custom key type.","Dense slot map, storage with stable unique keys.","A draining iterator for <code>DenseSlotMap</code>.","An iterator that moves key-value pairs out of a …","An iterator over the key-value pairs in a <code>DenseSlotMap</code>.","A mutable iterator over the key-value pairs in a …","An iterator over the keys in a <code>DenseSlotMap</code>.","An iterator over the values in a <code>DenseSlotMap</code>.","A mutable iterator over the values in a <code>DenseSlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>DenseSlotMap</code> can hold …","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Construct a new, empty <code>DenseSlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>DenseSlotMap</code> with the given capacity.","Creates an empty <code>DenseSlotMap</code> with the given capacity and …","Constructs a new, empty <code>DenseSlotMap</code> with a custom key …","A draining iterator for <code>HopSlotMap</code>.","Hop slot map, storage with stable unique keys.","An iterator that moves key-value pairs out of a <code>HopSlotMap</code>.","An iterator over the key-value pairs in a <code>HopSlotMap</code>.","A mutable iterator over the key-value pairs in a <code>HopSlotMap</code>…","An iterator over the keys in a <code>HopSlotMap</code>.","An iterator over the values in a <code>HopSlotMap</code>.","A mutable iterator over the values in a <code>HopSlotMap</code>.","","","","","","","","","","","","","","","Returns the number of elements the <code>HopSlotMap</code> can hold …","Clears the slot map. Keeps the allocated memory for reuse.","","","","","","","","","Returns <code>true</code> if the slot map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the slot map. Returns a unique key …","Inserts a value given by <code>f</code> into the slot map. The key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns if the slot map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the slot map.","Constructs a new, empty <code>HopSlotMap</code>.","","","","","","","","Removes a key from the slot map, returning the value at …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>HopSlotMap</code> with the given capacity.","Creates an empty <code>HopSlotMap</code> with the given capacity and a …","Constructs a new, empty <code>HopSlotMap</code> with a custom key type.","A draining iterator for <code>SecondaryMap</code>.","A view into a single entry in a <code>SecondaryMap</code>, which may …","An iterator that moves key-value pairs out of a …","An iterator over the key-value pairs in a <code>SecondaryMap</code>.","A mutable iterator over the key-value pairs in a …","An iterator over the keys in a <code>SecondaryMap</code>.","An occupied entry.","A view into a occupied entry in a <code>SecondaryMap</code>. It is part …","Secondary map, associate data with previously stored …","A vacant entry.","A view into a vacant entry in a <code>SecondaryMap</code>. It is part …","An iterator over the values in a <code>SecondaryMap</code>.","A mutable iterator over the values in a <code>SecondaryMap</code>.","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the <code>SecondaryMap</code> can hold …","Clears the secondary map. Keeps the allocated memory for …","Returns <code>true</code> if the secondary map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","Gets the given key’s corresponding <code>Entry</code> in the map for …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the secondary map at the given <code>key</code>. …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the <code>VacantEntry</code>’s key, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Converts the <code>OccupiedEntry</code> into a mutable reference to the …","Returns if the secondary map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Returns this entry’s key.","Gets the key that would be used when inserting a value …","Returns this entry’s key.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the secondary map.","Constructs a new, empty <code>SecondaryMap</code>.","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Removes a key from the secondary map, returning the value …","Takes the value out of the entry, and returns it.","Removes the entry from the slot map and returns the key …","Retains only the elements specified by the predicate.","Sets the capacity of the <code>SecondaryMap</code> to <code>new_capacity</code>, if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to set the capacity of the <code>SecondaryMap</code> to …","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>SecondaryMap</code> with the given capacity of …","A draining iterator for <code>SparseSecondaryMap</code>.","A view into a single entry in a <code>SparseSecondaryMap</code>, which …","An iterator that moves key-value pairs out of a …","An iterator over the key-value pairs in a …","A mutable iterator over the key-value pairs in a …","An iterator over the keys in a <code>SparseSecondaryMap</code>.","An occupied entry.","A view into a occupied entry in a <code>SparseSecondaryMap</code>. It …","Sparse secondary map, associate data with previously …","A vacant entry.","A view into a vacant entry in a <code>SparseSecondaryMap</code>. It is …","An iterator over the values in a <code>SparseSecondaryMap</code>.","A mutable iterator over the values in a <code>SparseSecondaryMap</code>.","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the <code>SparseSecondaryMap</code> can …","Clears the secondary map. Keeps the allocated memory for …","Returns <code>true</code> if the secondary map contains <code>key</code>.","Clears the slot map, returning all key-value pairs in …","","Gets the given key’s corresponding <code>Entry</code> in the map for …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Returns mutable references to the values corresponding to …","Returns mutable references to the values corresponding to …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Returns a reference to the value corresponding to the key …","Returns a mutable reference to the value corresponding to …","Inserts a value into the secondary map at the given <code>key</code>. …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the <code>VacantEntry</code>’s key, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Converts the <code>OccupiedEntry</code> into a mutable reference to the …","Returns if the secondary map is empty.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Returns this entry’s key.","Gets the key that would be used when inserting a value …","Returns this entry’s key.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the secondary map.","Constructs a new, empty <code>SparseSecondaryMap</code>.","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Removes a key from the secondary map, returning the value …","Takes the value out of the entry, and returns it.","Removes the entry from the slot map and returns the key …","Reserves capacity for at least <code>additional</code> more slots in the","Retains only the elements specified by the predicate.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary …","Creates an empty <code>SparseSecondaryMap</code> with the given …","Creates an empty <code>SparseSecondaryMap</code> with the given …","Creates an empty <code>SparseSecondaryMap</code> which will use the …"],"i":[0,0,0,0,0,0,0,0,1,0,5,6,7,8,10,1,11,5,6,7,8,10,1,11,5,6,7,8,10,1,11,5,6,7,8,10,1,11,1,11,4,11,5,6,7,8,10,1,11,0,8,10,1,11,8,10,1,11,8,8,10,10,5,6,7,8,10,1,11,5,6,7,8,10,1,11,11,1,8,10,1,11,0,5,6,7,8,10,5,6,7,8,10,5,6,7,8,10,1,11,5,5,5,6,6,6,7,7,7,8,8,8,10,10,10,4,0,4,1,11,0,0,5,6,7,8,10,1,11,5,6,7,8,10,1,11,5,6,7,8,10,1,11,5,6,7,8,10,1,11,0,0,0,0,0,0,0,0,30,26,27,31,28,29,32,30,26,27,31,28,29,32,5,5,26,27,28,29,26,27,28,29,5,5,30,30,26,27,31,28,29,32,30,26,27,31,28,29,32,5,5,5,5,5,5,5,5,30,26,27,31,28,29,32,30,26,27,31,28,29,32,5,5,5,5,5,5,30,26,27,31,28,29,32,5,5,5,30,26,27,31,28,29,32,26,27,28,29,30,26,27,31,28,29,32,30,26,27,31,28,29,32,5,30,26,27,31,28,29,32,5,5,5,5,5,0,0,0,0,0,0,0,0,41,37,38,42,39,40,43,41,37,38,42,39,40,43,6,6,37,38,39,40,37,38,39,40,6,6,41,41,37,38,42,39,40,43,41,37,38,42,39,40,43,6,6,6,6,6,6,6,6,41,37,38,42,39,40,43,41,37,38,42,39,40,43,6,6,6,6,6,6,41,37,38,42,39,40,43,6,6,6,41,37,38,42,39,40,43,37,38,39,40,41,37,38,42,39,40,43,41,37,38,42,39,40,43,6,41,37,38,42,39,40,43,6,6,6,6,6,0,0,0,0,0,0,0,0,48,44,45,49,46,47,50,48,44,45,49,46,47,50,7,7,44,45,46,47,44,45,46,47,7,7,48,48,44,45,49,46,47,50,48,44,45,49,46,47,50,7,7,7,7,7,7,7,7,48,44,45,49,46,47,50,48,44,45,49,46,47,50,7,7,7,7,7,7,48,44,45,49,46,47,50,7,7,7,48,44,45,49,46,47,50,44,45,46,47,48,44,45,49,46,47,50,48,44,45,49,46,47,50,7,48,44,45,49,46,47,50,7,7,7,7,7,0,0,0,0,0,0,51,0,0,51,0,0,0,51,53,54,51,52,55,56,57,58,59,60,53,54,51,52,55,56,57,58,59,60,8,8,8,8,52,8,53,54,51,52,55,56,57,58,59,60,53,54,51,52,55,56,57,58,59,60,8,53,8,8,8,53,8,8,8,53,54,53,54,51,52,55,56,57,58,59,60,52,55,56,57,58,59,60,53,8,8,8,53,54,51,8,8,8,52,55,56,57,58,59,60,51,51,51,8,53,53,8,8,52,55,56,57,58,59,60,53,54,51,52,55,56,57,58,59,60,53,54,51,52,55,56,57,58,59,60,8,53,54,51,52,55,56,57,58,59,60,8,8,8,0,0,0,0,0,0,61,0,0,61,0,0,0,61,63,64,61,62,65,66,67,68,69,70,63,64,61,62,65,66,67,68,69,70,10,10,10,10,62,10,63,64,61,62,65,66,67,68,69,70,63,64,61,62,65,66,67,68,69,70,10,63,10,10,10,63,10,10,10,63,64,63,64,61,62,65,66,67,68,69,70,62,65,66,67,68,69,70,63,10,10,10,63,64,61,10,10,10,62,65,66,67,68,69,70,61,61,61,10,63,63,10,10,62,65,66,67,68,69,70,63,64,61,62,65,66,67,68,69,70,63,64,61,62,65,66,67,68,69,70,10,63,64,61,62,65,66,67,68,69,70,10,10,10,10,10],"f":[0,0,0,0,0,0,0,0,[1,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[[0,[3,4]],3]]],[[5,[[0,[3,4]],3]]]],[[[6,[[0,[3,4]],3]]],[[6,[[0,[3,4]],3]]]],[[[7,[[0,[3,4]],3]]],[[7,[[0,[3,4]],3]]]],[[[8,[[0,[3,4]],3]]],[[8,[[0,[3,4]],3]]]],[[[10,[[0,[3,4]],3,[0,[3,9]]]]],[[10,[[0,[3,4]],3,[0,[3,9]]]]]],[1,1],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],12],[[11,11],12],[[],1],[11,1],[[],[[5,[4]]]],[[],[[6,[4]]]],[[],[[7,[4]]]],[[],[[8,[4]]]],[[],[[10,[4,[0,[9,13]]]]]],[[],1],[[],11],0,[[[8,[4,14]],[8,[4,14]]],15],[[[10,[4,14,9]],[10,[4,14,9]]],15],[[1,1],15],[[11,11],15],[[],15],[[],15],[[],15],[[],15],[[[8,[4]],16]],[[[8,[4,17]],16]],[[[10,[4,17,9]],16]],[[[10,[4,9]],16]],[[[5,[[0,[18,4]],18]],19],20],[[[6,[[0,[18,4]],18]],19],20],[[[7,[[0,[18,4]],18]],19],20],[[[8,[[0,[18,4]],18]],19],20],[[[10,[[0,[18,4]],18,[0,[18,9]]]],19],20],[[1,19],20],[[11,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,11],[2,1],[16,[[8,[4]]]],[16,[[10,[4,[0,[9,13]]]]]],[[1,21]],[[11,21]],0,[[[5,[4]],4]],[[[6,[4]],4]],[[[7,[4]],4]],[[[8,[4]],4]],[[[10,[4,9]],4]],[[[5,[4]],4]],[[[6,[4]],4]],[[[7,[4]],4]],[[[8,[4]],4]],[[[10,[4,9]],4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]]],[[[5,[4]]]],[[[5,[4]]]],[[[6,[4]]]],[[[6,[4]]]],[[[6,[4]]]],[[[7,[4]]]],[[[7,[4]]]],[[[7,[4]]]],[[[8,[4]]]],[[[8,[4]]]],[[[8,[4]]]],[[[10,[4,9]]]],[[[10,[4,9]]]],[[[10,[4,9]]]],[[],15],0,[[]],[[1,1],[[22,[12]]]],[[11,11],[[22,[12]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],25],[[[5,[4]]]],[[[26,[[0,[3,4]],3]]],[[26,[[0,[3,4]],3]]]],[[[27,[[0,[3,4]],3]]],[[27,[[0,[3,4]],3]]]],[[[28,[[0,[3,4]],3]]],[[28,[[0,[3,4]],3]]]],[[[29,[[0,[3,4]],3]]],[[29,[[0,[3,4]],3]]]],[[]],[[]],[[]],[[]],[[[5,[4]],4],15],[[[5,[4]]],[[30,[4]]]],[[[30,[4]]]],[[[30,[[0,[18,4]],18]],19],20],[[[26,[[0,[18,4]],18]],19],20],[[[27,[[0,[18,4]],18]],19],20],[[[31,[[0,[18,4]],18]],19],20],[[[28,[[0,[18,4]],18]],19],20],[[[29,[[0,[18,4]],18]],19],20],[[[32,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]],4],22],[[[5,[4]],[33,[4]]],[[22,[33]]]],[[[5,[4]],[33,[4]]],33],[[[5,[4]],4],22],[[[5,[4]],4]],[[[5,[4]],4]],[[[5,[4]]],4],[[[5,[4]],34],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],15],[[[5,[4]]],[[27,[4]]]],[[[5,[4]]],[[31,[4]]]],[[[5,[4]]],[[28,[4]]]],[[[5,[4]]],25],[[],[[5,[11]]]],[[[30,[4]]],22],[[[26,[4]]],22],[[[27,[4]]],22],[[[31,[4]]],22],[[[28,[4]]],[[22,[4]]]],[[[29,[4]]],22],[[[32,[4]]],22],[[[5,[4]],4],22],[[[5,[4]],25]],[[[5,[4]],35]],[[[30,[4]]]],[[[26,[4]]]],[[[27,[4]]]],[[[31,[4]]]],[[[28,[4]]]],[[[29,[4]]]],[[[32,[4]]]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[5,[4]],25],[[23,[36]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[5,[4]]],[[29,[4]]]],[[[5,[4]]],[[32,[4]]]],[25,[[5,[11]]]],[25,[[5,[4]]]],[[],[[5,[4]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[4]]],25],[[[6,[4]]]],[[[37,[3,3]]],[[37,[3,3]]]],[[[38,[[0,[3,4]],3]]],[[38,[[0,[3,4]],3]]]],[[[39,[[0,[3,4]],3]]],[[39,[[0,[3,4]],3]]]],[[[40,[[0,[3,4]],3]]],[[40,[[0,[3,4]],3]]]],[[]],[[]],[[]],[[]],[[[6,[4]],4],15],[[[6,[4]]],[[41,[4]]]],[[[41,[4]]]],[[[41,[[0,[18,4]],18]],19],20],[[[37,[18,18]],19],20],[[[38,[[0,[18,4]],18]],19],20],[[[42,[[0,[18,4]],18]],19],20],[[[39,[[0,[18,4]],18]],19],20],[[[40,[[0,[18,4]],18]],19],20],[[[43,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[4]],4],22],[[[6,[4]],[33,[4]]],[[22,[33]]]],[[[6,[4]],[33,[4]]],33],[[[6,[4]],4],22],[[[6,[4]],4]],[[[6,[4]],4]],[[[6,[4]]],4],[[[6,[4]],34],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[4]]],15],[[[6,[4]]],[[38,[4]]]],[[[6,[4]]],[[42,[4]]]],[[[6,[4]]],[[39,[4]]]],[[[6,[4]]],25],[[],[[6,[11]]]],[[[41,[4]]],22],[[[37,[4]]],22],[[[38,[4]]],22],[[[42,[4]]],22],[[[39,[4]]],[[22,[4]]]],[[[40,[4]]],22],[[[43,[4]]],22],[[[6,[4]],4],22],[[[6,[4]],25]],[[[6,[4]],35]],[[[41,[4]]]],[[[37,[4]]]],[[[38,[4]]]],[[[42,[4]]]],[[[39,[4]]]],[[[40,[4]]]],[[[43,[4]]]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[6,[4]],25],[[23,[36]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[6,[4]]],[[40,[4]]]],[[[6,[4]]],[[43,[4]]]],[25,[[6,[11]]]],[25,[[6,[4]]]],[[],[[6,[4]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[4]]],25],[[[7,[4]]]],[[[44,[[0,[3,4]],3]]],[[44,[[0,[3,4]],3]]]],[[[45,[[0,[3,4]],3]]],[[45,[[0,[3,4]],3]]]],[[[46,[[0,[3,4]],3]]],[[46,[[0,[3,4]],3]]]],[[[47,[[0,[3,4]],3]]],[[47,[[0,[3,4]],3]]]],[[]],[[]],[[]],[[]],[[[7,[4]],4],15],[[[7,[4]]],[[48,[4]]]],[[[48,[4]]]],[[[48,[[0,[18,4]],18]],19],20],[[[44,[[0,[18,4]],18]],19],20],[[[45,[[0,[18,4]],18]],19],20],[[[49,[[0,[18,4]],18]],19],20],[[[46,[[0,[18,4]],18]],19],20],[[[47,[[0,[18,4]],18]],19],20],[[[50,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[4]],4],22],[[[7,[4]],[33,[4]]],[[22,[33]]]],[[[7,[4]],[33,[4]]],33],[[[7,[4]],4],22],[[[7,[4]],4]],[[[7,[4]],4]],[[[7,[4]]],4],[[[7,[4]],34],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[4]]],15],[[[7,[4]]],[[45,[4]]]],[[[7,[4]]],[[49,[4]]]],[[[7,[4]]],[[46,[4]]]],[[[7,[4]]],25],[[],[[7,[11]]]],[[[48,[4]]],22],[[[44,[4]]],22],[[[45,[4]]],22],[[[49,[4]]],22],[[[46,[4]]],[[22,[4]]]],[[[47,[4]]],22],[[[50,[4]]],22],[[[7,[4]],4],22],[[[7,[4]],25]],[[[7,[4]],35]],[[[48,[4]]]],[[[44,[4]]]],[[[45,[4]]]],[[[49,[4]]]],[[[46,[4]]]],[[[47,[4]]]],[[[50,[4]]]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[7,[4]],25],[[23,[36]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[7,[4]]],[[47,[4]]]],[[[7,[4]]],[[50,[4]]]],[25,[[7,[11]]]],[25,[[7,[4]]]],[[],[[7,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[51,[4]],34],[[51,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[4]]],25],[[[8,[4]]]],[[[8,[4]],4],15],[[[8,[4]]],[[52,[4]]]],[[[52,[4]]]],[[[8,[4]],4],[[22,[[51,[4]]]]]],[[[53,[[0,[18,4]],18]],19],20],[[[54,[[0,[18,4]],18]],19],20],[[[51,[[0,[18,4]],18]],19],20],[[[52,[[0,[18,4]],18]],19],20],[[[55,[[0,[18,4]],18]],19],20],[[[56,[[0,[18,4]],18]],19],20],[[[57,[[0,[18,4]],18]],19],20],[[[58,[[0,[18,4]],18]],19],20],[[[59,[[0,[18,4]],18]],19],20],[[[60,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[8,[4]],4],22],[[[53,[4]]]],[[[8,[4]],[33,[4]]],[[22,[33]]]],[[[8,[4]],[33,[4]]],33],[[[8,[4]],4],22],[[[53,[4]]]],[[[8,[4]],4]],[[[8,[4]],4]],[[[8,[4]],4],22],[[[53,[4]]]],[[[54,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[53,[4]]]],[[[8,[4]]],15],[[[8,[4]]],[[56,[4]]]],[[[8,[4]]],[[57,[4]]]],[[[53,[4]]],4],[[[54,[4]]],4],[[[51,[4]]],4],[[[8,[4]]],[[58,[4]]]],[[[8,[4]]],25],[[],[[8,[4]]]],[[[52,[4]]],22],[[[55,[4]]],22],[[[56,[4]]],22],[[[57,[4]]],22],[[[58,[4]]],[[22,[4]]]],[[[59,[4]]],22],[[[60,[4]]],22],[[[51,[4,13]]],13],[[[51,[4]]]],[[[51,[4]],34]],[[[8,[4]],4],22],[[[53,[4]]]],[[[53,[4]]]],[[[8,[4]],35]],[[[8,[4]],25]],[[[52,[4]]]],[[[55,[4]]]],[[[56,[4]]]],[[[57,[4]]]],[[[58,[4]]]],[[[59,[4]]]],[[[60,[4]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[8,[4]],25],[[23,[36]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[8,[4]]],[[59,[4]]]],[[[8,[4]]],[[60,[4]]]],[25,[[8,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[61,[4]],34],[[61,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[4,9]]],25],[[[10,[4,9]]]],[[[10,[4,9]],4],15],[[[10,[4,9]]],[[62,[4]]]],[[[62,[4]]]],[[[10,[4,9]],4],[[22,[[61,[4]]]]]],[[[63,[[0,[18,4]],18]],19],20],[[[64,[[0,[18,4]],18]],19],20],[[[61,[[0,[18,4]],18]],19],20],[[[62,[[0,[18,4]],18]],19],20],[[[65,[[0,[18,4]],18]],19],20],[[[66,[[0,[18,4]],18]],19],20],[[[67,[[0,[18,4]],18]],19],20],[[[68,[[0,[18,4]],18]],19],20],[[[69,[[0,[18,4]],18]],19],20],[[[70,[[0,[18,4]],18]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[4,9]],4],22],[[[63,[4]]]],[[[10,[4,9]],[33,[4]]],[[22,[33]]]],[[[10,[4,9]],[33,[4]]],33],[[[10,[4,9]],4],22],[[[63,[4]]]],[[[10,[4,9]],4]],[[[10,[4,9]],4]],[[[10,[4,9]],4],22],[[[63,[4]]]],[[[64,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[63,[4]]]],[[[10,[4,9]]],15],[[[10,[4,9]]],[[66,[4]]]],[[[10,[4,9]]],[[67,[4]]]],[[[63,[4]]],4],[[[64,[4]]],4],[[[61,[4]]],4],[[[10,[4,9]]],[[68,[4]]]],[[[10,[4,9]]],25],[[],[[10,[4,71]]]],[[[62,[4]]],22],[[[65,[4]]],22],[[[66,[4]]],22],[[[67,[4]]],22],[[[68,[4]]],[[22,[4]]]],[[[69,[4]]],22],[[[70,[4]]],22],[[[61,[4,13]]],13],[[[61,[4]]]],[[[61,[4]],34]],[[[10,[4,9]],4],22],[[[63,[4]]]],[[[63,[4]]]],[[[10,[4,9]],25]],[[[10,[4,9]],35]],[[[62,[4]]]],[[[65,[4]]]],[[[66,[4]]]],[[[67,[4]]]],[[[68,[4]]]],[[[69,[4]]]],[[[70,[4]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[10,[4,9]],25],[[23,[36]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[[10,[4,9]]],[[69,[4]]]],[[[10,[4,9]]],[[70,[4]]]],[25,[[10,[4,71]]]],[[25,9],[[10,[4,9]]]],[9,[[10,[4,9]]]]],"c":[],"p":[[3,"KeyData",0],[15,"u64"],[8,"Clone",835],[8,"Key",0],[3,"SlotMap",0],[3,"DenseSlotMap",0],[3,"HopSlotMap",0],[3,"SecondaryMap",0],[8,"BuildHasher",836],[3,"SparseSecondaryMap",0],[3,"DefaultKey",0],[4,"Ordering",837],[8,"Default",838],[8,"PartialEq",837],[15,"bool"],[8,"IntoIterator",839],[8,"Copy",840],[8,"Debug",841],[3,"Formatter",841],[6,"Result",841],[8,"Hasher",836],[4,"Option",842],[4,"Result",843],[3,"TypeId",844],[15,"usize"],[3,"IntoIter",150],[3,"Iter",150],[3,"Keys",150],[3,"Values",150],[3,"Drain",150],[3,"IterMut",150],[3,"ValuesMut",150],[15,"array"],[8,"FnOnce",845],[8,"FnMut",845],[3,"TryReserveError",846],[3,"IntoIter",275],[3,"Iter",275],[3,"Keys",275],[3,"Values",275],[3,"Drain",275],[3,"IterMut",275],[3,"ValuesMut",275],[3,"IntoIter",400],[3,"Iter",400],[3,"Keys",400],[3,"Values",400],[3,"Drain",400],[3,"IterMut",400],[3,"ValuesMut",400],[4,"Entry",525],[3,"Drain",525],[3,"OccupiedEntry",525],[3,"VacantEntry",525],[3,"IntoIter",525],[3,"Iter",525],[3,"IterMut",525],[3,"Keys",525],[3,"Values",525],[3,"ValuesMut",525],[4,"Entry",679],[3,"Drain",679],[3,"OccupiedEntry",679],[3,"VacantEntry",679],[3,"IntoIter",679],[3,"Iter",679],[3,"IterMut",679],[3,"Keys",679],[3,"Values",679],[3,"ValuesMut",679],[3,"RandomState",847]]},\
"taffy":{"doc":"Taffy","t":"CAFAAAAAAAAAEENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNEGLLLLLLLLLLMMMDDSSDDDSSSLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLLLLLLLLLMMMLLLLLDNNNDNEDELLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLNIEGNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCFCCCCCCCCCNEEGNNNNNNENNNNNNNNNNNNNNNSNEENNNNNNNNNNENNNNNNNNNNNNENNEGEGGGEENNNENNNENGNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNDENNMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMLLMMLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSIIISSIIIIIIISFFFKFFKKKKKFFFFFFFFFQIKKKKKKKKKKKK","n":["Taffy","axis","compute_layout","error","geometry","layout","math","node","prelude","style","style_helpers","tree","AbsoluteAxis","AbstractAxis","Block","Horizontal","Inline","Vertical","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","other","other_axis","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ChildIndexOutOfBounds","Err","InvalidChildNode","InvalidInputNode","InvalidParentNode","Ok","TaffyError","TaffyResult","borrow","borrow_mut","fmt","fmt","from","into","to_string","try_from","try_into","type_id","child_count","child_index","parent","Line","MinMax","NONE","NONE","Point","Rect","Size","ZERO","ZERO","ZERO","add","add","auto","auto","auto","auto","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","both_axis_defined","bottom","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","end","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","f32_max","fit_content","fit_content","fit_content","fit_content","fit_content","fit_content","fit_content","fit_content","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_line_index","from_percent","from_percent","from_percent","from_percent","from_percent","from_percent","from_points","from_points","from_points","from_points","from_points","from_points","from_span","get_abs","grid_axis_sum","has_fixed_component","height","horizontal_components","indefinite_span","into","into","into","into","into","into_options","into_origin_zero","is_definite","left","map","map","map","map_height","map_width","max","max_content","max_content","max_content","max_content","max_sizing_function","maybe_apply_aspect_ratio","maybe_set","min","min_content","min_content","min_content","min_content","min_sizing_function","new","new","or","percent","percent","percent","percent","points","points","points","points","resolve_absolutely_positioned_grid_tracks","resolve_definite_grid_lines","resolve_indefinite_grid_tracks","right","start","sum","to_owned","to_owned","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrap_or","vertical_components","width","x","y","zero","zero","zero","zero","zip_map","Cache","ComputeSize","ContentSize","InherentSize","Layout","PeformLayout","RunMode","SizeAndBaselines","SizingMode","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","equivalent","equivalent","first_baselines","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","location","new","order","size","size","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_order","Boxed","Measurable","MeasureFunc","Node","Raw","Taffy","add_child","borrow","borrow","borrow_mut","borrow_mut","cache_mut","child","child_at_index","child_count","child_count","children","children","clear","compute_layout","default","dirty","disable_rounding","enable_rounding","from","from","into","into","is_childless","layout","layout","layout_mut","mark_dirty","measure_node","needs_measure","new","new_leaf","new_leaf_with_measure","new_with_children","parent","remove","remove_child","remove_child_at_index","replace_child_at_index","set_children","set_measure","set_style","style","style","try_from","try_from","try_into","try_into","type_id","type_id","with_capacity","AlignContent","AlignItems","AlignSelf","AvailableSpace","Dimension","Display","FlexDirection","FlexWrap","FromFlex","FromPercent","FromPoints","GridAutoFlow","GridPlacement","GridTrackRepetition","JustifyContent","JustifyItems","JustifySelf","Layout","LayoutTree","LengthPercentage","LengthPercentageAuto","Line","MaxTrackSizingFunction","MinTrackSizingFunction","Node","NonRepeatedTrackSizingFunction","Position","Rect","Size","Style","Taffy","TaffyAuto","TaffyFitContent","TaffyGridLine","TaffyGridSpan","TaffyMaxContent","TaffyMinContent","TaffyZero","TrackSizingFunction","auto","evenly_sized_tracks","fit_content","flex","fr","layout_flexbox","line","max_content","min_content","minmax","percent","points","repeat","span","zero","Absolute","AlignContent","AlignItems","AlignSelf","Auto","Auto","Auto","Auto","AutoFill","AutoFit","AvailableSpace","Baseline","Baseline","Baseline","Baseline","Center","Center","Center","Center","Center","Center","Column","Column","ColumnDense","ColumnReverse","Count","DEFAULT","Definite","Dimension","Display","End","End","End","End","End","End","FitContent","Fixed","Fixed","Flex","FlexDirection","FlexEnd","FlexEnd","FlexEnd","FlexEnd","FlexEnd","FlexEnd","FlexStart","FlexStart","FlexStart","FlexStart","FlexStart","FlexStart","FlexWrap","Fraction","Grid","GridAutoFlow","GridPlacement","GridTrackRepetition","JustifyContent","JustifyItems","JustifySelf","LengthPercentage","LengthPercentageAuto","MaxContent","MaxContent","MaxContent","MaxTrackSizingFunction","MinContent","MinContent","MinContent","MinTrackSizingFunction","NoWrap","NonRepeatedTrackSizingFunction","None","Percent","Percent","Percent","Points","Points","Points","Position","Relative","Repeat","Row","Row","RowDense","RowReverse","Single","SpaceAround","SpaceAround","SpaceBetween","SpaceBetween","SpaceEvenly","SpaceEvenly","Start","Start","Start","Start","Start","Start","Stretch","Stretch","Stretch","Stretch","Stretch","Stretch","Style","TrackSizingFunction","Wrap","WrapReverse","align_content","align_items","align_self","aspect_ratio","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compute_free_space","default","default","default","default","default","default","default","definite_limit","definite_value","definite_value","display","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fit_content","fit_content","fit_content","flex_basis","flex_direction","flex_grow","flex_shrink","flex_wrap","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_flex","from_flex","from_flex","from_line_index","from_percent","from_percent","from_percent","from_percent","from_percent","from_percent","from_percent","from_points","from_points","from_points","from_points","from_points","from_points","from_points","from_points","from_span","gap","grid_auto_columns","grid_auto_flow","grid_auto_rows","grid_column","grid_row","grid_template_columns","grid_template_rows","has_fixed_component","inset","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_option","into_option","is_auto_repetition","is_definite","is_dense","is_flexible","is_intrinsic","is_intrinsic","is_max_content_alike","is_roughly_equal","justify_content","justify_items","justify_self","map_definite_value","margin","max","max_size","max_sizing_function","maybe_set","min","min_size","min_sizing_function","or","or_else","padding","position","primary_axis","resolve_to_option","resolved_percentage_size","resolved_percentage_size","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","unwrap_or","unwrap_or_else","uses_percentage","uses_percentage","AUTO","FromFlex","FromPercent","FromPoints","MAX_CONTENT","MIN_CONTENT","TaffyAuto","TaffyFitContent","TaffyGridLine","TaffyGridSpan","TaffyMaxContent","TaffyMinContent","TaffyZero","ZERO","auto","evenly_sized_tracks","fit_content","fit_content","flex","fr","from_flex","from_line_index","from_percent","from_points","from_span","line","max_content","min_content","minmax","percent","points","repeat","span","zero","ChildIter","LayoutTree","cache_mut","child","child_count","children","is_childless","layout","layout_mut","mark_dirty","measure_node","needs_measure","parent","style"],"q":[[0,"taffy"],[12,"taffy::axis"],[46,"taffy::error"],[64,"taffy::error::TaffyError"],[67,"taffy::geometry"],[234,"taffy::layout"],[310,"taffy::node"],[366,"taffy::prelude"],[420,"taffy::style"],[830,"taffy::style_helpers"],[864,"taffy::tree"],[878,"core::result"],[879,"core::fmt"],[880,"core::fmt"],[881,"alloc::string"],[882,"core::ops::arith"],[883,"core::option"],[884,"core::clone"],[885,"core::default"],[886,"core::cmp"],[887,"core::fmt"],[888,"core::marker"],[889,"core::ops::function"],[890,"alloc::vec"],[891,"core::ops::function"]],"d":["","Axis enums representing CSS Grid axis","Updates the stored layout of the provided <code>node</code> and its …","The Error types produced by Taffy.","Geometric primitives useful for layout","Final and cached data structures that represent the …","Contains numerical helper traits and functions","UI <code>Node</code> types and related data structures.","Commonly used types","A representation of CSS layout properties in Rust, used …","Helper functions which it make it easier to create …","The baseline requirements of any UI Tree so Taffy can …","The simple absolute horizontal and vertical axis","The CSS abstract axis …","The axis in the block dimension, i.e. the vertical axis in …","The horizontal axis","The axis in the inline dimension, i.e. the horizontal axis …","The vertical axis","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the other variant of the enum","Returns the other variant of the enum","","","","","","","","","The parent <code>Node</code> does not have a child at <code>child_index</code>. It …","Contains the error value","The child <code>Node</code> was not found in the <code>Taffy</code> instance.","The supplied <code>Node</code> was not found in the <code>Taffy</code> instance.","The parent <code>Node</code> was not found in the <code>Taffy</code> instance.","Contains the success value","An error that occurs while trying to access or modify a …","The error Taffy generates on invalid operations","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","The total number of children the parent has","The index that was looked up","The parent node whose child was being looked up","An abstract “line”. Represents any type that has a …","Generic struct which holds a “min” value and a “max…","A <code>Size</code> with <code>None</code> width and height","A <code>Point</code> with values (None, None)","A 2-dimensional coordinate.","An axis-aligned UI rectangle","The width and height of a <code>Rect</code>","Creates a new Rect with <code>0.0</code> as all parameters","A <code>Size</code> with zero width and height","A <code>Point</code> with values (0,0), representing the origin","","","Returns a Size where the left, right, top, and bottom …","Returns a Line where both the start and end values are the …","Returns a Size where both the width and height values are …","Returns a Point where both the x and y values are the auto …","","","","","","","","","","","Return true if both components are Some, else false.","This can represent either the y-coordinate of the bottom …","","","","","","","","","","","","","","The end position of a line","","","","","","","","","","","Applies f32_max to each component separately","","Returns a Rect where the left, right, top and bottom …","","Returns a Line where both the start and end values are the …","Returns a Size where both the width and height values are …","","","Returns a Point where both the x and y values are the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a new Rect with <code>Dimension::Percent</code>","","Generates a <code>Size&lt;Dimension&gt;</code> using <code>Dimension::Percent</code> values","","","","Create a new Rect with <code>Dimension::Points</code>","","Generates a <code>Size&lt;Dimension&gt;</code> using <code>Dimension::Points</code> values","","","","Get either the width or height depending on the …","Get either the width or height depending on the …","Determine whether at least one of the components (“min”…","The y extent of the rectangle","Returns a <code>Line&lt;T&gt;</code> representing the left and right …","Resolves the span for an indefinite placement (a placement …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>Size&lt;AvailableSpace&gt;</code> into <code>Size&lt;Option&lt;f32&gt;&gt;</code>","Apply a mapping function if the <code>GridPlacement</code> is a <code>Track</code>. …","Whether the track position is definite in this axis (or …","This can represent either the x-coordinate of the starting …","Applies the function <code>f</code> to the left, right, top, and bottom …","Applies the function <code>f</code> to both the width and height","Applies the function <code>f</code> to both the width and height","Applies the function <code>f</code> to the height","Applies the function <code>f</code> to the width","The value representing the maximum","Returns a Size where the left, right, top, and bottom …","Returns a Line where both the start and end values are the …","Returns a Size where both the width and height values are …","Returns a Point where both the x and y values are the …","Extract the max track sizing function","Applies aspect_ratio (if one is supplied) to the Size:","If passed value is Some then return …","The value representing the minimum","Returns a Size where the left, right, top, and bottom …","Returns a Line where both the start and end values are the …","Returns a Size where both the width and height values are …","Returns a Point where both the x and y values are the …","Extract the min track sizing function","Creates a new Rect","A <code>Size&lt;Option&lt;f32&gt;&gt;</code> with <code>Some(width)</code> and <code>Some(height)</code> as …","Performs Option::or on each component separately","Returns a Rect where the left, right, top and bottom …","Returns a Line where both the start and end values are the …","Returns a Size where both the width and height values are …","Returns a Point where both the x and y values are the …","Returns a Rect where the left, right, top and bottom …","Returns a Line where both the start and end values are the …","Returns a Size where both the width and height values are …","Returns a Point where both the x and y values are the …","For absolutely positioned items:","If at least one of the of the start and end positions is a …","If neither of the start and end positions is a track index …","This can represent either the x-coordinate of the ending …","The start position of a line","Adds the start and end values together and returns the …","","","","","","This can represent either the y-coordinate of the top edge,","","","","","","","","","","","","","","","","Performs Option::unwrap_or on each component separately","Returns a <code>Line&lt;T&gt;</code> containing the top and bottom properties …","The x extent of the rectangle","The x-coordinate","The y-coordinate","Returns a Size where the left, right, top, and bottom …","Returns a Line where both the start and end values are the …","Returns a Size where both the width and height values are …","Returns a Point where both the x and y values are the zero …","Applies the function <code>f</code> to both the width and height of …","Cached intermediate layout results","The layout algorithm should be executed such that an …","Only content contributions should be taken into account","Inherent size styles should be taken into account in …","The final result of a layout algorithm for a single <code>Node</code>.","A full layout for this node and all children should be …","Whether we are performing a full layout, or we merely need …","A struct containing both the size of a node and it’s …","Whether styles should be taken into account when computing …","","","","","","","","","","","","","","","","","","","","","","","","","The first baseline of the node in each dimension, if any","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The bottom-left corner of the node","Creates a new zero-<code>Layout</code>.","The relative ordering of the node","The size of the node","The width and height of the node","","","","","","","","","","","","","","","","","","","","","Creates a new zero-<code>Layout</code> with the supplied <code>order</code> value.","Stores a boxed function","A function type that can be used in a <code>MeasureFunc</code>","A function that can be used to compute the intrinsic size …","A node in a layout.","Stores an unboxed function","A tree of UI <code>Nodes</code>, suitable for UI layout","Adds a <code>child</code> <code>Node</code> under the supplied <code>parent</code>","","","","","","","Returns the child <code>Node</code> of the parent <code>node</code> at the provided …","","Returns the number of children of the <code>parent</code> <code>Node</code>","","Returns a list of children that belong to the parent <code>Node</code>","Drops all nodes in the tree","Updates the stored layout of the provided <code>node</code> and its …","","Indicates whether the layout of this node (and its …","Disable rounding of layout values. Rounding is enabled by …","Enable rounding of layout values. Rounding is enabled by …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return this node layout relative to its parent","","","","","Creates a new <code>Taffy</code>","Creates and adds a new unattached leaf node to the tree, …","Creates and adds a new unattached leaf node to the tree, …","Creates and adds a new node, which may have any number of …","","Remove a specific <code>Node</code> from the tree and drops it","Removes the <code>child</code> of the parent <code>node</code>","Removes the child at the given <code>index</code> from the <code>parent</code>","Replaces the child at the given <code>child_index</code> from the <code>parent</code>…","Directly sets the <code>children</code> of the supplied <code>parent</code>","Sets the <code>MeasureFunc</code> of the associated node","Sets the <code>Style</code> of the provided <code>node</code>","","Gets the <code>Style</code> of the provided <code>node</code>","","","","","","","Creates a new <code>Taffy</code> that can store <code>capacity</code> nodes before …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply the flexbox algorithm and recursively layout the …","","","","","","","","","","The offset is computed relative to this item’s closest …","Sets the distribution of space between and around content …","Used to control how child <code>Nodes</code> are aligned. For Flexbox …","Used to control how the specified <code>Nodes</code> is aligned. …","The dimension should be automatically computed","The dimension should be automatically computed","Track maximum size should be automatically sized","Track minimum size should be automatically sized","Auto-repeating tracks should be generated to fit the …","Auto-repeating tracks should be generated to fit the …","The amount of space available to a node in a given axis …","Items are aligned such as their baselines align","Items are aligned such as their baselines align","Items are aligned such as their baselines align","Items are aligned such as their baselines align","Items are packed along the center of the cross axis","Items are packed along the center of the cross axis","Items are packed along the center of the cross axis","Items are centered around the middle of the axis","Items are packed along the center of the cross axis","Items are centered around the middle of the axis","Defines +y as the main axis","Items are placed by filling each column in turn, adding …","Combines <code>Column</code> with the dense packing algorithm.","Defines -y as the main axis","The specified tracks should be repeated exacts N times","The <code>Default</code> layout, in a form that can be used in const …","The amount of space available is the specified number of …","A unit of linear measurement","Sets the layout used for the children of this node","Items are packed toward the end of the axis","Items are packed toward the end of the axis","Items are packed toward the end of the axis","Items are packed toward the end of the axis","Items are packed toward the end of the axis","Items are packed toward the end of the axis","Track maximum size should be sized according to the …","Track maximum size should be a fixed points or percentage …","Track minimum size should be a fixed points or percentage …","The children will follow the flexbox layout algorithm","The direction of the flexbox layout main axis.","Items are packed towards the flex-relative end of the axis.","Items are packed towards the flex-relative end of the axis.","Items are packed towards the flex-relative end of the axis.","Items are packed towards the flex-relative end of the axis.","Items are packed towards the flex-relative end of the axis.","Items are packed towards the flex-relative end of the axis.","Items are packed towards the flex-relative start of the …","Items are packed towards the flex-relative start of the …","Items are packed towards the flex-relative start of the …","Items are packed towards the flex-relative start of the …","Items are packed towards the flex-relative start of the …","Items are packed towards the flex-relative start of the …","Controls whether flex items are forced onto one line or …","The dimension as a fraction of the total available grid …","The children will follow the CSS Grid layout algorithm","Controls whether grid items are placed row-wise or …","A grid line placement specification. Used for grid-[…","The first argument to a repeated track definition. This …","Sets the distribution of space between and around content …","Used to control how child <code>Nodes</code> are aligned. Does not …","Used to control how the specified <code>Nodes</code> is aligned. …","A unit of linear measurement","A unit of linear measurement","The amount of space available is indefinite and the node …","Track maximum size should be content sized under a …","Track minimum size should be content sized under a …","Maximum track sizing function","The amount of space available is indefinite and the node …","Track maximum size should be content sized under a …","Track minimum size should be content sized under a …","Minimum track sizing function","Items will not wrap and stay on a single line","The sizing function for a grid track (row/column) (either …","The children will not be laid out, and will follow …","The dimension is stored in percentage relative to the …","The dimension is stored in percentage relative to the …","The dimension is stored in percentage relative to the …","Points are abstract absolute units. Users of Taffy may …","Points are abstract absolute units. Users of Taffy may …","Points are abstract absolute units. Users of Taffy may …","The positioning strategy for this item.","The offset is computed relative to the final position …","Automatically generate grid tracks to fit the available …","Defines +x as the main axis","Items are placed by filling each row in turn, adding new …","Combines <code>Row</code> with the dense packing algorithm.","Defines -x as the main axis","A single non-repeated track","The gap between the first and last items is exactly HALF …","The gap between the first and last items is exactly HALF …","The first and last items are aligned flush with the edges …","The first and last items are aligned flush with the edges …","The gap between the first and last items is exactly THE …","The gap between the first and last items is exactly THE …","Items are packed toward the start of the axis","Items are packed toward the start of the axis","Items are packed toward the start of the axis","Items are packed toward the start of the axis","Items are packed toward the start of the axis","Items are packed toward the start of the axis","Stretch to fill the container","Stretch to fill the container","Stretch to fill the container","Items are stretched to fill the container","Stretch to fill the container","Items are stretched to fill the container","The flexbox layout information for a single <code>Node</code>.","The sizing function for a grid track (row/column) See …","Items will wrap according to this item’s <code>FlexDirection</code>","Items will wrap in the opposite direction to this item’s …","How should content contained within this item be aligned …","How this node’s children aligned in the cross/block axis?","How this node should be aligned in the cross/block axis …","Sets the preferred aspect ratio for the item","How large should the border be on each side?","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute free_space given the passed used_space","","","","","","","","Resolve the maximum size of the track as defined by either:","Returns fixed point values directly. Attempts to resolve …","Returns fixed point values directly. Attempts to resolve …","What layout strategy should be used?","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the initial main axis size of the item","Which direction does the main axis flow in?","The relative rate at which this item grows when it is …","The relative rate at which this item shrinks when it is …","Should elements wrap, or stay in a single line?","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","How large should the gaps between items in a grid or flex …","Defined the size of implicitly created columns","Controls how items get placed into the grid for …","Defines the size of implicitly created rows","Defines which column in the grid the item should start and …","Defines which row in the grid the item should start and …","Defines the track sizing functions (heights) of the grid …","Defines the track sizing functions (widths) of the grid …","Determine whether at least one of the components (“min”…","How should the position of this element be tweaked …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get Points value if value is Points variant","Convert to Option Definite values become Some(value). …","Whether the track definition is a auto-repeated fragment","Returns true for definite values, else false","Whether grid auto placement uses the sparse placement …","Returns true if the max track sizing function is <code>Flex</code>, …","Returns true if the max track sizing function is <code>MinContent</code>…","Returns true if the min track sizing function is <code>MinContent</code>…","Returns true if the max track sizing function is <code>MaxContent</code>…","Compare equality with another AvailableSpace, treating …","How should contained within this item be aligned in the …","How this node’s children should be aligned in the inline …","How this node should be aligned in the inline axis Falls …","If passed value is Some then return …","How large should the margin be on each side?","The value representing the maximum","Controls the maximum size of the item","Extract the max track sizing function","If passed value is Some then return …","The value representing the minimum","Controls the minimum size of the item","Extract the min track sizing function","Return self if definite or a default value","Return self if definite or a the result of the default …","How large should the padding be on each side?","What should the <code>position</code> value of this struct use as a …","Whether grid auto placement fills areas row-wise or …","Returns:","Resolve percentage values against the passed parent_size, …","Resolve percentage values against the passed parent_size, …","Sets the initial size of the item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the definite value. Panic is the value is not …","Return the definite value or a default value","Return the definite value or the result of the default …","Whether the track sizing functions depends on the size of …","Whether the track sizing functions depends on the size of …","The auto value for type implementing TaffyZero","Trait to create constant percent values from plain numbers","Trait to create constant percent values from plain numbers","Trait to create constant points values from plain numbers","The max_content value for type implementing TaffyZero","The min_content value for type implementing TaffyZero","Trait to abstract over auto values","Trait to create constant points values from plain numbers","Trait to abstract over grid line values","Trait to abstract over grid span values","Trait to abstract over max_content values","Trait to abstract over min_content values","Trait to abstract over zero values","The zero value for type implementing TaffyZero","Returns the auto value for that type","Returns a grid template containing <code>count</code> evenly sized …","Returns a value of the inferred type which represent a …","Converts into a LengthPercentage into Self","Shorthand for minmax(0, Nfr). Probably what you want if …","Create a <code>Fraction</code> track sizing function (<code>fr</code> in CSS)","Converts into an <code>Into&lt;f32&gt;</code> into Self","Converts an i16 into Self","Converts into an <code>Into&lt;f32&gt;</code> into Self","Converts into an <code>Into&lt;f32&gt;</code> into Self","Converts an iu6 into Self","Specifies a grid line to place a grid item between in CSS …","Returns the auto value for that type","Returns the auto value for that type","Returns a MinMax with min value of min and max value of max","Returns a value of the inferred type which represent a …","Returns a value of the inferred type which represent a …","Returns an auto-repeated track definition","Returns a GridPlacement::Span","Returns the zero value for that type","Type representing an iterator of the children of a node","Any item that implements the LayoutTree can be layed out …","Get a cache entry for this Node by index","Get a specific child of a node, where the index represents …","Get the number of children for the given node","Get the list of children IDs for the given node","Returns true if the node has no children","Get the node’s output “Final Layout”","Modify the node’s output layout","Mark a node as dirty to tell Taffy that something has …","Measure a node. Taffy uses this to force reflows of things …","Node needs to be measured","Get any available parent for this node","Get the <code>Style</code> for this Node."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,8,7,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,7,8,8,7,7,8,7,8,7,8,7,8,5,48,5,5,5,48,0,0,5,5,5,5,5,5,5,5,5,5,74,74,74,0,0,4,18,0,0,0,15,4,18,15,4,15,17,4,18,15,17,4,18,21,15,17,4,18,21,4,15,15,17,4,18,21,15,17,4,18,21,15,17,4,17,15,17,4,18,21,15,17,4,18,21,4,15,15,17,17,4,4,18,18,15,17,4,18,21,15,17,4,18,21,17,15,15,17,4,4,18,15,15,17,4,4,18,17,4,15,21,4,15,17,15,17,4,18,21,4,17,17,15,15,17,4,4,4,21,15,17,4,18,21,4,4,21,15,17,4,18,21,15,4,4,15,17,4,18,15,17,4,18,17,17,17,15,17,17,15,17,4,18,21,15,15,17,4,18,21,15,17,4,18,21,15,17,4,18,21,4,15,4,18,18,15,17,4,18,4,0,42,43,43,0,42,0,0,0,42,43,44,45,46,42,43,44,45,46,42,43,44,45,46,42,43,44,45,46,42,43,42,43,44,42,43,44,45,46,42,43,44,44,45,46,42,43,44,45,46,45,45,45,44,45,42,43,44,45,46,42,43,44,45,46,42,43,44,45,46,42,43,44,45,46,45,52,0,0,0,52,0,1,52,1,52,1,1,1,1,1,1,1,1,1,1,1,1,1,1,52,1,52,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,52,1,52,1,52,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,57,33,37,36,61,61,0,75,76,77,55,75,76,77,78,55,56,59,60,60,59,61,51,3,0,0,75,76,77,78,55,56,37,37,36,63,0,75,76,77,78,55,56,75,76,77,78,55,56,0,37,63,0,0,0,0,0,0,0,0,3,37,36,0,3,37,36,0,58,0,63,26,57,33,26,57,33,0,64,62,59,60,60,59,62,78,56,78,56,78,56,75,76,77,78,55,56,75,76,77,78,55,56,0,0,58,58,51,51,51,51,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,3,23,58,59,60,63,64,51,37,37,36,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,55,56,58,59,60,61,63,64,65,37,62,51,51,51,51,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,55,56,26,57,57,33,33,33,3,3,3,58,59,60,37,36,61,62,62,63,64,51,65,37,62,23,65,26,57,33,37,36,62,65,26,57,33,3,37,36,62,23,51,51,51,51,51,51,51,51,65,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,33,3,62,3,60,37,37,36,37,3,51,51,51,3,51,65,51,65,3,65,51,65,3,3,51,51,60,57,37,36,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,55,56,26,57,33,3,58,59,60,37,36,61,61,61,62,63,64,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,55,56,26,57,33,3,58,59,60,37,36,61,62,63,64,51,3,3,3,37,36,16,0,0,0,39,40,0,0,0,0,0,0,0,41,0,0,0,27,0,0,70,71,32,34,73,0,0,0,0,0,0,0,0,0,54,0,54,54,54,54,54,54,54,54,54,54,54,54],"f":[0,0,[[1,2,[4,[3]]],[[6,[5]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[7,7],[8,8],[[]],[[]],[[7,7],9],[[8,8],9],[[],9],[[],9],[[7,10],11],[[8,10],11],[[]],[[]],[[]],[[]],[8,8],[7,7],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],0,0,0,0,0,0,0,0,[[]],[[]],[[5,10],11],[[5,10],11],[[]],[[]],[[],13],[[],6],[[],6],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[15,[14]],15]],[[[4,[14]],4]],[[],[[15,[16]]]],[[],[[17,[16]]]],[[],[[4,[16]]]],[[],[[18,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[19]]],9],0,[[[15,[20]]],[[15,[20]]]],[[[17,[20]]],[[17,[20]]]],[[[4,[20]]],[[4,[20]]]],[[[18,[20]]],[[18,[20]]]],[[[21,[20,20]]],[[21,[20,20]]]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[22]]]],[[],[[17,[23]]]],[[],[[4,[22]]]],0,[[[15,[24]],[15,[24]]],9],[[[17,[24]],[17,[24]]],9],[[[4,[24]],[4,[24]]],9],[[[18,[24]],[18,[24]]],9],[[[21,[24,24]],[21,[24,24]]],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[[4,[25]],[4,[25]]],[[4,[25]]]],[26,[[15,[27]]]],[26,[[15,[27]]]],[26,[[17,[27]]]],[26,[[17,[27]]]],[26,[[4,[27]]]],[26,[[4,[27]]]],[26,[[18,[27]]]],[26,[[18,[27]]]],[[[15,[28]],10],11],[[[17,[28]],10],11],[[[4,[28]],10],11],[[[18,[28]],10],11],[[[21,[28,28]],10],11],[[]],[[]],[[]],[[]],[[]],[29,[[17,[23]]]],[[[0,[[30,[25]],31]]],[[15,[32]]]],[[25,25,25,25],[[15,[33]]]],[[[0,[[30,[25]],31]]],[[17,[32]]]],[[25,25],[[4,[33]]]],[[[0,[[30,[25]],31]]],[[4,[32]]]],[[[0,[[30,[25]],31]]],[[18,[32]]]],[[[0,[[30,[25]],31]]],[[15,[34]]]],[[25,25,25,25],[[15,[33]]]],[[[0,[[30,[25]],31]]],[[17,[34]]]],[[25,25],[[4,[33]]]],[[[0,[[30,[25]],31]]],[[4,[34]]]],[[[0,[[30,[25]],31]]],[[18,[34]]]],[35,[[17,[23]]]],[[4,7]],[[[15,[14]],7]],[[[21,[36,37]]],9],0,[15,17],[[[17,[[0,[0]]]]],35],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],[[4,[[19,[25]]]]]],[[[17,[23]],35],[[17,[[0,[0]]]]]],[[[17,[[0,[0]]]]],9],0,[[15,38],15],[[17,38],17],[[4,38],4],[[4,38],4],[[4,38],4],0,[[],[[15,[39]]]],[[],[[17,[39]]]],[[],[[4,[39]]]],[[],[[18,[39]]]],[[[21,[36,37]]],37],[[[4,[[19,[25]]]],[19,[25]]],[[4,[[19,[25]]]]]],[[[4,[3]],[4,[[19,[25]]]]],[[4,[3]]]],0,[[],[[15,[40]]]],[[],[[17,[40]]]],[[],[[4,[40]]]],[[],[[18,[40]]]],[[[21,[36,37]]],36],[[25,25,25,25],[[15,[25]]]],[[25,25],[[4,[[19,[25]]]]]],[[[4,[19]],[4,[19]]],[[4,[19]]]],[[[0,[[30,[25]],31]]],[[15,[32]]]],[[[0,[[30,[25]],31]]],[[17,[32]]]],[[[0,[[30,[25]],31]]],[[4,[32]]]],[[[0,[[30,[25]],31]]],[[18,[32]]]],[[[0,[[30,[25]],31]]],[[15,[34]]]],[[[0,[[30,[25]],31]]],[[17,[34]]]],[[[0,[[30,[25]],31]]],[[4,[34]]]],[[[0,[[30,[25]],31]]],[[18,[34]]]],[[[17,[[0,[0]]]]],[[17,[[19,[0]]]]]],[[[17,[[0,[0]]]]],[[17,[0]]]],0,0,0,[[[17,[[0,[14,31]]]]]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[],12],[[[4,[19]],4],4],[15,17],0,0,0,[[],[[15,[41]]]],[[],[[17,[41]]]],[[],[[4,[41]]]],[[],[[18,[41]]]],[[4,4,38],4],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[43,43],[44,44],[45,45],[46,46],[[]],[[]],[[]],[[]],[[]],[[42,42],9],[[43,43],9],[[],9],[[],9],0,[[42,10],11],[[43,10],11],[[44,10],11],[[45,10],11],[[46,10],11],[[]],[[]],[[]],[[[4,[25]]],44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],45],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[],12],[47,45],0,0,0,0,0,0,[[1,2,2],48],[[]],[[]],[[]],[[]],[[1,2,49],[[19,[46]]]],[[1,2,49],2],[[1,2,49],[[48,[2]]]],[[1,2],49],[[1,2],[[48,[49]]]],[[1,2]],[[1,2],[[48,[[50,[2]]]]]],[1],[[1,2,[4,[3]]],[[6,[5]]]],[[],1],[[1,2],[[48,[9]]]],[1],[1],[[]],[[]],[[]],[[]],[[1,2],9],[[1,2],45],[[1,2],[[48,[45]]]],[[1,2],45],[[1,2],48],[[1,2,[4,[[19,[25]]]],[4,[3]]],[[4,[25]]]],[[1,2],9],[[],1],[[1,51],[[48,[2]]]],[[1,51,52],[[48,[2]]]],[[1,51,[53,[2]]],[[48,[2]]]],[[1,2],[[19,[2]]]],[[1,2],[[48,[2]]]],[[1,2,2],[[48,[2]]]],[[1,2,49],[[48,[2]]]],[[1,2,49,2],[[48,[2]]]],[[1,2,[53,[2]]],48],[[1,2,[19,[52]]],48],[[1,2,51],48],[[1,2],51],[[1,2],[[48,[51]]]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[49,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[54,2,[4,[[19,[25]]]],[4,[[19,[25]]]],[4,[3]],43],44],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,55],[56,56],[26,26],[57,57],[33,33],[3,3],[58,58],[59,59],[60,60],[37,37],[36,36],[61,61],[62,62],[63,63],[64,64],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,25],25],[[],23],[[],58],[[],59],[[],60],[[],63],[[],64],[[],51],[[37,[19,[25]]],[[19,[25]]]],[[37,[19,[25]]],[[19,[25]]]],[[36,[19,[25]]],[[19,[25]]]],0,[[55,55],9],[[56,56],9],[[26,26],9],[[57,57],9],[[33,33],9],[[3,3],9],[[58,58],9],[[59,59],9],[[60,60],9],[[37,37],9],[[36,36],9],[[61,61],9],[[62,62],9],[[63,63],9],[[64,64],9],[[51,51],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[26,65],[26,37],[26,62],0,0,0,0,0,[[55,10],11],[[56,10],11],[[26,10],11],[[57,10],11],[[33,10],11],[[3,10],11],[[58,10],11],[[59,10],11],[[60,10],11],[[37,10],11],[[36,10],11],[[61,10],11],[[62,10],11],[[63,10],11],[[64,10],11],[[51,10],11],[[]],[[]],[[]],[[]],[26,57],[57,33],[26,33],[[]],[25,3],[[[19,[25]]],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[36,37]]],62],[[]],[[]],[[]],[[]],[[[0,[[30,[25]],31]]],65],[[[0,[[30,[25]],31]]],37],[[[0,[[30,[25]],31]]],62],[29,23],[[[0,[[30,[25]],31]]],65],[[[0,[[30,[25]],31]]],26],[[[0,[[30,[25]],31]]],57],[[[0,[[30,[25]],31]]],33],[[[0,[[30,[25]],31]]],37],[[[0,[[30,[25]],31]]],36],[[[0,[[30,[25]],31]]],62],[[[0,[[30,[25]],31]]],65],[[[0,[[30,[25]],31]]],26],[[[0,[[30,[25]],31]]],57],[[[0,[[30,[25]],31]]],33],[[[0,[[30,[25]],31]]],3],[[[0,[[30,[25]],31]]],37],[[[0,[[30,[25]],31]]],36],[[[0,[[30,[25]],31]]],62],[35,23],0,0,0,0,0,0,0,0,[65,9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,[[19,[25]]]],[3,[[19,[25]]]],[62,9],[3,9],[60,9],[37,9],[37,9],[36,9],[37,9],[[3,3],9],0,0,0,[[3,66],3],0,0,0,[65,37],[[3,[19,[25]]],3],0,0,[65,36],[[3,3],3],[[3,66],3],0,0,[60,7],[[57,25],[[19,[25]]]],[[37,25],[[19,[25]]]],[[36,25],[[19,[25]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[35,[[6,[61,67]]]],[68,[[6,[61,0]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[3,25],[[3,25],25],[[3,66],25],[37,9],[36,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],16],[35,[[50,[62]]]],[26,27],[26],[[[0,[[30,[25]],31]]],[[69,[[21,[36,37]]]]]],[[[0,[[30,[25]],31]]],70],[[[0,[[30,[25]],31]]]],[29],[[[0,[[30,[25]],31]]]],[[[0,[[30,[25]],31]]]],[35],[29,71],[[],39],[[],40],[[36,37],[[69,[[21,[36,37]]]]]],[[[0,[[30,[25]],31]]],32],[[[0,[[30,[25]],31]]],34],[[[72,[61]],[50,[65]]],62],[35,73],[[],41],0,0,[[2,49],[[19,[46]]]],[[2,49],2],[2,49],[2],[2,9],[2,45],[2,45],[2,48],[[2,[4,[[19,[25]]]],[4,[3]]],[[4,[25]]]],[2,9],[2,[[19,[2]]]],[2,51]],"c":[],"p":[[3,"Taffy",310],[6,"Node",310],[4,"AvailableSpace",420],[3,"Size",67],[4,"TaffyError",46],[4,"Result",878],[4,"AbsoluteAxis",12],[4,"AbstractAxis",12],[15,"bool"],[3,"Formatter",879],[6,"Result",879],[3,"TypeId",880],[3,"String",881],[8,"Add",882],[3,"Rect",67],[8,"TaffyAuto",830],[3,"Line",67],[3,"Point",67],[4,"Option",883],[8,"Clone",884],[3,"MinMax",67],[8,"Default",885],[6,"GridPlacement",420],[8,"PartialEq",886],[15,"f32"],[4,"LengthPercentage",420],[8,"TaffyFitContent",830],[8,"Debug",879],[15,"i16"],[8,"Into",887],[8,"Copy",888],[8,"FromPercent",830],[4,"Dimension",420],[8,"FromPoints",830],[15,"u16"],[4,"MinTrackSizingFunction",420],[4,"MaxTrackSizingFunction",420],[8,"Fn",889],[8,"TaffyMaxContent",830],[8,"TaffyMinContent",830],[8,"TaffyZero",830],[4,"RunMode",234],[4,"SizingMode",234],[3,"SizeAndBaselines",234],[3,"Layout",234],[3,"Cache",234],[15,"u32"],[6,"TaffyResult",46],[15,"usize"],[3,"Vec",890],[3,"Style",420],[4,"MeasureFunc",310],[15,"slice"],[8,"LayoutTree",864],[4,"AlignItems",420],[4,"AlignContent",420],[4,"LengthPercentageAuto",420],[4,"FlexWrap",420],[4,"FlexDirection",420],[4,"GridAutoFlow",420],[4,"GridTrackRepetition",420],[4,"TrackSizingFunction",420],[4,"Display",420],[4,"Position",420],[6,"NonRepeatedTrackSizingFunction",420],[8,"FnOnce",889],[4,"Infallible",887],[15,"str"],[8,"From",887],[8,"FromFlex",830],[8,"TaffyGridLine",830],[8,"TryInto",887],[8,"TaffyGridSpan",830],[13,"ChildIndexOutOfBounds",64],[6,"JustifyItems",420],[6,"AlignSelf",420],[6,"JustifySelf",420],[6,"JustifyContent",420]]},\
"viewbuilder":{"doc":"Viewbuilder","t":"CGCCCDCLLAALLLAFLALLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLDNEDNDNLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLNNDEENNLLLLLLMMLLLLLLLLLLLLMMLLMLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLL","n":["Element","ElementKey","Event","Node","NodeRef","Renderer","Tree","borrow","borrow_mut","element","event","from","into","new","node","run","run","tree","try_from","try_into","type_id","Element","ElementData","align_items","background_color","borrow","borrow","borrow_mut","borrow_mut","build","child","default","default","flex_direction","from","from","into","into","justify_content","new","on_click","on_mouse_in","on_mouse_out","size","try_from","try_from","try_into","try_into","type_id","type_id","Click","Click","Event","MouseIn","MouseIn","MouseOut","MouseOut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","target","target","target","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Element","Element","Node","NodeData","NodeKind","Text","Text","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","data","eq","equivalent","fmt","from","from","from","from","into","into","into","kind","layout","layout","layout_key","new","paint","parent","semantics","text","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Iter","IterMut","NodeRef","Nodes","Tree","as_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","display","element","element","from","from","from","from","from","insert","into","into","into","into","into","into_iter","into_iter","iter","iter_mut","layout","next","next","node","nodes","nodes","paint","parent","semantics","send","set_background_color","set_text","target","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"viewbuilder"],[21,"viewbuilder::element"],[50,"viewbuilder::event"],[88,"viewbuilder::node"],[131,"viewbuilder::tree"],[195,"slotmap"],[196,"core::result"],[197,"core::any"],[198,"taffy::style::alignment"],[199,"skia_safe::core::color"],[200,"taffy::style::flex"],[201,"taffy::style::alignment"],[202,"alloc::boxed"],[203,"taffy::style::dimension"],[204,"taffy::geometry"],[205,"core::fmt"],[206,"core::fmt"],[207,"skia_safe::core::canvas"],[208,"accesskit"],[209,"alloc::borrow"],[210,"core::convert"],[211,"alloc::string"],[212,"core::option"],[213,"accesskit"]],"d":["","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Run the user interface tree.","","","","","","Element of a user interface.","Data of an element.","Set the item alignment of this element.","Set the background color of this element.","","","","","Build the element and insert it into the tree.","Add a child to the element.","","","Set the flex direction of this element.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set the content justification of this element.","Create a new element.","Set the click handler for this element.","Set the mouse-in handler for this element.","Set the mouse-out handler for this element.","Set the size of this element.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Element node.","Element node kind.","","Data type of a node.","Kind of data type of a node.","Text node.","Text node kind.","","","","","","","Child node ids.","Data type of the node.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the node kind.","Setup the layout node.","Absolute layout of the node, relative to the window.","Layout key for the taffy node.","Create a new node from its data.","Paint the node to a skia canvas.","Parent node id.","Build a semantics node.","Create a new text node.","","","","","","","","","","","","Reference to an element in a tree.","","","","","","","","","","","","","","","","","Get a reference the current element.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Get a reference the current node.","","","","Move the reference to the parent element.","","","Update the background color.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,0,1,0,1,1,1,0,0,6,6,6,9,6,9,6,6,6,9,6,6,9,6,9,6,6,6,6,6,6,6,9,6,9,6,9,0,35,0,0,35,0,35,35,37,38,39,35,37,38,39,35,37,38,39,35,37,38,39,37,38,39,35,37,38,39,35,37,38,39,35,37,38,39,23,16,0,0,0,23,16,23,21,16,23,21,16,21,21,16,16,16,23,21,21,16,23,21,16,21,21,21,21,21,21,21,21,21,23,21,16,23,21,16,23,21,16,0,0,0,0,0,28,31,32,28,2,29,31,32,28,2,29,2,29,2,28,2,31,32,28,2,29,2,31,32,28,2,29,31,32,29,29,2,31,32,28,2,29,2,28,2,2,28,2,2,31,32,28,2,29,31,32,28,2,29,31,32,28,2,29],"f":[0,0,0,0,0,0,0,[[]],[[]],0,0,[[]],[[]],[[],1],0,[[2,3]],[[1,2,3]],0,[[],4],[[],4],[[],5],0,0,[[6,7],6],[[6,8],6],[[]],[[]],[[]],[[]],[[6,2],3],[[6,3],6],[[],6],[[],9],[[6,10],6],[[]],[[]],[[]],[[]],[[6,11],6],[[],6],[[6,[13,[12]]],6],[[6,[13,[12]]],6],[[6,[13,[12]]],6],[[6,[15,[14]]],6],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[16,16],17],[[],17],[[16,18],19],[[]],[[]],[20,21],[[]],[[]],[[]],[[]],[21,16],[[21,22]],0,0,[23,21],[[21,24]],0,[21,25],[[[27,[[26,[20]]]]],21],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],0,0,0,0,0,[28,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],29],[[2,3],30],[28,9],[[2,3],28],[[]],[[]],[[]],[[]],[[]],[[2,[27,[21]]],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[29,3],31],[[29,3],32],[[2,3]],[31,33],[32,33],[28,21],0,0,[[2,3,24]],[28,28],[2,34],[[2,3,35]],[[28,8]],[[2,3,[27,[[26,[20]]]]]],[[2,3,36],[[33,[3]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],5],[[],5],[[],5],[[],5],[[],5]],"c":[],"p":[[3,"Renderer",0],[3,"Tree",131],[3,"DefaultKey",195],[4,"Result",196],[3,"TypeId",197],[3,"Element",21],[4,"AlignItems",198],[3,"Color4f",199],[3,"ElementData",21],[4,"FlexDirection",200],[6,"JustifyContent",198],[8,"FnMut",201],[3,"Box",202],[4,"Dimension",203],[3,"Size",204],[4,"NodeKind",88],[15,"bool"],[3,"Formatter",205],[6,"Result",205],[15,"str"],[3,"Node",88],[3,"Taffy",206],[4,"NodeData",88],[3,"Canvas",207],[3,"NodeBuilder",208],[4,"Cow",209],[8,"Into",210],[3,"NodeRef",131],[3,"Nodes",131],[3,"String",211],[3,"Iter",131],[3,"IterMut",131],[4,"Option",212],[3,"TreeUpdate",208],[4,"Event",50],[3,"Point",213],[3,"Click",50],[3,"MouseIn",50],[3,"MouseOut",50]]},\
"winit":{"doc":"Winit is a cross-platform window creation and event loop …","t":"AAAAAAANNDDNNDDIEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMENDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNSNNNNNNNNGNNNNNGNSNNNNNNNNNNNNNNNNNNNENDNNNNENNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNENNNNNNNNNNNNNNNNNNDNNNNNSNNNNNNNNNNNNNNDNENNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSNGNNNNNNNENNNNNNNNDNENNNNNNNNNENNNNNNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLMLLLLLMLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNEEDDDDDSNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAANENIIINNNENNIILLLLLLLLLLLLLLLLLLKLKKLLKKKKKKKKKKKLLLLLLLLKKKKKKKKKKKKKIQKNNNNNENNSNNNNNNNEENNNNNNNENNNNDENNNSSNNNNNNNNNNNNNNNNNNENNNNNNNNNEENNNNDDDDDENNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLMMLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["dpi","error","event","event_loop","monitor","platform","window","Logical","Logical","LogicalPosition","LogicalSize","Physical","Physical","PhysicalPosition","PhysicalSize","Pixel","Position","Size","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","clamp","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_logical","from_logical","from_physical","from_physical","hash","hash","hash","hash","height","height","into","into","into","into","into","into","new","new","new","new","new","new","to_logical","to_logical","to_logical","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical","to_physical","to_physical","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_scale_factor","width","width","x","x","y","y","ExternalError","NotSupported","NotSupportedError","Os","OsError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","A","ALT","AbntC1","AbntC2","Added","Apostrophe","Apps","Asterisk","At","Ax","AxisId","AxisMotion","B","Back","Backslash","Button","ButtonId","C","CTRL","Calculator","Calibrated","Cancelled","Capital","Caret","CloseRequested","Colon","Comma","Commit","Compose","Convert","Copy","CursorEntered","CursorLeft","CursorMoved","Cut","D","Delete","Destroyed","DeviceEvent","DeviceEvent","DeviceId","Disabled","Down","DroppedFile","E","ElementState","Enabled","End","Ended","Equals","Escape","Event","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Focused","Force","G","Grave","H","Home","HoveredFile","HoveredFileCancelled","I","Ime","Ime","Init","Insert","J","K","Kana","Kanji","Key","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyboardInput","KeyboardInput","L","LAlt","LBracket","LControl","LOGO","LShift","LWin","Left","Left","LineDelta","LoopDestroyed","M","Mail","MainEventsCleared","MediaSelect","MediaStop","Middle","Minus","ModifiersChanged","ModifiersState","Motion","MouseButton","MouseInput","MouseMotion","MouseScrollDelta","MouseWheel","MouseWheel","Moved","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NewEvents","NextTrack","NoConvert","Normalized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Occluded","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Poll","Power","Preedit","Pressed","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","ReceivedCharacter","RedrawEventsCleared","RedrawRequested","Released","Removed","Resized","ResumeTimeReached","Resumed","Return","Right","Right","S","SHIFT","ScaleFactorChanged","ScanCode","Scroll","Semicolon","Slash","Sleep","SmartMagnify","Snapshot","Space","StartCause","Started","Stop","Suspended","Sysrq","T","Tab","Text","ThemeChanged","Touch","Touch","TouchPhase","TouchpadMagnify","TouchpadPressure","TouchpadRotate","U","Underline","Unlabeled","Up","UserEvent","V","VirtualKeyCode","VolumeDown","VolumeUp","W","WaitCancelled","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","WindowEvent","WindowEvent","X","Y","Yen","Z","all","alt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","ctrl","default","device_id","difference","dummy","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","location","logo","map_nonuser_event","modifiers","normalized","not","partial_cmp","partial_cmp","partial_cmp","phase","remove","scancode","set","shift","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_static","to_static","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","virtual_keycode","axis","button","codepoint","delta","delta","state","value","device_id","event","event","window_id","altitude_angle","force","max_possible_force","requested_resume","requested_resume","start","start","axis","button","delta","delta","delta","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","input","is_synthetic","modifiers","modifiers","modifiers","new_inner_size","phase","phase","phase","position","pressure","scale_factor","stage","state","value","Always","ControlFlow","DeviceEventFilter","EventLoop","EventLoopBuilder","EventLoopClosed","EventLoopProxy","EventLoopWindowTarget","Exit","ExitWithCode","Never","Poll","Unfocused","Wait","WaitUntil","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","create_proxy","default","default","default","default","deref","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hide_application","hide_other_applications","into","into","into","into","into","into","into","new","new","partial_cmp","primary_monitor","raw_display_handle","raw_display_handle","run","run_return","send_event","set_device_event_filter","set_exit","set_exit_with_code","set_poll","set_wait","set_wait_timeout","set_wait_until","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_activate_ignoring_other_apps","with_activation_policy","with_default_menu","with_user_event","with_user_event","MonitorHandle","VideoMode","bit_depth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","into","into","monitor","name","native_id","ns_screen","partial_cmp","partial_cmp","position","refresh_rate_millihertz","refresh_rate_millihertz","scale_factor","size","size","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","video_modes","macos","run_return","Accessory","ActivationPolicy","Both","EventLoopBuilderExtMacOS","EventLoopWindowTargetExtMacOS","MonitorHandleExtMacOS","None","OnlyLeft","OnlyRight","OptionAsAlt","Prohibited","Regular","WindowBuilderExtMacOS","WindowExtMacOS","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","has_shadow","hash","hide_application","hide_other_applications","into","into","is_document_edited","native_id","ns_screen","ns_view","ns_window","option_as_alt","set_document_edited","set_has_shadow","set_option_as_alt","set_simple_fullscreen","simple_fullscreen","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_accepts_first_mouse","with_activate_ignoring_other_apps","with_activation_policy","with_default_menu","with_disallow_hidpi","with_fullsize_content_view","with_has_shadow","with_movable_by_window_background","with_option_as_alt","with_title_hidden","with_titlebar_buttons_hidden","with_titlebar_hidden","with_titlebar_transparent","EventLoopExtRunReturn","UserEvent","run_return","Alias","AllScroll","AlwaysOnBottom","AlwaysOnTop","Arrow","BadIcon","Borderless","ByteCountNotDivisibleBy4","CLOSE","Cell","ColResize","Confined","ContextMenu","Copy","Critical","Crosshair","CursorGrabMode","CursorIcon","Dark","Default","DimensionsVsPixelCount","EResize","East","EwResize","Exclusive","Fullscreen","Grab","Grabbing","Hand","Help","Icon","ImePurpose","Informational","Light","Locked","MAXIMIZE","MINIMIZE","Move","NResize","NeResize","NeswResize","NoDrop","None","Normal","Normal","North","NorthEast","NorthWest","NotAllowed","NsResize","NwResize","NwseResize","OsError","Password","Progress","ResizeDirection","RowResize","SResize","SeResize","South","SouthEast","SouthWest","SwResize","Terminal","Text","Theme","UserAttentionType","VerticalText","WResize","Wait","West","Window","WindowAttributes","WindowBuilder","WindowButtons","WindowId","WindowLevel","ZoomIn","ZoomOut","active","all","available_monitors","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","content_protected","current_monitor","decorations","default","default","default","default","default","default","difference","drag_resize_window","drag_window","drop","dummy","empty","enabled_buttons","enabled_buttons","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_window","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_rgba","fullscreen","fullscreen","has_focus","has_shadow","hash","hash","hash","hash","hash","id","inner_position","inner_size","inner_size","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_decorated","is_document_edited","is_empty","is_maximized","is_minimized","is_resizable","is_visible","max_inner_size","maximized","min_inner_size","new","new","not","ns_view","ns_window","option_as_alt","outer_position","outer_size","parent_window","partial_cmp","partial_cmp","position","preferred_theme","primary_monitor","raw_display_handle","raw_window_handle","remove","request_redraw","request_user_attention","resizable","resize_increments","resize_increments","scale_factor","set","set_content_protected","set_cursor_grab","set_cursor_hittest","set_cursor_icon","set_cursor_position","set_cursor_visible","set_decorations","set_document_edited","set_enabled_buttons","set_fullscreen","set_has_shadow","set_ime_allowed","set_ime_position","set_ime_purpose","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_option_as_alt","set_outer_position","set_resizable","set_resize_increments","set_simple_fullscreen","set_theme","set_title","set_transparent","set_visible","set_window_icon","set_window_level","simple_fullscreen","source","sub","sub_assign","symmetric_difference","theme","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","transparent","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","visible","window_attributes","window_icon","window_level","with_accepts_first_mouse","with_active","with_content_protected","with_decorations","with_disallow_hidpi","with_enabled_buttons","with_fullscreen","with_fullsize_content_view","with_has_shadow","with_inner_size","with_max_inner_size","with_maximized","with_min_inner_size","with_movable_by_window_background","with_option_as_alt","with_parent_window","with_position","with_resizable","with_resize_increments","with_theme","with_title","with_title_hidden","with_titlebar_buttons_hidden","with_titlebar_hidden","with_titlebar_transparent","with_transparent","with_visible","with_window_icon","with_window_level","byte_count","height","pixel_count","width","width_x_height"],"q":[[0,"winit"],[7,"winit::dpi"],[148,"winit::error"],[186,"winit::event"],[693,"winit::event::DeviceEvent"],[700,"winit::event::Event"],[704,"winit::event::Force"],[707,"winit::event::StartCause"],[711,"winit::event::WindowEvent"],[742,"winit::event_loop"],[866,"winit::monitor"],[913,"winit::platform"],[915,"winit::platform::macos"],[985,"winit::platform::run_return"],[988,"winit::window"],[1419,"winit::window::BadIcon"],[1424,"core::convert"],[1425,"core::clone"],[1426,"core::default"],[1427,"core::cmp"],[1428,"core::fmt"],[1429,"core::fmt"],[1430,"core::hash"],[1431,"core::any"],[1432,"core::fmt"],[1433,"core::cmp"],[1434,"core::option"],[1435,"core::iter::traits::iterator"],[1436,"raw_window_handle"],[1437,"core::ops::function"],[1438,"core::time"],[1439,"instant::native"],[1440,"std::os::raw"],[1441,"alloc::vec"],[1442,"raw_window_handle"]],"d":["UI scaling is important, so read the docs for this module …","","The <code>Event</code> enum and assorted supporting types.","The <code>EventLoop</code> struct and assorted supporting types, …","Types useful for interacting with a user’s monitors.","Contains traits with platform-specific methods in them.","The <code>Window</code> struct and associated types.","","","A position represented in logical pixels.","A size represented in logical pixels.","","","A position represented in physical pixels.","A size represented in physical pixels.","","A position that’s either physical or logical.","A size that’s either physical or logical.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the scale factor is a normal positive <code>f64</code>.","","","","","","","An error whose cause it outside Winit’s control.","The operation is not supported by the backend.","The error type for when the requested operation is not …","The OS cannot perform the operation.","The error type for when the OS cannot perform the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","The “alt” key.","","","","","","","","","Identifier for a specific analog axis on some device.","Motion on some analog axis. May report data redundant to …","","The Backspace key, right over Enter.","","","Identifier for a specific button on some device.","","The “control” key.","","On iOS, the force is calibrated so that the same number …","","","","The window has been requested to close.","","","Notifies when text should be inserted into the editor …","The “Compose” key on Linux.","","","The cursor has entered the window.","The cursor has left the window.","The cursor has moved on the window.","","","","The window has been destroyed.","Represents raw hardware events that are not associated …","Emitted when the OS sends an event to a device.","Identifier of an input device.","Notifies when the IME was disabled.","","A file has been dropped into the window.","","Describes the input state of a key.","Notifies when the IME was enabled.","","","","The Escape key, next to F1.","Describes a generic event.","","","","","","","","","","","","","","","","","","","","","","","","","","The window gained or lost focus.","Describes the force of a touch event","","","","","A file is being hovered over the window.","A file was hovered, but has exited the window.","","Describes input method events.","An event from an input method.","Sent once, immediately after <code>run</code> is called. Indicates that …","<code>Insert</code>, next to Backspace.","","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","Describes a keyboard input event.","An event from the keyboard has been received.","","","","","This is the “windows” key on PC and “command” key …","","","","","Amount in lines or rows to scroll in the horizontal and …","Emitted when the event loop is being shut down.","","","Emitted when all of the event loop’s input events have …","","","","","The keyboard modifiers have changed.","Represents the current state of the keyboard modifiers","Motion on some analog axis. This event will be reported …","Describes a button of a mouse controller.","An mouse button press has been received.","Change in physical position of a pointing device.","Describes a difference in the mouse scroll wheel state.","A mouse wheel movement or touchpad scroll occurred.","Physical scroll event","The position of the window has changed. Contains the window…","","","","","","","Emitted when new events arrive from the OS to be processed.","","","If the platform reports the force as normalized, we have …","","","","","","","","","","","","","","","","","","","","","","The window has been occluded (completely hidden from view).","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","Sent if the event loop is being resumed after the loop’s …","","Notifies when a new composing text should be set at the …","","","","","","","","","","The window received a unicode character.","Emitted after all <code>RedrawRequested</code> events have been …","Emitted after <code>MainEventsCleared</code> when a window should be …","","","The size of the window has changed. Contains the client …","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …","Emitted when the application has been resumed.","The Enter key.","","","","The “shift” key.","The window’s scale factor has changed.","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Smart magnification event.","Print Screen/SysRq.","The space bar.","Describes the reason the event loop is resuming.","","","Emitted when the application has been suspended.","","","","","The system window theme has changed.","Represents a touch event","Touch event has been received","Describes touch-screen input state.","Touchpad magnification event with two-finger pinch gesture.","Touchpad pressure event.","Touchpad rotation event with two-finger rotation gesture.","","","","","Emitted when an event is sent from …","","Symbolic name for a keyboard key.","","","","Sent if the OS has new events to send to the window, after …","","","","","","","","","Describes an event from a <code>Window</code>.","Emitted when the OS sends an event to a winit window.","","","","","Returns the set containing all flags.","Returns <code>true</code> if the alt key is pressed.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if the control key is pressed.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns a dummy id, useful for unit testing.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how hard the screen was pressed. May be <code>None</code> if …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Unique identifier of a finger.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if the logo key is pressed.","","Modifier keys active at the time of this input.","Returns the force normalized to the range between 0.0 and …","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Identifies the physical key pressed","Inserts or removes the specified flags depending on the …","Returns <code>true</code> if the shift key is pressed.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","If the event doesn’t contain a reference, turn it into …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies the semantic meaning of the key","","","","(x, y) change in position in unspecified units.","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, the event was generated synthetically by winit in …","","","","","","","","(x,y) coords in pixels relative to the top-left corner of …","","","","","","Always filter out device events.","Set by the user callback given to the <code>EventLoop::run</code> …","Filter controlling the propagation of device events.","Provides a way to retrieve events from the system and from …","Object that allows building the event loop.","The error that is returned when an <code>EventLoopProxy</code> attempts …","Used to send custom events to <code>EventLoop</code>.","Target that associates windows with an <code>EventLoop</code>.","Alias for <code>ExitWithCode</code><code>(0)</code>.","Send a <code>LoopDestroyed</code> event and stop the event loop. This …","Report all device events regardless of window focus.","When the current loop iteration finishes, immediately …","Filter out device events while the window is not focused.","When the current loop iteration finishes, suspend the …","When the current loop iteration finishes, suspend the …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","Builds a new event loop.","","","","","","","","","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Alias for <code>EventLoopBuilder::new().build()</code>.","Start building a new event loop.","","Returns the primary monitor of the system.","Returns a <code>raw_window_handle::RawDisplayHandle</code> for the …","Returns a <code>raw_window_handle::RawDisplayHandle</code> for the …","Hijacks the calling thread and initializes the winit event …","","Send an event to the <code>EventLoop</code> from which this proxy was …","Change <code>DeviceEvent</code> filter mode.","Sets this to <code>Exit</code>.","Sets this to <code>ExitWithCode</code><code>(code)</code>.","Sets this to <code>Poll</code>.","Sets this to <code>Wait</code>.","Sets this to wait until a timeout has expired.","Sets this to <code>WaitUntil</code><code>(instant)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Start building a new event loop, with the given type as …","Handle to a monitor.","Describes a fullscreen video mode of a monitor.","Returns the bit depth of this video mode, as in how many …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the monitor that this video mode is valid for. …","Returns a human-readable name of the monitor.","","","","","Returns the top-left corner position of the monitor …","Returns the refresh rate of this video mode in mHz.","The monitor refresh rate used by the system.","Returns the scale factor that can be used to map logical …","Returns the resolution of this video mode.","Returns the monitor’s resolution.","","","","","","","","","","Returns all fullscreen video modes supported by this …","","","Corresponds to <code>NSApplicationActivationPolicyAccessory</code>.","Corresponds to <code>NSApplicationActivationPolicy</code>.","Both <code>Option</code> keys are treated as <code>Alt</code>.","","Additional methods on <code>EventLoopWindowTarget</code> that are …","Additional methods on <code>MonitorHandle</code> that are specific to …","No special handling is applied for <code>Option</code> key.","The left <code>Option</code> key is treated as <code>Alt</code>.","The right <code>Option</code> key is treated as <code>Alt</code>.","Option as alt behavior.","Corresponds to <code>NSApplicationActivationPolicyProhibited</code>.","Corresponds to <code>NSApplicationActivationPolicyRegular</code>.","Additional methods on <code>WindowBuilder</code> that are specific to …","Additional methods on <code>Window</code> that are specific to MacOS.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns whether or not the window has shadow.","","Hide the entire application. In most applications this is …","Hide the other applications. In most applications this is …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the window’s edit state.","Returns the identifier of the monitor for Cocoa.","Returns a pointer to the NSScreen representing this …","Returns a pointer to the cocoa <code>NSView</code> that is used by this …","Returns a pointer to the cocoa <code>NSWindow</code> that is used by …","Getter for the <code>WindowExtMacOS::set_option_as_alt</code>.","Put the window in a state which indicates a file save is …","Sets whether or not the window has shadow.","Set option as alt behavior as described in <code>OptionAsAlt</code>.","Toggles a fullscreen mode that doesn’t require a new …","Returns whether or not the window is in simple fullscreen …","","","","","","","","","Window accepts click-through mouse events.","Used to prevent the application from automatically …","Sets the activation policy for the application.","Used to control whether a default menubar menu is created.","","Makes the window content appear behind the titlebar.","","Enables click-and-drag behavior for the entire window, not …","Set whether the <code>OptionAsAlt</code> key is interpreted as the <code>Alt</code> …","Hides the window title.","Hides the window titlebar buttons.","Hides the window titlebar.","Makes the titlebar transparent and allows the content to …","Additional methods on <code>EventLoop</code> to return control flow to …","A type provided by the user that can be passed through …","Initializes the <code>winit</code> event loop.","","","The window will always be below normal windows.","The window will always be on top of normal windows.","Self explanatory.","An error produced when using <code>Icon::from_rgba</code> with invalid …","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …","Produced when the length of the <code>rgba</code> argument isn’t …","","","","The cursor is confined to the window area.","","","Platform-specific","A simple crosshair.","The behavior of cursor grabbing.","Describes the appearance of the mouse cursor.","Use the dark variant.","The platform-dependent default cursor.","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","Indicate that some edge is to be moved. For example, the …","","","","Fullscreen modes.","Indicates something can be grabbed.","Indicates something is grabbed.","A hand (often used to indicate links in web browsers).","Help indicator (often rendered as a “?”)","An icon used for the window titlebar, taskbar, etc.","Generic IME purposes for use in <code>Window::set_ime_purpose</code>.","Platform-specific","Use the light variant.","The cursor is locked inside the window area to the certain …","","","Indicates something is to be moved.","","","","","No grabbing of the cursor is performed.","The default.","No special hints for the IME (default).","","","","Cursor showing that something cannot be done.","","","","Produced when underlying OS functionality failed to create …","The IME is used for password input.","Progress indicator. Shows that processing is being done. …","Defines the orientation that a window resize will be …","","","","","","","","The IME is used to input into a terminal.","Indicates text that may be selected or edited.","The theme variant to use.","Platform-specific","","","Program busy indicator.","","Represents a window.","Attributes to use when creating a window.","Object that allows building windows.","","Identifier of a window. Unique for each window.","A window level groups windows with respect to their …","","","","Returns the set containing all flags.","Returns the list of all the monitors available on the …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the monitor on which the window currently resides.","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Resizes the window with the left mouse button until the …","Moves the window with the left mouse button until the …","","Returns a dummy id, useful for unit testing.","Returns an empty set of flags.","Gets the enabled window buttons.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Brings the window to the front and sets input focus. Has …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Creates an icon from 32bpp RGBA data.","Gets the window’s current fullscreen state.","","Gets whether the window has keyboard focus.","","","","","","","Returns an identifier unique to the window.","Returns the position of the top-left hand corner of the …","Returns the physical size of the window’s client area.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Gets the window’s current decorations state.","","Returns <code>true</code> if no flags are currently stored.","Gets the window’s current maximized state.","Gets the window’s current minimized state.","Gets the window’s current resizable state.","Gets the window’s current visibility state.","","","","Creates a new Window for platforms where this is …","Initializes a new builder with default values.","Returns the complement of this set of flags.","","","","Returns the position of the top-left hand corner of the …","Returns the physical size of the entire window.","","","","","","Returns the primary monitor of the system.","Returns a <code>raw_window_handle::RawDisplayHandle</code> used by the …","Returns a <code>raw_window_handle::RawWindowHandle</code> for the Window","Removes the specified flags in-place.","Emits a <code>Event::RedrawRequested</code> event in the associated …","Requests user attention to the window, this has no effect …","","Returns window resize increments if any were set.","","Returns the scale factor that can be used to map logical …","Inserts or removes the specified flags depending on the …","Prevents the window contents from being captured by other …","Set grabbing mode on the cursor preventing it from leaving …","Modifies whether the window catches cursor events.","Modifies the cursor icon of the window.","Changes the position of the cursor in window coordinates.","Modifies the cursor’s visibility.","Turn window decorations on or off.","","Sets the enabled window buttons.","Sets the window to fullscreen or back.","","Sets whether the window should get IME events","Sets location of IME candidate box in client area …","Sets the IME purpose for the window using <code>ImePurpose</code>.","Modifies the inner size of the window.","Sets a maximum dimension size for the window.","Sets the window to maximized or back.","Sets a minimum dimension size for the window.","Sets the window to minimized or back","","Modifies the position of the window.","Sets whether the window is resizable or not.","Sets window resize increments.","","Sets the current window theme. Use <code>None</code> to fallback to …","Modifies the title of the window.","Change the window transparency state.","Modifies the window’s visibility.","Sets the window icon.","Change the window level.","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the current window theme.","Gets the current title of the window.","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Get whether the window will support transparency.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Get the current window attributes.","","","","Whether the window will be initially focused or not.","Prevents the window contents from being captured by other …","Sets whether the window should have a border, a title bar, …","","Sets the enabled window buttons.","Sets whether the window should be put into fullscreen upon …","","","Requests the window to be of specific dimensions.","Sets the maximum dimensions a window can have.","Request that the window is maximized upon creation.","Sets the minimum dimensions a window can have.","","","Build window with parent window.","Sets a desired initial position for the window.","Sets whether the window is resizable or not.","Build window with resize increments hint.","Sets a specific theme for the window.","Sets the initial title of the window in the title bar.","","","","","Sets whether the background of the window should be …","Sets whether the window will be initially visible or …","Sets the window icon.","Sets the window level.","","","","",""],"i":[0,0,0,0,0,0,0,6,10,0,0,6,10,0,0,0,0,0,2,3,4,5,6,10,2,3,4,5,6,10,1,2,3,4,5,6,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,2,3,4,5,6,10,2,3,4,5,2,3,4,5,6,10,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,10,10,10,1,3,5,2,4,2,3,4,5,4,5,2,3,4,5,6,10,2,3,4,5,6,10,3,5,6,10,2,3,4,5,6,10,2,4,6,10,2,3,4,5,6,10,2,3,4,5,6,10,2,3,4,5,6,10,0,4,5,2,3,2,3,0,23,0,23,0,23,22,25,23,22,25,22,22,23,23,22,22,25,25,23,22,25,23,22,25,22,23,22,25,23,22,25,23,22,25,23,22,25,42,27,42,42,33,42,42,42,42,42,0,31,42,42,42,33,0,42,27,42,38,36,42,42,31,42,42,35,42,42,42,31,31,31,42,42,42,31,0,29,0,35,42,31,42,0,35,42,36,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,31,0,42,42,42,42,31,31,42,0,31,30,42,42,42,42,42,33,42,42,42,42,42,42,42,42,42,42,0,31,42,42,42,42,27,42,42,40,42,41,29,42,42,29,42,42,40,42,31,0,33,0,31,33,0,31,33,31,36,42,42,42,42,42,29,42,42,38,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,31,40,42,42,42,42,42,42,41,42,42,30,42,35,39,42,42,42,42,42,42,42,42,31,29,29,39,33,31,30,29,42,40,42,42,27,31,0,42,42,42,42,31,42,42,0,36,42,29,42,42,42,33,31,0,31,0,31,31,31,42,42,42,42,29,42,0,42,42,42,30,42,42,42,42,42,42,42,42,0,29,42,42,42,42,27,27,27,27,27,27,27,27,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,32,42,27,27,27,27,27,37,27,32,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,30,32,34,35,36,39,40,42,27,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,27,27,27,27,37,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,27,27,27,27,32,34,35,36,39,40,42,27,37,27,27,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,27,27,37,27,29,34,38,27,32,42,27,37,27,34,27,27,34,27,27,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,31,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,27,27,34,87,88,89,90,91,88,87,92,93,92,93,94,94,94,95,96,95,96,97,98,99,100,101,102,103,104,105,99,98,100,106,101,107,97,102,102,103,99,98,108,99,100,101,103,107,108,107,98,97,53,0,0,0,0,0,0,0,51,51,53,51,53,51,51,46,49,46,50,48,51,52,53,49,46,50,48,51,52,53,48,50,51,52,53,50,51,52,53,53,49,49,48,51,53,49,51,52,53,51,52,53,49,46,50,51,52,52,53,49,46,50,48,51,52,53,52,53,46,46,49,46,50,48,51,52,53,49,48,53,46,49,46,49,49,50,46,51,51,51,51,51,51,50,51,52,53,52,49,46,50,48,51,52,53,49,46,50,48,51,52,53,49,46,50,48,51,52,53,48,48,48,49,48,0,0,62,62,54,62,54,62,54,62,54,62,54,62,54,62,54,62,62,54,62,54,62,62,54,62,54,54,54,62,54,54,62,54,54,62,54,62,54,62,62,54,62,54,62,54,54,0,0,61,0,65,0,0,0,65,65,65,0,61,61,0,0,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,65,61,65,109,61,110,110,61,65,109,111,111,109,109,109,109,109,109,109,109,61,65,61,65,61,65,61,65,112,113,113,113,112,112,112,112,112,112,112,112,112,0,114,114,73,73,78,78,73,0,75,80,67,73,73,72,73,73,77,73,0,0,76,73,80,73,74,73,75,0,73,73,73,73,0,0,77,76,72,67,67,73,73,73,73,73,72,78,79,74,74,74,73,73,73,73,80,79,73,0,73,73,73,74,74,74,73,79,73,0,0,73,73,73,74,0,0,0,0,0,0,73,73,71,67,68,67,67,67,67,67,67,67,68,80,69,70,66,71,72,73,74,75,76,77,67,78,79,68,80,69,70,66,71,72,73,74,75,76,77,67,78,79,66,69,70,66,71,72,73,74,75,76,77,67,78,79,69,70,66,71,72,73,74,75,76,77,67,78,79,70,67,67,67,71,68,71,66,71,73,77,78,79,67,68,68,68,70,67,68,71,70,72,73,74,75,76,77,67,78,79,70,72,73,74,75,76,77,67,78,79,67,68,80,80,69,70,66,71,72,73,74,75,76,77,67,67,67,67,67,78,79,68,68,80,69,70,70,66,71,72,73,73,74,75,76,77,67,78,79,67,67,67,67,69,68,71,68,68,70,72,73,74,67,68,68,68,71,67,67,67,68,80,69,70,66,71,72,73,74,75,76,77,67,78,79,67,68,68,67,68,68,68,68,71,71,71,68,66,67,68,68,68,68,68,71,70,67,71,71,68,68,68,67,68,68,71,68,71,68,67,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,80,67,67,67,68,68,71,69,70,66,71,72,73,74,75,76,77,67,78,79,80,67,66,71,68,80,69,70,66,71,72,73,74,75,76,77,67,78,79,68,80,69,70,66,71,72,73,74,75,76,77,67,78,79,68,80,69,70,66,71,72,73,74,75,76,77,67,78,79,67,71,66,71,71,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,115,116,116,116,116],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[7,[6]],[7,[6]],[7,[6]],8],6],[[[2,[9]]],[[2,[9]]]],[[[3,[9]]],[[3,[9]]]],[[[4,[9]]],[[4,[9]]]],[[[5,[9]]],[[5,[9]]]],[6,6],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[11]]]],[[],[[3,[11]]]],[[],[[4,[11]]]],[[],[[5,[11]]]],[[[2,[12]],[2,[12]]],13],[[[3,[12]],[3,[12]]],13],[[[4,[12]],[4,[12]]],13],[[[5,[12]],[5,[12]]],13],[[6,6],13],[[10,10],13],[[],13],[[],13],[[],13],[[],13],[[[2,[14]],15],16],[[[3,[14]],15],16],[[[4,[14]],15],16],[[[5,[14]],15],16],[[6,15],16],[[10,15],16],[[[17,[1]]],[[2,[1]]]],[[]],[[],[[2,[1]]]],[[]],[[[17,[1]]],[[3,[1]]]],[[],[[3,[1]]]],[[],[[4,[1]]]],[[]],[[[17,[1]]],[[4,[1]]]],[[]],[[[17,[1]]],[[5,[1]]]],[[],[[5,[1]]]],[[[4,[1]]],6],[[[5,[1]]],6],[[]],[[[3,[1]]],10],[[[2,[1]]],10],[[]],[8],[[[7,[[2,[1]]]],8],[[3,[1]]]],[[[7,[[4,[1]]]],8],[[5,[1]]]],[[[7,[[3,[1]]]],8],[[2,[1]]]],[[[7,[[5,[1]]]],8],[[4,[1]]]],[[[2,[18]],19]],[[[3,[18]],19]],[[[4,[18]],19]],[[[5,[18]],19]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],3],[[],4],[[],5],[[[7,[6]]],6],[[[7,[10]]],10],[[[3,[1]],8],[[2,[1]]]],[[[5,[1]],8],[[4,[1]]]],[[6,8],[[4,[1]]]],[[10,8],[[2,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],8],[[3,[1]]]],[[[4,[1]],8],[[5,[1]]]],[[6,8],[[5,[1]]]],[[10,8],[[3,[1]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[8,13],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[22,22],[[]],[[23,15],16],[[23,15],[[20,[24]]]],[[22,15],[[20,[24]]]],[[22,15],[[20,[24]]]],[[25,15],[[20,[24]]]],[[25,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],27],[27,13],[[27,27],27],[[27,27]],[[27,27],27],[[27,27]],[27,28],[[27,27],27],[[27,27]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[9]]],[[29,[9]]]],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,32],43],[[42,42],43],[[27,27],43],[27,27],[[27,27],13],[27,13],[[],27],0,[[27,27],27],[[],32],[[],27],[[[29,[12]],[29,[12]]],13],[[30,30],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[35,35],13],[[36,36],13],[[37,37],13],[[38,38],13],[[39,39],13],[[40,40],13],[[41,41],13],[[42,42],13],[[27,27],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[27,44]],[[[29,[14]],15],16],[[30,15],16],[[31,15],16],[[32,15],16],[[33,15],16],[[34,15],16],[[35,15],16],[[36,15],16],[[37,15],16],[[38,15],16],[[39,15],16],[[40,15],16],[[41,15],16],[[42,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],[[27,15],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[45,[27]]]],[28,27],[28,27],[44,27],[[32,19]],[[34,19]],[[35,19]],[[36,19]],[[39,19]],[[40,19]],[[42,19]],[[27,19]],0,[[27,27]],[[27,27],27],[[27,27],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,13],[27,13],0,[27,13],[29,[[20,[29,29]]]],0,[38,8],[27,27],[[32,32],[[45,[43]]]],[[42,42],[[45,[43]]]],[[27,27],[[45,[43]]]],0,[[27,27]],0,[[27,27,13]],[27,13],0,[[27,27],27],[[27,27]],[[27,27],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[45,[29]]]],[31,[[45,[31]]]],[[27,27]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[27,27],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[46,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,49],[50,50],[51,51],[[[52,[9]]],[[52,[9]]]],[53,53],[[]],[[]],[[]],[[]],[[53,53],43],[49,50],[[],49],[[],[[48,[11]]]],[[],51],[[],53],[49,46],[[51,51],13],[[[52,[12]],[52,[12]]],13],[[53,53],13],[[],13],[[],13],[[],13],[[49,15],16],[[46,15],16],[[50,15],16],[[51,15],16],[[[52,[14]],15],16],[[52,15],16],[[53,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[18]],19]],[[53,19]],[46],[46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[[],48],[[53,53],[[45,[43]]]],[46,[[45,[54]]]],[49,55],[46,55],[[49,56],57],[[49,56],58],[50,[[20,[52]]]],[[46,53]],[51],[[51,58]],[51],[51],[[51,59]],[[51,60]],[[]],[[]],[[]],[[]],[[],26],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[48,13],48],[[48,61],48],[[48,13],48],[[],49],[[],48],0,0,[62,63],[[]],[[]],[[]],[[]],[62,62],[54,54],[[]],[[]],[[62,62],43],[[54,54],43],[[62,62],13],[[54,54],13],[[],13],[[],13],[[62,15],16],[[62,15],16],[[54,15],16],[[]],[[]],[[62,19]],[[]],[[]],[62,54],[54,[[45,[26]]]],[54,28],[54,[[45,[64]]]],[[62,62],[[45,[43]]]],[[54,54],[[45,[43]]]],[54,[[3,[58]]]],[62,28],[54,[[45,[28]]]],[54,8],[62,[[5,[28]]]],[54,[[5,[28]]]],[[]],[[]],[[],26],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[54,47],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[61,61],[65,65],[[]],[[]],[[],61],[[],65],[[61,61],13],[[65,65],13],[[],13],[[],13],[[61,15],16],[[65,15],16],[[]],[[]],[[],13],[[61,19]],[[]],[[]],[[]],[[]],[[],13],[[],28],[[],[[45,[64]]]],[[],64],[[],64],[[],65],[13],[13],[65],[13,13],[[],13],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[13,66],[13],[61],[13],[13,66],[13,66],[13,66],[13,66],[65,66],[13,66],[13,66],[13,66],[13,66],0,0,[56,58],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],67],[68,47],[[67,67],67],[[67,67]],[[67,67],67],[[67,67]],[67,28],[[67,67],67],[[67,67]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[66,46],[[20,[68,25]]]],[69,69],[70,70],[66,66],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[67,67],[78,78],[79,79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[70,70],43],[[67,67],43],[67,67],[[67,67],13],0,[68,[[45,[54]]]],0,[[],66],[[],71],[[],73],[[],77],[[],78],[[],79],[[67,67],67],[[68,74],[[20,[23]]]],[68,[[20,[23]]]],[68],[[],70],[[],67],[68,67],0,[[70,70],13],[[72,72],13],[[73,73],13],[[74,74],13],[[75,75],13],[[76,76],13],[[77,77],13],[[67,67],13],[[78,78],13],[[79,79],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[67,44]],[[68,15],16],[[80,15],16],[[80,15],16],[[69,15],[[20,[24]]]],[[70,15],16],[[66,15],16],[[71,15],16],[[72,15],16],[[73,15],16],[[74,15],16],[[75,15],16],[[76,15],16],[[77,15],16],[[67,15],16],[[67,15],16],[[67,15],16],[[67,15],16],[[67,15],16],[[78,15],16],[[79,15],16],[68],[[]],[[]],[[]],[81,70],[[]],[[]],[[]],[[]],[74,73],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[45,[67]]]],[28,67],[28,67],[44,67],[[[83,[82]],28,28],[[20,[69,80]]]],[68,[[45,[75]]]],0,[68,13],[68,13],[[70,19]],[[72,19]],[[73,19]],[[74,19]],[[67,19]],[68,70],[68,[[20,[[3,[58]],22]]]],[68,[[5,[28]]]],0,[[67,67]],[[67,67],67],[[67,67],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,13],[68,13],[68,13],[67,13],[68,13],[68,[[45,[13]]]],[68,13],[68,[[45,[13]]]],0,0,0,[46,[[20,[68,25]]]],[[],66],[67,67],[68,64],[68,64],[68,65],[68,[[20,[[3,[58]],22]]]],[68,[[5,[28]]]],0,[[70,70],[[45,[43]]]],[[67,67],[[45,[43]]]],0,0,[68,[[45,[54]]]],[68,55],[68,84],[[67,67]],[68],[[68,[45,[77]]]],0,[68,[[45,[[5,[28]]]]]],0,[68,8],[[67,67,13]],[[68,13]],[[68,72],[[20,[23]]]],[[68,13],[[20,[23]]]],[[68,73]],[[68,[7,[10]]],[[20,[23]]]],[[68,13]],[[68,13]],[[68,13]],[[68,67]],[[68,[45,[75]]]],[[68,13]],[[68,13]],[[68,[7,[10]]]],[[68,79]],[[68,[7,[6]]]],[[68,[45,[[7,[6]]]]]],[[68,13]],[[68,[45,[[7,[6]]]]]],[[68,13]],[[68,65]],[[68,[7,[10]]]],[[68,13]],[[68,[45,[[7,[6]]]]]],[[68,13],13],[[68,[45,[76]]]],[[68,85]],[[68,13]],[[68,13]],[[68,[45,[69]]]],[[68,78]],[68,13],[80,[[45,[86]]]],[[67,67],67],[[67,67]],[[67,67],67],[68,[[45,[76]]]],[68,26],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[67,67]],[66,13],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[67,67],67],0,[66,71],0,0,[[66,13],66],[[66,13],66],[[66,13],66],[[66,13],66],[[66,13],66],[[66,67],66],[[66,[45,[75]]],66],[[66,13],66],[[66,13],66],[[66,[7,[6]]],66],[[66,[7,[6]]],66],[[66,13],66],[[66,[7,[6]]],66],[[66,13],66],[[66,65],66],[[66,[45,[84]]],66],[[66,[7,[10]]],66],[[66,13],66],[[66,[7,[6]]],66],[[66,[45,[76]]],66],[[66,[7,[26]]],66],[[66,13],66],[[66,13],66],[[66,13],66],[[66,13],66],[[66,13],66],[[66,13],66],[[66,[45,[69]]],66],[[66,78],66],0,0,0,0,0],"c":[613,729,730,731,864],"p":[[8,"Pixel",7],[3,"LogicalPosition",7],[3,"PhysicalPosition",7],[3,"LogicalSize",7],[3,"PhysicalSize",7],[4,"Size",7],[8,"Into",1424],[15,"f64"],[8,"Clone",1425],[4,"Position",7],[8,"Default",1426],[8,"PartialEq",1427],[15,"bool"],[8,"Debug",1428],[3,"Formatter",1428],[6,"Result",1428],[15,"array"],[8,"Hash",1429],[8,"Hasher",1429],[4,"Result",1430],[3,"TypeId",1431],[3,"NotSupportedError",148],[4,"ExternalError",148],[3,"Error",1428],[3,"OsError",148],[3,"String",1432],[3,"ModifiersState",186],[15,"u32"],[4,"Event",186],[4,"StartCause",186],[4,"WindowEvent",186],[3,"DeviceId",186],[4,"DeviceEvent",186],[3,"KeyboardInput",186],[4,"Ime",186],[4,"TouchPhase",186],[3,"Touch",186],[4,"Force",186],[4,"ElementState",186],[4,"MouseButton",186],[4,"MouseScrollDelta",186],[4,"VirtualKeyCode",186],[4,"Ordering",1427],[8,"IntoIterator",1433],[4,"Option",1434],[3,"EventLoopWindowTarget",742],[8,"Iterator",1435],[3,"EventLoopBuilder",742],[3,"EventLoop",742],[3,"EventLoopProxy",742],[4,"ControlFlow",742],[3,"EventLoopClosed",742],[4,"DeviceEventFilter",742],[3,"MonitorHandle",866],[4,"RawDisplayHandle",1436],[8,"FnMut",1437],[15,"never"],[15,"i32"],[3,"Duration",1438],[6,"Instant",1439],[4,"ActivationPolicy",915],[3,"VideoMode",866],[15,"u16"],[6,"c_void",1440],[4,"OptionAsAlt",915],[3,"WindowBuilder",988],[3,"WindowButtons",988],[3,"Window",988],[3,"Icon",988],[3,"WindowId",988],[3,"WindowAttributes",988],[4,"CursorGrabMode",988],[4,"CursorIcon",988],[4,"ResizeDirection",988],[4,"Fullscreen",988],[4,"Theme",988],[4,"UserAttentionType",988],[4,"WindowLevel",988],[4,"ImePurpose",988],[4,"BadIcon",988],[15,"u64"],[15,"u8"],[3,"Vec",1441],[4,"RawWindowHandle",1436],[15,"str"],[8,"Error",1442],[13,"Motion",693],[13,"Button",693],[13,"Text",693],[13,"MouseMotion",693],[13,"MouseWheel",693],[13,"DeviceEvent",700],[13,"WindowEvent",700],[13,"Calibrated",704],[13,"ResumeTimeReached",707],[13,"WaitCancelled",707],[13,"AxisMotion",711],[13,"MouseInput",711],[13,"MouseWheel",711],[13,"TouchpadMagnify",711],[13,"TouchpadRotate",711],[13,"KeyboardInput",711],[13,"CursorMoved",711],[13,"CursorEntered",711],[13,"CursorLeft",711],[13,"SmartMagnify",711],[13,"TouchpadPressure",711],[13,"ScaleFactorChanged",711],[8,"WindowExtMacOS",915],[8,"EventLoopWindowTargetExtMacOS",915],[8,"MonitorHandleExtMacOS",915],[8,"WindowBuilderExtMacOS",915],[8,"EventLoopBuilderExtMacOS",915],[8,"EventLoopExtRunReturn",985],[13,"ByteCountNotDivisibleBy4",1419],[13,"DimensionsVsPixelCount",1419]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
